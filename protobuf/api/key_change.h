/******************************************************************* 
 * Header file generated by Protoc for Embedded C.                 *
 * Version 1.0M4 (2013-03-31)                                      *
 *                                                                 *
 * Copyright (c) 2009-2013                                         *
 * Technische Universitaet Muenchen                                *
 * http://www4.in.tum.de/                                          *
 *                                                                 *
 * Source : Key_change.proto
 *                                                                 *
 * Do not edit.                                                    *
 *******************************************************************/

#ifndef _Key_change_H
#define _Key_change_H

#ifdef __cplusplus
  extern "C" {
#endif

#define MAX_BYTES_LENGTH 32

/*******************************************************************
 * Message: Key_change.proto, line 5
 *******************************************************************/

/* Maximum size of a serialized KeyChange-message, useful for buffer allocation. */
#define MAX_KeyChange_SIZE 79

/* Structure that holds a deserialized KeyChange-message. */
struct KeyChange {
    unsigned long _counter;
    int _ciphertext_len;
    char _ciphertext[MAX_BYTES_LENGTH];
    int _signature_len;
    char _signature[MAX_BYTES_LENGTH];
};

/*
 * Serialize a Person-message into the given buffer at offset and return
 * new offset for optional next message.
 */
int KeyChange_write_delimited_to(struct KeyChange *_KeyChange, void *_buffer, int offset);

/*
 * Serialize a Person-message together with its tag into the given buffer 
 * at offset and return new offset for optional next message.
 * Is useful if a Person-message is embedded in another message.
 */
int KeyChange_write_with_tag(struct KeyChange *_KeyChange, void *_buffer, int offset, int tag);

/*
 * Deserialize a Person-message from the given buffer at offset and return
 * new offset for optional next message.
 *
 * Note: All fields in _Person will be reset to 0 before _buffer is interpreted.
 */
int KeyChange_read_delimited_from(void *_buffer, struct KeyChange *_KeyChange, int offset);



#ifdef __cplusplus
  }
#endif

#endif

