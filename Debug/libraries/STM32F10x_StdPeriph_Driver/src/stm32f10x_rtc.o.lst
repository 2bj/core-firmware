   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rtc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RTC_ITConfig,"ax",%progbits
  19              		.align	2
  20              		.global	RTC_ITConfig
  21              		.thumb
  22              		.thumb_func
  24              	RTC_ITConfig:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @file    stm32f10x_rtc.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief   This file provides all the RTC firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #include "stm32f10x_rtc.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief RTC driver modules
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_TypesDefinitions
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */ 
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Defines
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #define RTC_LSB_MASK     ((uint32_t)0x0000FFFF)  /*!< RTC LSB Mask */
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** #define PRLH_MSB_MASK    ((uint32_t)0x000F0000)  /*!< RTC Prescaler MSB Mask */
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Macros
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Variables
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_FunctionPrototypes
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @}
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /** @defgroup RTC_Private_Functions
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @{
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Enables or disables the specified RTC interrupts.
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to be enabled or disabled.
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  NewState: new state of the specified RTC interrupts.
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be: ENABLE or DISABLE.
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ITConfig(uint16_t RTC_IT, FunctionalState NewState)
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
  27              		.loc 1 97 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 0246     		mov	r2, r0
  43 0008 0B46     		mov	r3, r1
  44 000a FA80     		strh	r2, [r7, #6]	@ movhi
  45 000c 7B71     		strb	r3, [r7, #5]
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (NewState != DISABLE)
  46              		.loc 1 102 0
  47 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
  48 0010 002B     		cmp	r3, #0
  49 0012 0ED0     		beq	.L2
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     RTC->CRH |= RTC_IT;
  50              		.loc 1 104 0
  51 0014 4FF42053 		mov	r3, #10240
  52 0018 C4F20003 		movt	r3, 16384
  53 001c 4FF42052 		mov	r2, #10240
  54 0020 C4F20002 		movt	r2, 16384
  55 0024 1288     		ldrh	r2, [r2, #0]	@ movhi
  56 0026 91B2     		uxth	r1, r2
  57 0028 FA88     		ldrh	r2, [r7, #6]	@ movhi
  58 002a 0A43     		orrs	r2, r2, r1
  59 002c 92B2     		uxth	r2, r2
  60 002e 1A80     		strh	r2, [r3, #0]	@ movhi
  61 0030 10E0     		b	.L1
  62              	.L2:
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     RTC->CRH &= (uint16_t)~RTC_IT;
  63              		.loc 1 108 0
  64 0032 4FF42053 		mov	r3, #10240
  65 0036 C4F20003 		movt	r3, 16384
  66 003a 4FF42052 		mov	r2, #10240
  67 003e C4F20002 		movt	r2, 16384
  68 0042 1288     		ldrh	r2, [r2, #0]	@ movhi
  69 0044 91B2     		uxth	r1, r2
  70 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
  71 0048 6FEA0202 		mvn	r2, r2
  72 004c 92B2     		uxth	r2, r2
  73 004e 0A40     		ands	r2, r2, r1
  74 0050 92B2     		uxth	r2, r2
  75 0052 1A80     		strh	r2, [r3, #0]	@ movhi
  76              	.L1:
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
  77              		.loc 1 110 0
  78 0054 07F10C07 		add	r7, r7, #12
  79 0058 BD46     		mov	sp, r7
  80 005a 80BC     		pop	{r7}
  81 005c 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE56:
  85 005e 00BF     		.section	.text.RTC_EnterConfigMode,"ax",%progbits
  86              		.align	2
  87              		.global	RTC_EnterConfigMode
  88              		.thumb
  89              		.thumb_func
  91              	RTC_EnterConfigMode:
  92              	.LFB57:
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Enters the RTC configuration mode.
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_EnterConfigMode(void)
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
  93              		.loc 1 118 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98 0000 80B4     		push	{r7}
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              	.LCFI4:
 104              		.cfi_def_cfa_register 7
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the CNF flag to enter in the Configuration Mode */
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL |= RTC_CRL_CNF;
 105              		.loc 1 120 0
 106 0004 4FF42053 		mov	r3, #10240
 107 0008 C4F20003 		movt	r3, 16384
 108 000c 4FF42052 		mov	r2, #10240
 109 0010 C4F20002 		movt	r2, 16384
 110 0014 9288     		ldrh	r2, [r2, #4]	@ movhi
 111 0016 92B2     		uxth	r2, r2
 112 0018 42F01002 		orr	r2, r2, #16
 113 001c 92B2     		uxth	r2, r2
 114 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 115              		.loc 1 121 0
 116 0020 BD46     		mov	sp, r7
 117 0022 80BC     		pop	{r7}
 118 0024 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE57:
 122 0026 00BF     		.section	.text.RTC_ExitConfigMode,"ax",%progbits
 123              		.align	2
 124              		.global	RTC_ExitConfigMode
 125              		.thumb
 126              		.thumb_func
 128              	RTC_ExitConfigMode:
 129              	.LFB58:
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Exits from the RTC configuration mode.
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ExitConfigMode(void)
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 130              		.loc 1 129 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              	.LCFI5:
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 7, -4
 139 0002 00AF     		add	r7, sp, #0
 140              	.LCFI6:
 141              		.cfi_def_cfa_register 7
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Reset the CNF flag to exit from the Configuration Mode */
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~((uint16_t)RTC_CRL_CNF); 
 142              		.loc 1 131 0
 143 0004 4FF42053 		mov	r3, #10240
 144 0008 C4F20003 		movt	r3, 16384
 145 000c 4FF42052 		mov	r2, #10240
 146 0010 C4F20002 		movt	r2, 16384
 147 0014 9288     		ldrh	r2, [r2, #4]	@ movhi
 148 0016 92B2     		uxth	r2, r2
 149 0018 22F01002 		bic	r2, r2, #16
 150 001c 92B2     		uxth	r2, r2
 151 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 152              		.loc 1 132 0
 153 0020 BD46     		mov	sp, r7
 154 0022 80BC     		pop	{r7}
 155 0024 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE58:
 159 0026 00BF     		.section	.text.RTC_GetCounter,"ax",%progbits
 160              		.align	2
 161              		.global	RTC_GetCounter
 162              		.thumb
 163              		.thumb_func
 165              	RTC_GetCounter:
 166              	.LFB59:
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC counter value.
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval RTC counter value.
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** uint32_t RTC_GetCounter(void)
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 167              		.loc 1 140 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              	.LCFI7:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 83B0     		sub	sp, sp, #12
 177              	.LCFI8:
 178              		.cfi_def_cfa_offset 16
 179 0004 00AF     		add	r7, sp, #0
 180              	.LCFI9:
 181              		.cfi_def_cfa_register 7
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   uint16_t high1 = 0, high2 = 0, low = 0;
 182              		.loc 1 141 0
 183 0006 4FF00003 		mov	r3, #0
 184 000a FB80     		strh	r3, [r7, #6]	@ movhi
 185 000c 4FF00003 		mov	r3, #0
 186 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 187 0012 4FF00003 		mov	r3, #0
 188 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   high1 = RTC->CNTH;
 189              		.loc 1 143 0
 190 0018 4FF42053 		mov	r3, #10240
 191 001c C4F20003 		movt	r3, 16384
 192 0020 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 193 0022 FB80     		strh	r3, [r7, #6]	@ movhi
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   low   = RTC->CNTL;
 194              		.loc 1 144 0
 195 0024 4FF42053 		mov	r3, #10240
 196 0028 C4F20003 		movt	r3, 16384
 197 002c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 198 002e 7B80     		strh	r3, [r7, #2]	@ movhi
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   high2 = RTC->CNTH;
 199              		.loc 1 145 0
 200 0030 4FF42053 		mov	r3, #10240
 201 0034 C4F20003 		movt	r3, 16384
 202 0038 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 203 003a BB80     		strh	r3, [r7, #4]	@ movhi
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (high1 != high2)
 204              		.loc 1 147 0
 205 003c FA88     		ldrh	r2, [r7, #6]
 206 003e BB88     		ldrh	r3, [r7, #4]
 207 0040 9A42     		cmp	r2, r3
 208 0042 0AD0     		beq	.L7
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   { /* In this case the counter roll over during reading of CNTL and CNTH registers, 
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****        read again CNTL register then return the counter value */
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     return (((uint32_t) high2 << 16 ) | RTC->CNTL);
 209              		.loc 1 150 0
 210 0044 BB88     		ldrh	r3, [r7, #4]
 211 0046 4FEA0342 		lsl	r2, r3, #16
 212 004a 4FF42053 		mov	r3, #10240
 213 004e C4F20003 		movt	r3, 16384
 214 0052 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 215 0054 9BB2     		uxth	r3, r3
 216 0056 1343     		orrs	r3, r3, r2
 217 0058 04E0     		b	.L8
 218              	.L7:
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   { /* No counter roll over during reading of CNTL and CNTH registers, counter 
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****        value is equal to first value of CNTL and CNTH */
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     return (((uint32_t) high1 << 16 ) | low);
 219              		.loc 1 155 0
 220 005a FB88     		ldrh	r3, [r7, #6]
 221 005c 4FEA0342 		lsl	r2, r3, #16
 222 0060 7B88     		ldrh	r3, [r7, #2]
 223 0062 1343     		orrs	r3, r3, r2
 224              	.L8:
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 225              		.loc 1 157 0
 226 0064 1846     		mov	r0, r3
 227 0066 07F10C07 		add	r7, r7, #12
 228 006a BD46     		mov	sp, r7
 229 006c 80BC     		pop	{r7}
 230 006e 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE59:
 234              		.section	.text.RTC_SetCounter,"ax",%progbits
 235              		.align	2
 236              		.global	RTC_SetCounter
 237              		.thumb
 238              		.thumb_func
 240              	RTC_SetCounter:
 241              	.LFB60:
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC counter value.
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  CounterValue: RTC counter new value.
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetCounter(uint32_t CounterValue)
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** { 
 242              		.loc 1 165 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI10:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 82B0     		sub	sp, sp, #8
 252              	.LCFI11:
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              	.LCFI12:
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 258              		.loc 1 166 0
 259 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER MSB word */
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTH = CounterValue >> 16;
 260              		.loc 1 168 0
 261 000c 4FF42053 		mov	r3, #10240
 262 0010 C4F20003 		movt	r3, 16384
 263 0014 7A68     		ldr	r2, [r7, #4]
 264 0016 4FEA1242 		lsr	r2, r2, #16
 265 001a 92B2     		uxth	r2, r2
 266 001c 1A83     		strh	r2, [r3, #24]	@ movhi
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC COUNTER LSB word */
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CNTL = (CounterValue & RTC_LSB_MASK);
 267              		.loc 1 170 0
 268 001e 4FF42053 		mov	r3, #10240
 269 0022 C4F20003 		movt	r3, 16384
 270 0026 7A68     		ldr	r2, [r7, #4]
 271 0028 92B2     		uxth	r2, r2
 272 002a 9A83     		strh	r2, [r3, #28]	@ movhi
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 273              		.loc 1 171 0
 274 002c FFF7FEFF 		bl	RTC_ExitConfigMode
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 275              		.loc 1 172 0
 276 0030 07F10807 		add	r7, r7, #8
 277 0034 BD46     		mov	sp, r7
 278 0036 80BD     		pop	{r7, pc}
 279              		.cfi_endproc
 280              	.LFE60:
 282              		.section	.text.RTC_SetPrescaler,"ax",%progbits
 283              		.align	2
 284              		.global	RTC_SetPrescaler
 285              		.thumb
 286              		.thumb_func
 288              	RTC_SetPrescaler:
 289              	.LFB61:
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC prescaler value.
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  PrescalerValue: RTC prescaler new value.
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetPrescaler(uint32_t PrescalerValue)
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 290              		.loc 1 180 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 8
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              	.LCFI13:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              	.LCFI14:
 301              		.cfi_def_cfa_offset 16
 302 0004 00AF     		add	r7, sp, #0
 303              	.LCFI15:
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_PRESCALER(PrescalerValue));
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 306              		.loc 1 184 0
 307 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER MSB word */
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLH = (PrescalerValue & PRLH_MSB_MASK) >> 16;
 308              		.loc 1 186 0
 309 000c 4FF42053 		mov	r3, #10240
 310 0010 C4F20003 		movt	r3, 16384
 311 0014 7A68     		ldr	r2, [r7, #4]
 312 0016 02F47022 		and	r2, r2, #983040
 313 001a 4FEA1242 		lsr	r2, r2, #16
 314 001e 92B2     		uxth	r2, r2
 315 0020 1A81     		strh	r2, [r3, #8]	@ movhi
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set RTC PRESCALER LSB word */
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->PRLL = (PrescalerValue & RTC_LSB_MASK);
 316              		.loc 1 188 0
 317 0022 4FF42053 		mov	r3, #10240
 318 0026 C4F20003 		movt	r3, 16384
 319 002a 7A68     		ldr	r2, [r7, #4]
 320 002c 92B2     		uxth	r2, r2
 321 002e 9A81     		strh	r2, [r3, #12]	@ movhi
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 322              		.loc 1 189 0
 323 0030 FFF7FEFF 		bl	RTC_ExitConfigMode
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 324              		.loc 1 190 0
 325 0034 07F10807 		add	r7, r7, #8
 326 0038 BD46     		mov	sp, r7
 327 003a 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE61:
 331              		.section	.text.RTC_SetAlarm,"ax",%progbits
 332              		.align	2
 333              		.global	RTC_SetAlarm
 334              		.thumb
 335              		.thumb_func
 337              	RTC_SetAlarm:
 338              	.LFB62:
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Sets the RTC alarm value.
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  AlarmValue: RTC alarm new value.
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_SetAlarm(uint32_t AlarmValue)
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {  
 339              		.loc 1 198 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              	.LCFI16:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 82B0     		sub	sp, sp, #8
 349              	.LCFI17:
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              	.LCFI18:
 353              		.cfi_def_cfa_register 7
 354 0006 7860     		str	r0, [r7, #4]
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_EnterConfigMode();
 355              		.loc 1 199 0
 356 0008 FFF7FEFF 		bl	RTC_EnterConfigMode
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the ALARM MSB word */
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRH = AlarmValue >> 16;
 357              		.loc 1 201 0
 358 000c 4FF42053 		mov	r3, #10240
 359 0010 C4F20003 		movt	r3, 16384
 360 0014 7A68     		ldr	r2, [r7, #4]
 361 0016 4FEA1242 		lsr	r2, r2, #16
 362 001a 92B2     		uxth	r2, r2
 363 001c 1A84     		strh	r2, [r3, #32]	@ movhi
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Set the ALARM LSB word */
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->ALRL = (AlarmValue & RTC_LSB_MASK);
 364              		.loc 1 203 0
 365 001e 4FF42053 		mov	r3, #10240
 366 0022 C4F20003 		movt	r3, 16384
 367 0026 7A68     		ldr	r2, [r7, #4]
 368 0028 92B2     		uxth	r2, r2
 369 002a 9A84     		strh	r2, [r3, #36]	@ movhi
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC_ExitConfigMode();
 370              		.loc 1 204 0
 371 002c FFF7FEFF 		bl	RTC_ExitConfigMode
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 372              		.loc 1 205 0
 373 0030 07F10807 		add	r7, r7, #8
 374 0034 BD46     		mov	sp, r7
 375 0036 80BD     		pop	{r7, pc}
 376              		.cfi_endproc
 377              	.LFE62:
 379              		.section	.text.RTC_GetDivider,"ax",%progbits
 380              		.align	2
 381              		.global	RTC_GetDivider
 382              		.thumb
 383              		.thumb_func
 385              	RTC_GetDivider:
 386              	.LFB63:
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Gets the RTC divider value.
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval RTC Divider value.
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** uint32_t RTC_GetDivider(void)
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 387              		.loc 1 213 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392 0000 80B4     		push	{r7}
 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 83B0     		sub	sp, sp, #12
 397              	.LCFI20:
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              	.LCFI21:
 401              		.cfi_def_cfa_register 7
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   uint32_t tmp = 0x00;
 402              		.loc 1 214 0
 403 0006 4FF00003 		mov	r3, #0
 404 000a 7B60     		str	r3, [r7, #4]
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp = ((uint32_t)RTC->DIVH & (uint32_t)0x000F) << 16;
 405              		.loc 1 215 0
 406 000c 4FF42053 		mov	r3, #10240
 407 0010 C4F20003 		movt	r3, 16384
 408 0014 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 409 0016 9BB2     		uxth	r3, r3
 410 0018 03F00F03 		and	r3, r3, #15
 411 001c 4FEA0343 		lsl	r3, r3, #16
 412 0020 7B60     		str	r3, [r7, #4]
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   tmp |= RTC->DIVL;
 413              		.loc 1 216 0
 414 0022 4FF42053 		mov	r3, #10240
 415 0026 C4F20003 		movt	r3, 16384
 416 002a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 417 002c 9BB2     		uxth	r3, r3
 418 002e 7A68     		ldr	r2, [r7, #4]
 419 0030 1343     		orrs	r3, r3, r2
 420 0032 7B60     		str	r3, [r7, #4]
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return tmp;
 421              		.loc 1 217 0
 422 0034 7B68     		ldr	r3, [r7, #4]
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 423              		.loc 1 218 0
 424 0036 1846     		mov	r0, r3
 425 0038 07F10C07 		add	r7, r7, #12
 426 003c BD46     		mov	sp, r7
 427 003e 80BC     		pop	{r7}
 428 0040 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE63:
 432 0042 00BF     		.section	.text.RTC_WaitForLastTask,"ax",%progbits
 433              		.align	2
 434              		.global	RTC_WaitForLastTask
 435              		.thumb
 436              		.thumb_func
 438              	RTC_WaitForLastTask:
 439              	.LFB64:
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Waits until last write operation on RTC registers has finished.
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any write to RTC registers.
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_WaitForLastTask(void)
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 440              		.loc 1 227 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              	.LCFI22:
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 00AF     		add	r7, sp, #0
 450              	.LCFI23:
 451              		.cfi_def_cfa_register 7
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Loop until RTOFF flag is set */
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RTOFF) == (uint16_t)RESET)
 452              		.loc 1 229 0
 453 0004 00BF     		nop
 454              	.L15:
 455              		.loc 1 229 0 is_stmt 0 discriminator 1
 456 0006 4FF42053 		mov	r3, #10240
 457 000a C4F20003 		movt	r3, 16384
 458 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 459 0010 9BB2     		uxth	r3, r3
 460 0012 03F02003 		and	r3, r3, #32
 461 0016 002B     		cmp	r3, #0
 462 0018 F5D0     		beq	.L15
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 463              		.loc 1 232 0 is_stmt 1
 464 001a BD46     		mov	sp, r7
 465 001c 80BC     		pop	{r7}
 466 001e 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE64:
 470              		.section	.text.RTC_WaitForSynchro,"ax",%progbits
 471              		.align	2
 472              		.global	RTC_WaitForSynchro
 473              		.thumb
 474              		.thumb_func
 476              	RTC_WaitForSynchro:
 477              	.LFB65:
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   are synchronized with RTC APB clock.
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   or an APB clock stop.
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  None
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_WaitForSynchro(void)
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 478              		.loc 1 243 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483 0000 80B4     		push	{r7}
 484              	.LCFI24:
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0002 00AF     		add	r7, sp, #0
 488              	.LCFI25:
 489              		.cfi_def_cfa_register 7
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear RSF flag */
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG_RSF;
 490              		.loc 1 245 0
 491 0004 4FF42053 		mov	r3, #10240
 492 0008 C4F20003 		movt	r3, 16384
 493 000c 4FF42052 		mov	r2, #10240
 494 0010 C4F20002 		movt	r2, 16384
 495 0014 9288     		ldrh	r2, [r2, #4]	@ movhi
 496 0016 92B2     		uxth	r2, r2
 497 0018 22F00802 		bic	r2, r2, #8
 498 001c 92B2     		uxth	r2, r2
 499 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Loop until RSF flag is set */
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   while ((RTC->CRL & RTC_FLAG_RSF) == (uint16_t)RESET)
 500              		.loc 1 247 0
 501 0020 00BF     		nop
 502              	.L17:
 503              		.loc 1 247 0 is_stmt 0 discriminator 1
 504 0022 4FF42053 		mov	r3, #10240
 505 0026 C4F20003 		movt	r3, 16384
 506 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 507 002c 9BB2     		uxth	r3, r3
 508 002e 03F00803 		and	r3, r3, #8
 509 0032 002B     		cmp	r3, #0
 510 0034 F5D0     		beq	.L17
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 511              		.loc 1 250 0 is_stmt 1
 512 0036 BD46     		mov	sp, r7
 513 0038 80BC     		pop	{r7}
 514 003a 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE65:
 518              		.section	.text.RTC_GetFlagStatus,"ax",%progbits
 519              		.align	2
 520              		.global	RTC_GetFlagStatus
 521              		.thumb
 522              		.thumb_func
 524              	RTC_GetFlagStatus:
 525              	.LFB66:
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC flag is set or not.
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to check.
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be one the following values:
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RTOFF: RTC Operation OFF flag
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval The new state of RTC_FLAG (SET or RESET).
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** FlagStatus RTC_GetFlagStatus(uint16_t RTC_FLAG)
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 526              		.loc 1 264 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 16
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531 0000 80B4     		push	{r7}
 532              	.LCFI26:
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 0002 85B0     		sub	sp, sp, #20
 536              	.LCFI27:
 537              		.cfi_def_cfa_offset 24
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI28:
 540              		.cfi_def_cfa_register 7
 541 0006 0346     		mov	r3, r0
 542 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   FlagStatus bitstatus = RESET;
 543              		.loc 1 265 0
 544 000a 4FF00003 		mov	r3, #0
 545 000e FB73     		strb	r3, [r7, #15]
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_FLAG(RTC_FLAG)); 
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if ((RTC->CRL & RTC_FLAG) != (uint16_t)RESET)
 546              		.loc 1 270 0
 547 0010 4FF42053 		mov	r3, #10240
 548 0014 C4F20003 		movt	r3, 16384
 549 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 550 001a 9AB2     		uxth	r2, r3
 551 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 552 001e 1340     		ands	r3, r3, r2
 553 0020 9BB2     		uxth	r3, r3
 554 0022 002B     		cmp	r3, #0
 555 0024 03D0     		beq	.L19
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 556              		.loc 1 272 0
 557 0026 4FF00103 		mov	r3, #1
 558 002a FB73     		strb	r3, [r7, #15]
 559 002c 02E0     		b	.L20
 560              	.L19:
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 561              		.loc 1 276 0
 562 002e 4FF00003 		mov	r3, #0
 563 0032 FB73     		strb	r3, [r7, #15]
 564              	.L20:
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return bitstatus;
 565              		.loc 1 278 0
 566 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 567              		.loc 1 279 0
 568 0036 1846     		mov	r0, r3
 569 0038 07F11407 		add	r7, r7, #20
 570 003c BD46     		mov	sp, r7
 571 003e 80BC     		pop	{r7}
 572 0040 7047     		bx	lr
 573              		.cfi_endproc
 574              	.LFE66:
 576 0042 00BF     		.section	.text.RTC_ClearFlag,"ax",%progbits
 577              		.align	2
 578              		.global	RTC_ClearFlag
 579              		.thumb
 580              		.thumb_func
 582              	RTC_ClearFlag:
 583              	.LFB67:
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's pending flags.
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_FLAG: specifies the flag to clear.
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_RSF: Registers Synchronized flag. This flag is cleared only after
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *                        an APB reset or an APB Clock stop.
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_OW: Overflow flag
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_ALR: Alarm flag
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_FLAG_SEC: Second flag
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ClearFlag(uint16_t RTC_FLAG)
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 584              		.loc 1 293 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 8
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589 0000 80B4     		push	{r7}
 590              	.LCFI29:
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 7, -4
 593 0002 83B0     		sub	sp, sp, #12
 594              	.LCFI30:
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              	.LCFI31:
 598              		.cfi_def_cfa_register 7
 599 0006 0346     		mov	r3, r0
 600 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_CLEAR_FLAG(RTC_FLAG)); 
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC flag */
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_FLAG;
 601              		.loc 1 298 0
 602 000a 4FF42053 		mov	r3, #10240
 603 000e C4F20003 		movt	r3, 16384
 604 0012 4FF42052 		mov	r2, #10240
 605 0016 C4F20002 		movt	r2, 16384
 606 001a 9288     		ldrh	r2, [r2, #4]	@ movhi
 607 001c 91B2     		uxth	r1, r2
 608 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
 609 0020 6FEA0202 		mvn	r2, r2
 610 0024 92B2     		uxth	r2, r2
 611 0026 0A40     		ands	r2, r2, r1
 612 0028 92B2     		uxth	r2, r2
 613 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 614              		.loc 1 299 0
 615 002c 07F10C07 		add	r7, r7, #12
 616 0030 BD46     		mov	sp, r7
 617 0032 80BC     		pop	{r7}
 618 0034 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE67:
 622 0036 00BF     		.section	.text.RTC_GetITStatus,"ax",%progbits
 623              		.align	2
 624              		.global	RTC_GetITStatus
 625              		.thumb
 626              		.thumb_func
 628              	RTC_GetITStatus:
 629              	.LFB68:
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Checks whether the specified RTC interrupt has occurred or not.
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the RTC interrupts sources to check.
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be one of the following values:
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval The new state of the RTC_IT (SET or RESET).
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** ITStatus RTC_GetITStatus(uint16_t RTC_IT)
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 630              		.loc 1 311 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 16
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635 0000 80B4     		push	{r7}
 636              	.LCFI32:
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 7, -4
 639 0002 85B0     		sub	sp, sp, #20
 640              	.LCFI33:
 641              		.cfi_def_cfa_offset 24
 642 0004 00AF     		add	r7, sp, #0
 643              	.LCFI34:
 644              		.cfi_def_cfa_register 7
 645 0006 0346     		mov	r3, r0
 646 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   ITStatus bitstatus = RESET;
 647              		.loc 1 312 0
 648 000a 4FF00003 		mov	r3, #0
 649 000e FB73     		strb	r3, [r7, #15]
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_GET_IT(RTC_IT)); 
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   bitstatus = (ITStatus)(RTC->CRL & RTC_IT);
 650              		.loc 1 316 0
 651 0010 4FF42053 		mov	r3, #10240
 652 0014 C4F20003 		movt	r3, 16384
 653 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 654 001a 9BB2     		uxth	r3, r3
 655 001c DAB2     		uxtb	r2, r3
 656 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 657 0020 DBB2     		uxtb	r3, r3
 658 0022 1340     		ands	r3, r3, r2
 659 0024 FB73     		strb	r3, [r7, #15]
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   if (((RTC->CRH & RTC_IT) != (uint16_t)RESET) && (bitstatus != (uint16_t)RESET))
 660              		.loc 1 317 0
 661 0026 4FF42053 		mov	r3, #10240
 662 002a C4F20003 		movt	r3, 16384
 663 002e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 664 0030 9AB2     		uxth	r2, r3
 665 0032 FB88     		ldrh	r3, [r7, #6]	@ movhi
 666 0034 1340     		ands	r3, r3, r2
 667 0036 9BB2     		uxth	r3, r3
 668 0038 002B     		cmp	r3, #0
 669 003a 06D0     		beq	.L24
 670              		.loc 1 317 0 is_stmt 0 discriminator 1
 671 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 672 003e 002B     		cmp	r3, #0
 673 0040 03D0     		beq	.L24
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = SET;
 674              		.loc 1 319 0 is_stmt 1
 675 0042 4FF00103 		mov	r3, #1
 676 0046 FB73     		strb	r3, [r7, #15]
 677 0048 02E0     		b	.L25
 678              	.L24:
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   else
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   {
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****     bitstatus = RESET;
 679              		.loc 1 323 0
 680 004a 4FF00003 		mov	r3, #0
 681 004e FB73     		strb	r3, [r7, #15]
 682              	.L25:
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   }
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   return bitstatus;
 683              		.loc 1 325 0
 684 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 685              		.loc 1 326 0
 686 0052 1846     		mov	r0, r3
 687 0054 07F11407 		add	r7, r7, #20
 688 0058 BD46     		mov	sp, r7
 689 005a 80BC     		pop	{r7}
 690 005c 7047     		bx	lr
 691              		.cfi_endproc
 692              	.LFE68:
 694 005e 00BF     		.section	.text.RTC_ClearITPendingBit,"ax",%progbits
 695              		.align	2
 696              		.global	RTC_ClearITPendingBit
 697              		.thumb
 698              		.thumb_func
 700              	RTC_ClearITPendingBit:
 701              	.LFB69:
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** 
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** /**
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @brief  Clears the RTC's interrupt pending bits.
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @param  RTC_IT: specifies the interrupt pending bit to clear.
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *   This parameter can be any combination of the following values:
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_OW: Overflow interrupt
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_ALR: Alarm interrupt
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   *     @arg RTC_IT_SEC: Second interrupt
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   * @retval None
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   */
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** void RTC_ClearITPendingBit(uint16_t RTC_IT)
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** {
 702              		.loc 1 338 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707 0000 80B4     		push	{r7}
 708              	.LCFI35:
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
 711 0002 83B0     		sub	sp, sp, #12
 712              	.LCFI36:
 713              		.cfi_def_cfa_offset 16
 714 0004 00AF     		add	r7, sp, #0
 715              	.LCFI37:
 716              		.cfi_def_cfa_register 7
 717 0006 0346     		mov	r3, r0
 718 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Check the parameters */
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   assert_param(IS_RTC_IT(RTC_IT));  
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   /* Clear the corresponding RTC pending bit */
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c ****   RTC->CRL &= (uint16_t)~RTC_IT;
 719              		.loc 1 343 0
 720 000a 4FF42053 		mov	r3, #10240
 721 000e C4F20003 		movt	r3, 16384
 722 0012 4FF42052 		mov	r2, #10240
 723 0016 C4F20002 		movt	r2, 16384
 724 001a 9288     		ldrh	r2, [r2, #4]	@ movhi
 725 001c 91B2     		uxth	r1, r2
 726 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
 727 0020 6FEA0202 		mvn	r2, r2
 728 0024 92B2     		uxth	r2, r2
 729 0026 0A40     		ands	r2, r2, r1
 730 0028 92B2     		uxth	r2, r2
 731 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c **** }
 732              		.loc 1 344 0
 733 002c 07F10C07 		add	r7, r7, #12
 734 0030 BD46     		mov	sp, r7
 735 0032 80BC     		pop	{r7}
 736 0034 7047     		bx	lr
 737              		.cfi_endproc
 738              	.LFE69:
 740 0036 00BF     		.text
 741              	.Letext0:
 742              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 743              		.file 3 "/Users/zac/code/spark/marvin/libraries/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 744              		.file 4 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rtc.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:19     .text.RTC_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:24     .text.RTC_ITConfig:0000000000000000 RTC_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:86     .text.RTC_EnterConfigMode:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:91     .text.RTC_EnterConfigMode:0000000000000000 RTC_EnterConfigMode
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:123    .text.RTC_ExitConfigMode:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:128    .text.RTC_ExitConfigMode:0000000000000000 RTC_ExitConfigMode
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:160    .text.RTC_GetCounter:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:165    .text.RTC_GetCounter:0000000000000000 RTC_GetCounter
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:235    .text.RTC_SetCounter:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:240    .text.RTC_SetCounter:0000000000000000 RTC_SetCounter
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:283    .text.RTC_SetPrescaler:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:288    .text.RTC_SetPrescaler:0000000000000000 RTC_SetPrescaler
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:332    .text.RTC_SetAlarm:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:337    .text.RTC_SetAlarm:0000000000000000 RTC_SetAlarm
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:380    .text.RTC_GetDivider:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:385    .text.RTC_GetDivider:0000000000000000 RTC_GetDivider
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:433    .text.RTC_WaitForLastTask:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:438    .text.RTC_WaitForLastTask:0000000000000000 RTC_WaitForLastTask
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:471    .text.RTC_WaitForSynchro:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:476    .text.RTC_WaitForSynchro:0000000000000000 RTC_WaitForSynchro
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:519    .text.RTC_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:524    .text.RTC_GetFlagStatus:0000000000000000 RTC_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:577    .text.RTC_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:582    .text.RTC_ClearFlag:0000000000000000 RTC_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:623    .text.RTC_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:628    .text.RTC_GetITStatus:0000000000000000 RTC_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:695    .text.RTC_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccFtudx0.s:700    .text.RTC_ClearITPendingBit:0000000000000000 RTC_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.31.74a586c036c8ee5d9205c6728cc8d6ab
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.64.fb43f578fb8e8a986bfbace5bbe63174

NO UNDEFINED SYMBOLS
