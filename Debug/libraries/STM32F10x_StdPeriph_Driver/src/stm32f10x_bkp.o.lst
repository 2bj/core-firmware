   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_bkp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.BKP_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	BKP_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	BKP_DeInit:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @file    stm32f10x_bkp.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief   This file provides all the BKP firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #include "stm32f10x_bkp.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #include "stm32f10x_rcc.h"
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP 
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief BKP driver modules
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_TypesDefinitions
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @}
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Defines
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* ------------ BKP registers bit address in the alias region --------------- */
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define BKP_OFFSET        (BKP_BASE - PERIPH_BASE)
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* --- CR Register ----*/
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* Alias word address of TPAL bit */
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CR_OFFSET         (BKP_OFFSET + 0x30)
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define TPAL_BitNumber    0x01
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CR_TPAL_BB        (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPAL_BitNumber * 4))
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* Alias word address of TPE bit */
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define TPE_BitNumber     0x00
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CR_TPE_BB         (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPE_BitNumber * 4))
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* --- CSR Register ---*/
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* Alias word address of TPIE bit */
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CSR_OFFSET        (BKP_OFFSET + 0x34)
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define TPIE_BitNumber    0x02
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CSR_TPIE_BB       (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TPIE_BitNumber * 4))
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* Alias word address of TIF bit */
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define TIF_BitNumber     0x09
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CSR_TIF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TIF_BitNumber * 4))
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* Alias word address of TEF bit */
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define TEF_BitNumber     0x08
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define CSR_TEF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEF_BitNumber * 4))
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* ---------------------- BKP registers bit mask ------------------------ */
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /* RTCCR register bit mask */
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define RTCCR_CAL_MASK    ((uint16_t)0xFF80)
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** #define RTCCR_MASK        ((uint16_t)0xFC7F)
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @}
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */ 
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Macros
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @}
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Variables
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @}
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_FunctionPrototypes
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @}
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Functions
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @{
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Deinitializes the BKP peripheral registers to their default reset values.
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  None
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_DeInit(void)
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
  27              		.loc 1 127 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
  39              		.loc 1 128 0
  40 0004 4FF00100 		mov	r0, #1
  41 0008 FFF7FEFF 		bl	RCC_BackupResetCmd
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
  42              		.loc 1 129 0
  43 000c 4FF00000 		mov	r0, #0
  44 0010 FFF7FEFF 		bl	RCC_BackupResetCmd
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
  45              		.loc 1 130 0
  46 0014 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE56:
  50 0016 00BF     		.section	.text.BKP_TamperPinLevelConfig,"ax",%progbits
  51              		.align	2
  52              		.global	BKP_TamperPinLevelConfig
  53              		.thumb
  54              		.thumb_func
  56              	BKP_TamperPinLevelConfig:
  57              	.LFB57:
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Configures the Tamper Pin active level.
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  BKP_TamperPinLevel: specifies the Tamper Pin active level.
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_High: Tamper pin active on high level
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_Low: Tamper pin active on low level
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel)
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
  58              		.loc 1 141 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0000 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0002 83B0     		sub	sp, sp, #12
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 16
  70 0004 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0006 0346     		mov	r3, r0
  74 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_TAMPER_PIN_LEVEL(BKP_TamperPinLevel));
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPAL_BB = BKP_TamperPinLevel;
  75              		.loc 1 144 0
  76 000a 48F20463 		movw	r3, #34308
  77 000e C4F20D23 		movt	r3, 16909
  78 0012 FA88     		ldrh	r2, [r7, #6]
  79 0014 1A60     		str	r2, [r3, #0]
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
  80              		.loc 1 145 0
  81 0016 07F10C07 		add	r7, r7, #12
  82 001a BD46     		mov	sp, r7
  83 001c 80BC     		pop	{r7}
  84 001e 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE57:
  88              		.section	.text.BKP_TamperPinCmd,"ax",%progbits
  89              		.align	2
  90              		.global	BKP_TamperPinCmd
  91              		.thumb
  92              		.thumb_func
  94              	BKP_TamperPinCmd:
  95              	.LFB58:
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin activation.
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin activation.
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_TamperPinCmd(FunctionalState NewState)
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
  96              		.loc 1 154 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              	.LCFI5:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 83B0     		sub	sp, sp, #12
 106              	.LCFI6:
 107              		.cfi_def_cfa_offset 16
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI7:
 110              		.cfi_def_cfa_register 7
 111 0006 0346     		mov	r3, r0
 112 0008 FB71     		strb	r3, [r7, #7]
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPE_BB = (uint32_t)NewState;
 113              		.loc 1 157 0
 114 000a 4FF40643 		mov	r3, #34304
 115 000e C4F20D23 		movt	r3, 16909
 116 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 117 0014 1A60     		str	r2, [r3, #0]
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 118              		.loc 1 158 0
 119 0016 07F10C07 		add	r7, r7, #12
 120 001a BD46     		mov	sp, r7
 121 001c 80BC     		pop	{r7}
 122 001e 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE58:
 126              		.section	.text.BKP_ITConfig,"ax",%progbits
 127              		.align	2
 128              		.global	BKP_ITConfig
 129              		.thumb
 130              		.thumb_func
 132              	BKP_ITConfig:
 133              	.LFB59:
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin Interrupt.
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin Interrupt.
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_ITConfig(FunctionalState NewState)
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 134              		.loc 1 167 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 8
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139 0000 80B4     		push	{r7}
 140              	.LCFI8:
 141              		.cfi_def_cfa_offset 4
 142              		.cfi_offset 7, -4
 143 0002 83B0     		sub	sp, sp, #12
 144              	.LCFI9:
 145              		.cfi_def_cfa_offset 16
 146 0004 00AF     		add	r7, sp, #0
 147              	.LCFI10:
 148              		.cfi_def_cfa_register 7
 149 0006 0346     		mov	r3, r0
 150 0008 FB71     		strb	r3, [r7, #7]
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CSR_TPIE_BB = (uint32_t)NewState;
 151              		.loc 1 170 0
 152 000a 48F28863 		movw	r3, #34440
 153 000e C4F20D23 		movt	r3, 16909
 154 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 155 0014 1A60     		str	r2, [r3, #0]
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 156              		.loc 1 171 0
 157 0016 07F10C07 		add	r7, r7, #12
 158 001a BD46     		mov	sp, r7
 159 001c 80BC     		pop	{r7}
 160 001e 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE59:
 164              		.section	.text.BKP_RTCOutputConfig,"ax",%progbits
 165              		.align	2
 166              		.global	BKP_RTCOutputConfig
 167              		.thumb
 168              		.thumb_func
 170              	BKP_RTCOutputConfig:
 171              	.LFB60:
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Select the RTC output source to output on the Tamper pin.
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  BKP_RTCOutputSource: specifies the RTC output source.
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_None: no RTC output on the Tamper pin.
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_CalibClock: output the RTC clock with frequency
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *                                          divided by 64 on the Tamper pin.
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse signal on
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *                                     the Tamper pin.
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Second: output the RTC Second pulse signal on
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *                                      the Tamper pin.  
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource)
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 172              		.loc 1 187 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 16
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              	.LCFI11:
 179              		.cfi_def_cfa_offset 4
 180              		.cfi_offset 7, -4
 181 0002 85B0     		sub	sp, sp, #20
 182              	.LCFI12:
 183              		.cfi_def_cfa_offset 24
 184 0004 00AF     		add	r7, sp, #0
 185              	.LCFI13:
 186              		.cfi_def_cfa_register 7
 187 0006 0346     		mov	r3, r0
 188 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 189              		.loc 1 188 0
 190 000a 4FF00003 		mov	r3, #0
 191 000e FB81     		strh	r3, [r7, #14]	@ movhi
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_RTC_OUTPUT_SOURCE(BKP_RTCOutputSource));
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 192              		.loc 1 191 0
 193 0010 4FF4D843 		mov	r3, #27648
 194 0014 C4F20003 		movt	r3, 16384
 195 0018 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 196 001a FB81     		strh	r3, [r7, #14]	@ movhi
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Clear CCO, ASOE and ASOS bits */
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_MASK;
 197              		.loc 1 193 0
 198 001c FB89     		ldrh	r3, [r7, #14]	@ movhi
 199 001e 23F46073 		bic	r3, r3, #896
 200 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Set CCO, ASOE and ASOS bits according to BKP_RTCOutputSource value */
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmpreg |= BKP_RTCOutputSource;
 201              		.loc 1 196 0
 202 0024 FA89     		ldrh	r2, [r7, #14]	@ movhi
 203 0026 FB88     		ldrh	r3, [r7, #6]	@ movhi
 204 0028 1343     		orrs	r3, r3, r2
 205 002a FB81     		strh	r3, [r7, #14]	@ movhi
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Store the new value */
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 206              		.loc 1 198 0
 207 002c 4FF4D843 		mov	r3, #27648
 208 0030 C4F20003 		movt	r3, 16384
 209 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 210 0036 9A85     		strh	r2, [r3, #44]	@ movhi
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 211              		.loc 1 199 0
 212 0038 07F11407 		add	r7, r7, #20
 213 003c BD46     		mov	sp, r7
 214 003e 80BC     		pop	{r7}
 215 0040 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE60:
 219 0042 00BF     		.section	.text.BKP_SetRTCCalibrationValue,"ax",%progbits
 220              		.align	2
 221              		.global	BKP_SetRTCCalibrationValue
 222              		.thumb
 223              		.thumb_func
 225              	BKP_SetRTCCalibrationValue:
 226              	.LFB61:
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Sets RTC Clock Calibration value.
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  CalibrationValue: specifies the RTC Clock Calibration value.
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter must be a number between 0 and 0x7F.
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue)
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 227              		.loc 1 208 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 16
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232 0000 80B4     		push	{r7}
 233              	.LCFI14:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 85B0     		sub	sp, sp, #20
 237              	.LCFI15:
 238              		.cfi_def_cfa_offset 24
 239 0004 00AF     		add	r7, sp, #0
 240              	.LCFI16:
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 FB71     		strb	r3, [r7, #7]
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 244              		.loc 1 209 0
 245 000a 4FF00003 		mov	r3, #0
 246 000e FB81     		strh	r3, [r7, #14]	@ movhi
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_CALIBRATION_VALUE(CalibrationValue));
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 247              		.loc 1 212 0
 248 0010 4FF4D843 		mov	r3, #27648
 249 0014 C4F20003 		movt	r3, 16384
 250 0018 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 251 001a FB81     		strh	r3, [r7, #14]	@ movhi
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Clear CAL[6:0] bits */
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_CAL_MASK;
 252              		.loc 1 214 0
 253 001c FB89     		ldrh	r3, [r7, #14]	@ movhi
 254 001e 23F07F03 		bic	r3, r3, #127
 255 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Set CAL[6:0] bits according to CalibrationValue value */
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmpreg |= CalibrationValue;
 256              		.loc 1 216 0
 257 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 258 0026 9AB2     		uxth	r2, r3
 259 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 260 002a 1343     		orrs	r3, r3, r2
 261 002c FB81     		strh	r3, [r7, #14]	@ movhi
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Store the new value */
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 262              		.loc 1 218 0
 263 002e 4FF4D843 		mov	r3, #27648
 264 0032 C4F20003 		movt	r3, 16384
 265 0036 FA89     		ldrh	r2, [r7, #14]	@ movhi
 266 0038 9A85     		strh	r2, [r3, #44]	@ movhi
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 267              		.loc 1 219 0
 268 003a 07F11407 		add	r7, r7, #20
 269 003e BD46     		mov	sp, r7
 270 0040 80BC     		pop	{r7}
 271 0042 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE61:
 275              		.section	.text.BKP_WriteBackupRegister,"ax",%progbits
 276              		.align	2
 277              		.global	BKP_WriteBackupRegister
 278              		.thumb
 279              		.thumb_func
 281              	BKP_WriteBackupRegister:
 282              	.LFB62:
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Writes user data to the specified Data Backup Register.
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  Data: data to write
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data)
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 283              		.loc 1 229 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 16
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              	.LCFI17:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 85B0     		sub	sp, sp, #20
 293              	.LCFI18:
 294              		.cfi_def_cfa_offset 24
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI19:
 297              		.cfi_def_cfa_register 7
 298 0006 0246     		mov	r2, r0
 299 0008 0B46     		mov	r3, r1
 300 000a FA80     		strh	r2, [r7, #6]	@ movhi
 301 000c BB80     		strh	r3, [r7, #4]	@ movhi
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 302              		.loc 1 230 0
 303 000e 4FF00003 		mov	r3, #0
 304 0012 FB60     		str	r3, [r7, #12]
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 305              		.loc 1 235 0
 306 0014 4FF4D843 		mov	r3, #27648
 307 0018 C4F20003 		movt	r3, 16384
 308 001c FB60     		str	r3, [r7, #12]
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 309              		.loc 1 236 0
 310 001e FA88     		ldrh	r2, [r7, #6]
 311 0020 FB68     		ldr	r3, [r7, #12]
 312 0022 D318     		adds	r3, r2, r3
 313 0024 FB60     		str	r3, [r7, #12]
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) tmp = Data;
 314              		.loc 1 238 0
 315 0026 FB68     		ldr	r3, [r7, #12]
 316 0028 BA88     		ldrh	r2, [r7, #4]
 317 002a 1A60     		str	r2, [r3, #0]
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 318              		.loc 1 239 0
 319 002c 07F11407 		add	r7, r7, #20
 320 0030 BD46     		mov	sp, r7
 321 0032 80BC     		pop	{r7}
 322 0034 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE62:
 326 0036 00BF     		.section	.text.BKP_ReadBackupRegister,"ax",%progbits
 327              		.align	2
 328              		.global	BKP_ReadBackupRegister
 329              		.thumb
 330              		.thumb_func
 332              	BKP_ReadBackupRegister:
 333              	.LFB63:
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Reads data from the specified Data Backup Register.
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval The content of the specified Data Backup Register
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR)
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 334              		.loc 1 248 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339 0000 80B4     		push	{r7}
 340              	.LCFI20:
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 85B0     		sub	sp, sp, #20
 344              	.LCFI21:
 345              		.cfi_def_cfa_offset 24
 346 0004 00AF     		add	r7, sp, #0
 347              	.LCFI22:
 348              		.cfi_def_cfa_register 7
 349 0006 0346     		mov	r3, r0
 350 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 351              		.loc 1 249 0
 352 000a 4FF00003 		mov	r3, #0
 353 000e FB60     		str	r3, [r7, #12]
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 354              		.loc 1 254 0
 355 0010 4FF4D843 		mov	r3, #27648
 356 0014 C4F20003 		movt	r3, 16384
 357 0018 FB60     		str	r3, [r7, #12]
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 358              		.loc 1 255 0
 359 001a FA88     		ldrh	r2, [r7, #6]
 360 001c FB68     		ldr	r3, [r7, #12]
 361 001e D318     		adds	r3, r2, r3
 362 0020 FB60     		str	r3, [r7, #12]
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   return (*(__IO uint16_t *) tmp);
 363              		.loc 1 257 0
 364 0022 FB68     		ldr	r3, [r7, #12]
 365 0024 1B88     		ldrh	r3, [r3, #0]	@ movhi
 366 0026 9BB2     		uxth	r3, r3
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 367              		.loc 1 258 0
 368 0028 1846     		mov	r0, r3
 369 002a 07F11407 		add	r7, r7, #20
 370 002e BD46     		mov	sp, r7
 371 0030 80BC     		pop	{r7}
 372 0032 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE63:
 376              		.section	.text.BKP_GetFlagStatus,"ax",%progbits
 377              		.align	2
 378              		.global	BKP_GetFlagStatus
 379              		.thumb
 380              		.thumb_func
 382              	BKP_GetFlagStatus:
 383              	.LFB64:
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Event flag is set or not.
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  None
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Event flag (SET or RESET).
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** FlagStatus BKP_GetFlagStatus(void)
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 384              		.loc 1 266 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI23:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 00AF     		add	r7, sp, #0
 394              	.LCFI24:
 395              		.cfi_def_cfa_register 7
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   return (FlagStatus)(*(__IO uint32_t *) CSR_TEF_BB);
 396              		.loc 1 267 0
 397 0004 48F2A063 		movw	r3, #34464
 398 0008 C4F20D23 		movt	r3, 16909
 399 000c 1B68     		ldr	r3, [r3, #0]
 400 000e DBB2     		uxtb	r3, r3
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 401              		.loc 1 268 0
 402 0010 1846     		mov	r0, r3
 403 0012 BD46     		mov	sp, r7
 404 0014 80BC     		pop	{r7}
 405 0016 7047     		bx	lr
 406              		.cfi_endproc
 407              	.LFE64:
 409              		.section	.text.BKP_ClearFlag,"ax",%progbits
 410              		.align	2
 411              		.global	BKP_ClearFlag
 412              		.thumb
 413              		.thumb_func
 415              	BKP_ClearFlag:
 416              	.LFB65:
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Event pending flag.
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  None
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_ClearFlag(void)
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 417              		.loc 1 276 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              	.LCFI25:
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 00AF     		add	r7, sp, #0
 427              	.LCFI26:
 428              		.cfi_def_cfa_register 7
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Set CTE bit to clear Tamper Pin Event flag */
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTE;
 429              		.loc 1 278 0
 430 0004 4FF4D843 		mov	r3, #27648
 431 0008 C4F20003 		movt	r3, 16384
 432 000c 4FF4D842 		mov	r2, #27648
 433 0010 C4F20002 		movt	r2, 16384
 434 0014 928E     		ldrh	r2, [r2, #52]	@ movhi
 435 0016 92B2     		uxth	r2, r2
 436 0018 42F00102 		orr	r2, r2, #1
 437 001c 92B2     		uxth	r2, r2
 438 001e 9A86     		strh	r2, [r3, #52]	@ movhi
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 439              		.loc 1 279 0
 440 0020 BD46     		mov	sp, r7
 441 0022 80BC     		pop	{r7}
 442 0024 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE65:
 446 0026 00BF     		.section	.text.BKP_GetITStatus,"ax",%progbits
 447              		.align	2
 448              		.global	BKP_GetITStatus
 449              		.thumb
 450              		.thumb_func
 452              	BKP_GetITStatus:
 453              	.LFB66:
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Interrupt has occurred or not.
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  None
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Interrupt (SET or RESET).
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** ITStatus BKP_GetITStatus(void)
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 454              		.loc 1 287 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              	.LCFI27:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 00AF     		add	r7, sp, #0
 464              	.LCFI28:
 465              		.cfi_def_cfa_register 7
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   return (ITStatus)(*(__IO uint32_t *) CSR_TIF_BB);
 466              		.loc 1 288 0
 467 0004 48F2A463 		movw	r3, #34468
 468 0008 C4F20D23 		movt	r3, 16909
 469 000c 1B68     		ldr	r3, [r3, #0]
 470 000e DBB2     		uxtb	r3, r3
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 471              		.loc 1 289 0
 472 0010 1846     		mov	r0, r3
 473 0012 BD46     		mov	sp, r7
 474 0014 80BC     		pop	{r7}
 475 0016 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE66:
 479              		.section	.text.BKP_ClearITPendingBit,"ax",%progbits
 480              		.align	2
 481              		.global	BKP_ClearITPendingBit
 482              		.thumb
 483              		.thumb_func
 485              	BKP_ClearITPendingBit:
 486              	.LFB67:
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** 
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** /**
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Interrupt pending bit.
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @param  None
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   * @retval None
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   */
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** void BKP_ClearITPendingBit(void)
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** {
 487              		.loc 1 297 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              	.LCFI29:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 00AF     		add	r7, sp, #0
 497              	.LCFI30:
 498              		.cfi_def_cfa_register 7
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   /* Set CTI bit to clear Tamper Pin Interrupt pending bit */
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTI;
 499              		.loc 1 299 0
 500 0004 4FF4D843 		mov	r3, #27648
 501 0008 C4F20003 		movt	r3, 16384
 502 000c 4FF4D842 		mov	r2, #27648
 503 0010 C4F20002 		movt	r2, 16384
 504 0014 928E     		ldrh	r2, [r2, #52]	@ movhi
 505 0016 92B2     		uxth	r2, r2
 506 0018 42F00202 		orr	r2, r2, #2
 507 001c 92B2     		uxth	r2, r2
 508 001e 9A86     		strh	r2, [r3, #52]	@ movhi
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_bkp.c **** }
 509              		.loc 1 300 0
 510 0020 BD46     		mov	sp, r7
 511 0022 80BC     		pop	{r7}
 512 0024 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE67:
 516 0026 00BF     		.text
 517              	.Letext0:
 518              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 519              		.file 3 "/Users/zac/code/spark/marvin/libraries/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 520              		.file 4 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_bkp.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:19     .text.BKP_DeInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:24     .text.BKP_DeInit:0000000000000000 BKP_DeInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:51     .text.BKP_TamperPinLevelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:56     .text.BKP_TamperPinLevelConfig:0000000000000000 BKP_TamperPinLevelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:89     .text.BKP_TamperPinCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:94     .text.BKP_TamperPinCmd:0000000000000000 BKP_TamperPinCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:127    .text.BKP_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:132    .text.BKP_ITConfig:0000000000000000 BKP_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:165    .text.BKP_RTCOutputConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:170    .text.BKP_RTCOutputConfig:0000000000000000 BKP_RTCOutputConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:220    .text.BKP_SetRTCCalibrationValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:225    .text.BKP_SetRTCCalibrationValue:0000000000000000 BKP_SetRTCCalibrationValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:276    .text.BKP_WriteBackupRegister:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:281    .text.BKP_WriteBackupRegister:0000000000000000 BKP_WriteBackupRegister
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:327    .text.BKP_ReadBackupRegister:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:332    .text.BKP_ReadBackupRegister:0000000000000000 BKP_ReadBackupRegister
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:377    .text.BKP_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:382    .text.BKP_GetFlagStatus:0000000000000000 BKP_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:410    .text.BKP_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:415    .text.BKP_ClearFlag:0000000000000000 BKP_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:447    .text.BKP_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:452    .text.BKP_GetITStatus:0000000000000000 BKP_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:480    .text.BKP_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccuRA7E0.s:485    .text.BKP_ClearITPendingBit:0000000000000000 BKP_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc

UNDEFINED SYMBOLS
RCC_BackupResetCmd
