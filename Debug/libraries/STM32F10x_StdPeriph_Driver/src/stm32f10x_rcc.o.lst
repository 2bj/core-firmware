   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.data
  19              		.align	2
  22              	APBAHBPrescTable:
  23 0000 00       		.byte	0
  24 0001 00       		.byte	0
  25 0002 00       		.byte	0
  26 0003 00       		.byte	0
  27 0004 01       		.byte	1
  28 0005 02       		.byte	2
  29 0006 03       		.byte	3
  30 0007 04       		.byte	4
  31 0008 01       		.byte	1
  32 0009 02       		.byte	2
  33 000a 03       		.byte	3
  34 000b 04       		.byte	4
  35 000c 06       		.byte	6
  36 000d 07       		.byte	7
  37 000e 08       		.byte	8
  38 000f 09       		.byte	9
  39              		.align	2
  42              	ADCPrescTable:
  43 0010 02       		.byte	2
  44 0011 04       		.byte	4
  45 0012 06       		.byte	6
  46 0013 08       		.byte	8
  47              		.section	.text.RCC_DeInit,"ax",%progbits
  48              		.align	2
  49              		.global	RCC_DeInit
  50              		.thumb
  51              		.thumb_func
  53              	RCC_DeInit:
  54              	.LFB56:
  55              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  56              		.loc 1 224 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI1:
  67              		.cfi_def_cfa_register 7
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  68              		.loc 1 226 0
  69 0004 4FF48053 		mov	r3, #4096
  70 0008 C4F20203 		movt	r3, 16386
  71 000c 4FF48052 		mov	r2, #4096
  72 0010 C4F20202 		movt	r2, 16386
  73 0014 1268     		ldr	r2, [r2, #0]
  74 0016 42F00102 		orr	r2, r2, #1
  75 001a 1A60     		str	r2, [r3, #0]
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  76              		.loc 1 230 0
  77 001c 4FF48052 		mov	r2, #4096
  78 0020 C4F20202 		movt	r2, 16386
  79 0024 4FF48053 		mov	r3, #4096
  80 0028 C4F20203 		movt	r3, 16386
  81 002c 5968     		ldr	r1, [r3, #4]
  82 002e 4FF00003 		mov	r3, #0
  83 0032 CFF6FF03 		movt	r3, 63743
  84 0036 0B40     		ands	r3, r3, r1
  85 0038 5360     		str	r3, [r2, #4]
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  86              		.loc 1 236 0
  87 003a 4FF48053 		mov	r3, #4096
  88 003e C4F20203 		movt	r3, 16386
  89 0042 4FF48052 		mov	r2, #4096
  90 0046 C4F20202 		movt	r2, 16386
  91 004a 1268     		ldr	r2, [r2, #0]
  92 004c 22F08472 		bic	r2, r2, #17301504
  93 0050 22F48032 		bic	r2, r2, #65536
  94 0054 1A60     		str	r2, [r3, #0]
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  95              		.loc 1 239 0
  96 0056 4FF48053 		mov	r3, #4096
  97 005a C4F20203 		movt	r3, 16386
  98 005e 4FF48052 		mov	r2, #4096
  99 0062 C4F20202 		movt	r2, 16386
 100 0066 1268     		ldr	r2, [r2, #0]
 101 0068 22F48022 		bic	r2, r2, #262144
 102 006c 1A60     		str	r2, [r3, #0]
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 103              		.loc 1 242 0
 104 006e 4FF48053 		mov	r3, #4096
 105 0072 C4F20203 		movt	r3, 16386
 106 0076 4FF48052 		mov	r2, #4096
 107 007a C4F20202 		movt	r2, 16386
 108 007e 5268     		ldr	r2, [r2, #4]
 109 0080 22F4FE02 		bic	r2, r2, #8323072
 110 0084 5A60     		str	r2, [r3, #4]
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 111              		.loc 1 261 0
 112 0086 4FF48053 		mov	r3, #4096
 113 008a C4F20203 		movt	r3, 16386
 114 008e 4FF41F02 		mov	r2, #10420224
 115 0092 9A60     		str	r2, [r3, #8]
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 116              		.loc 1 264 0
 117 0094 BD46     		mov	sp, r7
 118 0096 80BC     		pop	{r7}
 119 0098 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE56:
 123 009a 00BF     		.section	.text.RCC_HSEConfig,"ax",%progbits
 124              		.align	2
 125              		.global	RCC_HSEConfig
 126              		.thumb
 127              		.thumb_func
 129              	RCC_HSEConfig:
 130              	.LFB57:
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 131              		.loc 1 277 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 80B4     		push	{r7}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 4
 139              		.cfi_offset 7, -4
 140 0002 83B0     		sub	sp, sp, #12
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI4:
 145              		.cfi_def_cfa_register 7
 146 0006 7860     		str	r0, [r7, #4]
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 147              		.loc 1 282 0
 148 0008 4FF48053 		mov	r3, #4096
 149 000c C4F20203 		movt	r3, 16386
 150 0010 4FF48052 		mov	r2, #4096
 151 0014 C4F20202 		movt	r2, 16386
 152 0018 1268     		ldr	r2, [r2, #0]
 153 001a 22F48032 		bic	r2, r2, #65536
 154 001e 1A60     		str	r2, [r3, #0]
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 155              		.loc 1 284 0
 156 0020 4FF48053 		mov	r3, #4096
 157 0024 C4F20203 		movt	r3, 16386
 158 0028 4FF48052 		mov	r2, #4096
 159 002c C4F20202 		movt	r2, 16386
 160 0030 1268     		ldr	r2, [r2, #0]
 161 0032 22F48022 		bic	r2, r2, #262144
 162 0036 1A60     		str	r2, [r3, #0]
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 163              		.loc 1 286 0
 164 0038 7B68     		ldr	r3, [r7, #4]
 165 003a B3F5803F 		cmp	r3, #65536
 166 003e 03D0     		beq	.L4
 167 0040 B3F5802F 		cmp	r3, #262144
 168 0044 0DD0     		beq	.L5
 169 0046 19E0     		b	.L7
 170              	.L4:
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 171              		.loc 1 290 0
 172 0048 4FF48053 		mov	r3, #4096
 173 004c C4F20203 		movt	r3, 16386
 174 0050 4FF48052 		mov	r2, #4096
 175 0054 C4F20202 		movt	r2, 16386
 176 0058 1268     		ldr	r2, [r2, #0]
 177 005a 42F48032 		orr	r2, r2, #65536
 178 005e 1A60     		str	r2, [r3, #0]
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 179              		.loc 1 291 0
 180 0060 0DE0     		b	.L2
 181              	.L5:
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 182              		.loc 1 295 0
 183 0062 4FF48053 		mov	r3, #4096
 184 0066 C4F20203 		movt	r3, 16386
 185 006a 4FF48052 		mov	r2, #4096
 186 006e C4F20202 		movt	r2, 16386
 187 0072 1268     		ldr	r2, [r2, #0]
 188 0074 42F4A022 		orr	r2, r2, #327680
 189 0078 1A60     		str	r2, [r3, #0]
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 190              		.loc 1 296 0
 191 007a 00E0     		b	.L2
 192              	.L7:
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 193              		.loc 1 299 0
 194 007c 00BF     		nop
 195              	.L2:
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 196              		.loc 1 301 0
 197 007e 07F10C07 		add	r7, r7, #12
 198 0082 BD46     		mov	sp, r7
 199 0084 80BC     		pop	{r7}
 200 0086 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE57:
 204              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 205              		.align	2
 206              		.global	RCC_WaitForHSEStartUp
 207              		.thumb
 208              		.thumb_func
 210              	RCC_WaitForHSEStartUp:
 211              	.LFB58:
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 212              		.loc 1 311 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 8
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 0000 80B5     		push	{r7, lr}
 217              	.LCFI5:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 82B0     		sub	sp, sp, #8
 222              	.LCFI6:
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              	.LCFI7:
 226              		.cfi_def_cfa_register 7
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 227              		.loc 1 312 0
 228 0006 4FF00003 		mov	r3, #0
 229 000a 3B60     		str	r3, [r7, #0]
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 230              		.loc 1 313 0
 231 000c 4FF00003 		mov	r3, #0
 232 0010 FB71     		strb	r3, [r7, #7]
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 233              		.loc 1 314 0
 234 0012 4FF00003 		mov	r3, #0
 235 0016 BB71     		strb	r3, [r7, #6]
 236              	.L10:
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 237              		.loc 1 319 0 discriminator 1
 238 0018 4FF03100 		mov	r0, #49
 239 001c FFF7FEFF 		bl	RCC_GetFlagStatus
 240 0020 0346     		mov	r3, r0
 241 0022 BB71     		strb	r3, [r7, #6]
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 242              		.loc 1 320 0 discriminator 1
 243 0024 3B68     		ldr	r3, [r7, #0]
 244 0026 03F10103 		add	r3, r3, #1
 245 002a 3B60     		str	r3, [r7, #0]
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 246              		.loc 1 321 0 discriminator 1
 247 002c 3B68     		ldr	r3, [r7, #0]
 248 002e B3F5A06F 		cmp	r3, #1280
 249 0032 02D0     		beq	.L9
 250 0034 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 251 0036 002B     		cmp	r3, #0
 252 0038 EED0     		beq	.L10
 253              	.L9:
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 254              		.loc 1 323 0
 255 003a 4FF03100 		mov	r0, #49
 256 003e FFF7FEFF 		bl	RCC_GetFlagStatus
 257 0042 0346     		mov	r3, r0
 258 0044 002B     		cmp	r3, #0
 259 0046 03D0     		beq	.L11
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 260              		.loc 1 325 0
 261 0048 4FF00103 		mov	r3, #1
 262 004c FB71     		strb	r3, [r7, #7]
 263 004e 02E0     		b	.L12
 264              	.L11:
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 265              		.loc 1 329 0
 266 0050 4FF00003 		mov	r3, #0
 267 0054 FB71     		strb	r3, [r7, #7]
 268              	.L12:
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 269              		.loc 1 331 0
 270 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 271              		.loc 1 332 0
 272 0058 1846     		mov	r0, r3
 273 005a 07F10807 		add	r7, r7, #8
 274 005e BD46     		mov	sp, r7
 275 0060 80BD     		pop	{r7, pc}
 276              		.cfi_endproc
 277              	.LFE58:
 279 0062 00BF     		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 280              		.align	2
 281              		.global	RCC_AdjustHSICalibrationValue
 282              		.thumb
 283              		.thumb_func
 285              	RCC_AdjustHSICalibrationValue:
 286              	.LFB59:
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 287              		.loc 1 341 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 16
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              	.LCFI8:
 294              		.cfi_def_cfa_offset 4
 295              		.cfi_offset 7, -4
 296 0002 85B0     		sub	sp, sp, #20
 297              	.LCFI9:
 298              		.cfi_def_cfa_offset 24
 299 0004 00AF     		add	r7, sp, #0
 300              	.LCFI10:
 301              		.cfi_def_cfa_register 7
 302 0006 0346     		mov	r3, r0
 303 0008 FB71     		strb	r3, [r7, #7]
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 304              		.loc 1 342 0
 305 000a 4FF00003 		mov	r3, #0
 306 000e FB60     		str	r3, [r7, #12]
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 307              		.loc 1 345 0
 308 0010 4FF48053 		mov	r3, #4096
 309 0014 C4F20203 		movt	r3, 16386
 310 0018 1B68     		ldr	r3, [r3, #0]
 311 001a FB60     		str	r3, [r7, #12]
 346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 312              		.loc 1 347 0
 313 001c FB68     		ldr	r3, [r7, #12]
 314 001e 23F0F803 		bic	r3, r3, #248
 315 0022 FB60     		str	r3, [r7, #12]
 348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 316              		.loc 1 349 0
 317 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 318 0026 4FEAC303 		lsl	r3, r3, #3
 319 002a FA68     		ldr	r2, [r7, #12]
 320 002c 1343     		orrs	r3, r3, r2
 321 002e FB60     		str	r3, [r7, #12]
 350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 322              		.loc 1 351 0
 323 0030 4FF48053 		mov	r3, #4096
 324 0034 C4F20203 		movt	r3, 16386
 325 0038 FA68     		ldr	r2, [r7, #12]
 326 003a 1A60     		str	r2, [r3, #0]
 352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 327              		.loc 1 352 0
 328 003c 07F11407 		add	r7, r7, #20
 329 0040 BD46     		mov	sp, r7
 330 0042 80BC     		pop	{r7}
 331 0044 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE59:
 335 0046 00BF     		.section	.text.RCC_HSICmd,"ax",%progbits
 336              		.align	2
 337              		.global	RCC_HSICmd
 338              		.thumb
 339              		.thumb_func
 341              	RCC_HSICmd:
 342              	.LFB60:
 353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 343              		.loc 1 361 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 8
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348 0000 80B4     		push	{r7}
 349              	.LCFI11:
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              	.LCFI12:
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              	.LCFI13:
 357              		.cfi_def_cfa_register 7
 358 0006 0346     		mov	r3, r0
 359 0008 FB71     		strb	r3, [r7, #7]
 362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 360              		.loc 1 364 0
 361 000a 4FF00003 		mov	r3, #0
 362 000e C4F24223 		movt	r3, 16962
 363 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 364 0014 1A60     		str	r2, [r3, #0]
 365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 365              		.loc 1 365 0
 366 0016 07F10C07 		add	r7, r7, #12
 367 001a BD46     		mov	sp, r7
 368 001c 80BC     		pop	{r7}
 369 001e 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE60:
 373              		.section	.text.RCC_PLLConfig,"ax",%progbits
 374              		.align	2
 375              		.global	RCC_PLLConfig
 376              		.thumb
 377              		.thumb_func
 379              	RCC_PLLConfig:
 380              	.LFB61:
 366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 381              		.loc 1 385 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              	.LCFI14:
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              	.LCFI15:
 392              		.cfi_def_cfa_offset 24
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI16:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 397 0008 3960     		str	r1, [r7, #0]
 386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 398              		.loc 1 386 0
 399 000a 4FF00003 		mov	r3, #0
 400 000e FB60     		str	r3, [r7, #12]
 387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 401              		.loc 1 392 0
 402 0010 4FF48053 		mov	r3, #4096
 403 0014 C4F20203 		movt	r3, 16386
 404 0018 5B68     		ldr	r3, [r3, #4]
 405 001a FB60     		str	r3, [r7, #12]
 393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 406              		.loc 1 394 0
 407 001c FB68     		ldr	r3, [r7, #12]
 408 001e 23F47C13 		bic	r3, r3, #4128768
 409 0022 FB60     		str	r3, [r7, #12]
 395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 410              		.loc 1 396 0
 411 0024 7A68     		ldr	r2, [r7, #4]
 412 0026 3B68     		ldr	r3, [r7, #0]
 413 0028 1343     		orrs	r3, r3, r2
 414 002a FA68     		ldr	r2, [r7, #12]
 415 002c 1343     		orrs	r3, r3, r2
 416 002e FB60     		str	r3, [r7, #12]
 397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 417              		.loc 1 398 0
 418 0030 4FF48053 		mov	r3, #4096
 419 0034 C4F20203 		movt	r3, 16386
 420 0038 FA68     		ldr	r2, [r7, #12]
 421 003a 5A60     		str	r2, [r3, #4]
 399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 422              		.loc 1 399 0
 423 003c 07F11407 		add	r7, r7, #20
 424 0040 BD46     		mov	sp, r7
 425 0042 80BC     		pop	{r7}
 426 0044 7047     		bx	lr
 427              		.cfi_endproc
 428              	.LFE61:
 430 0046 00BF     		.section	.text.RCC_PLLCmd,"ax",%progbits
 431              		.align	2
 432              		.global	RCC_PLLCmd
 433              		.thumb
 434              		.thumb_func
 436              	RCC_PLLCmd:
 437              	.LFB62:
 400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 438              		.loc 1 408 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 8
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0000 80B4     		push	{r7}
 444              	.LCFI17:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0002 83B0     		sub	sp, sp, #12
 448              	.LCFI18:
 449              		.cfi_def_cfa_offset 16
 450 0004 00AF     		add	r7, sp, #0
 451              	.LCFI19:
 452              		.cfi_def_cfa_register 7
 453 0006 0346     		mov	r3, r0
 454 0008 FB71     		strb	r3, [r7, #7]
 409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 455              		.loc 1 412 0
 456 000a 4FF06003 		mov	r3, #96
 457 000e C4F24223 		movt	r3, 16962
 458 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 459 0014 1A60     		str	r2, [r3, #0]
 413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 460              		.loc 1 413 0
 461 0016 07F10C07 		add	r7, r7, #12
 462 001a BD46     		mov	sp, r7
 463 001c 80BC     		pop	{r7}
 464 001e 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE62:
 468              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 469              		.align	2
 470              		.global	RCC_SYSCLKConfig
 471              		.thumb
 472              		.thumb_func
 474              	RCC_SYSCLKConfig:
 475              	.LFB63:
 414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 462:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 463:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 464:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 465:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 466:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 467:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 468:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 469:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 470:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 471:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 472:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 473:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 474:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 475:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 476:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 477:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 478:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 479:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 480:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 481:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 482:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 483:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 484:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 485:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 486:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 487:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 488:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 489:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 490:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 491:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 492:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 493:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 494:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 495:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 496:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 497:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 498:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 499:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 500:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 501:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 502:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 503:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 504:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 505:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 506:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 507:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 508:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 509:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 510:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 511:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 512:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 513:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 514:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 515:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 516:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 517:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 518:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 519:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 520:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 521:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 522:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 523:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 524:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 525:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 526:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 527:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 528:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 529:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 530:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 531:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 532:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 533:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 534:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 535:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 536:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 537:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 538:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 539:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 540:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 541:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 542:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 543:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 544:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 545:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 546:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 547:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 548:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 549:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 550:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 551:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 552:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 553:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 554:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 555:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 556:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 557:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 558:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 559:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 560:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 561:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 562:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 563:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 564:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 565:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 566:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 567:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 568:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 569:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 570:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 571:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 476              		.loc 1 571 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 16
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481 0000 80B4     		push	{r7}
 482              	.LCFI20:
 483              		.cfi_def_cfa_offset 4
 484              		.cfi_offset 7, -4
 485 0002 85B0     		sub	sp, sp, #20
 486              	.LCFI21:
 487              		.cfi_def_cfa_offset 24
 488 0004 00AF     		add	r7, sp, #0
 489              	.LCFI22:
 490              		.cfi_def_cfa_register 7
 491 0006 7860     		str	r0, [r7, #4]
 572:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 492              		.loc 1 572 0
 493 0008 4FF00003 		mov	r3, #0
 494 000c FB60     		str	r3, [r7, #12]
 573:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 574:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 575:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 495              		.loc 1 575 0
 496 000e 4FF48053 		mov	r3, #4096
 497 0012 C4F20203 		movt	r3, 16386
 498 0016 5B68     		ldr	r3, [r3, #4]
 499 0018 FB60     		str	r3, [r7, #12]
 576:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 577:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 500              		.loc 1 577 0
 501 001a FB68     		ldr	r3, [r7, #12]
 502 001c 23F00303 		bic	r3, r3, #3
 503 0020 FB60     		str	r3, [r7, #12]
 578:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 579:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 504              		.loc 1 579 0
 505 0022 FA68     		ldr	r2, [r7, #12]
 506 0024 7B68     		ldr	r3, [r7, #4]
 507 0026 1343     		orrs	r3, r3, r2
 508 0028 FB60     		str	r3, [r7, #12]
 580:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 581:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 509              		.loc 1 581 0
 510 002a 4FF48053 		mov	r3, #4096
 511 002e C4F20203 		movt	r3, 16386
 512 0032 FA68     		ldr	r2, [r7, #12]
 513 0034 5A60     		str	r2, [r3, #4]
 582:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 514              		.loc 1 582 0
 515 0036 07F11407 		add	r7, r7, #20
 516 003a BD46     		mov	sp, r7
 517 003c 80BC     		pop	{r7}
 518 003e 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE63:
 522              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 523              		.align	2
 524              		.global	RCC_GetSYSCLKSource
 525              		.thumb
 526              		.thumb_func
 528              	RCC_GetSYSCLKSource:
 529              	.LFB64:
 583:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 584:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 585:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 586:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 587:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 588:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 589:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 590:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 591:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 592:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 593:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 594:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 530              		.loc 1 594 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              	.LCFI23:
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 00AF     		add	r7, sp, #0
 540              	.LCFI24:
 541              		.cfi_def_cfa_register 7
 595:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 542              		.loc 1 595 0
 543 0004 4FF48053 		mov	r3, #4096
 544 0008 C4F20203 		movt	r3, 16386
 545 000c 5B68     		ldr	r3, [r3, #4]
 546 000e DBB2     		uxtb	r3, r3
 547 0010 03F00C03 		and	r3, r3, #12
 548 0014 DBB2     		uxtb	r3, r3
 596:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 549              		.loc 1 596 0
 550 0016 1846     		mov	r0, r3
 551 0018 BD46     		mov	sp, r7
 552 001a 80BC     		pop	{r7}
 553 001c 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE64:
 557 001e 00BF     		.section	.text.RCC_HCLKConfig,"ax",%progbits
 558              		.align	2
 559              		.global	RCC_HCLKConfig
 560              		.thumb
 561              		.thumb_func
 563              	RCC_HCLKConfig:
 564              	.LFB65:
 597:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 598:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 599:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 600:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 601:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 602:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 603:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 604:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 605:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 606:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 607:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 608:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 609:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 610:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 611:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 612:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 613:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 614:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 615:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 565              		.loc 1 615 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 16
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570 0000 80B4     		push	{r7}
 571              	.LCFI25:
 572              		.cfi_def_cfa_offset 4
 573              		.cfi_offset 7, -4
 574 0002 85B0     		sub	sp, sp, #20
 575              	.LCFI26:
 576              		.cfi_def_cfa_offset 24
 577 0004 00AF     		add	r7, sp, #0
 578              	.LCFI27:
 579              		.cfi_def_cfa_register 7
 580 0006 7860     		str	r0, [r7, #4]
 616:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 581              		.loc 1 616 0
 582 0008 4FF00003 		mov	r3, #0
 583 000c FB60     		str	r3, [r7, #12]
 617:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 618:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 619:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 584              		.loc 1 619 0
 585 000e 4FF48053 		mov	r3, #4096
 586 0012 C4F20203 		movt	r3, 16386
 587 0016 5B68     		ldr	r3, [r3, #4]
 588 0018 FB60     		str	r3, [r7, #12]
 620:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 621:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 589              		.loc 1 621 0
 590 001a FB68     		ldr	r3, [r7, #12]
 591 001c 23F0F003 		bic	r3, r3, #240
 592 0020 FB60     		str	r3, [r7, #12]
 622:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 623:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 593              		.loc 1 623 0
 594 0022 FA68     		ldr	r2, [r7, #12]
 595 0024 7B68     		ldr	r3, [r7, #4]
 596 0026 1343     		orrs	r3, r3, r2
 597 0028 FB60     		str	r3, [r7, #12]
 624:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 625:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 598              		.loc 1 625 0
 599 002a 4FF48053 		mov	r3, #4096
 600 002e C4F20203 		movt	r3, 16386
 601 0032 FA68     		ldr	r2, [r7, #12]
 602 0034 5A60     		str	r2, [r3, #4]
 626:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 603              		.loc 1 626 0
 604 0036 07F11407 		add	r7, r7, #20
 605 003a BD46     		mov	sp, r7
 606 003c 80BC     		pop	{r7}
 607 003e 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE65:
 611              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 612              		.align	2
 613              		.global	RCC_PCLK1Config
 614              		.thumb
 615              		.thumb_func
 617              	RCC_PCLK1Config:
 618              	.LFB66:
 627:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 628:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 629:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 630:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 631:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 632:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 633:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 634:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 635:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 636:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 637:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 638:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 639:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 640:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 641:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 619              		.loc 1 641 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 16
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624 0000 80B4     		push	{r7}
 625              	.LCFI28:
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 7, -4
 628 0002 85B0     		sub	sp, sp, #20
 629              	.LCFI29:
 630              		.cfi_def_cfa_offset 24
 631 0004 00AF     		add	r7, sp, #0
 632              	.LCFI30:
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 642:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 635              		.loc 1 642 0
 636 0008 4FF00003 		mov	r3, #0
 637 000c FB60     		str	r3, [r7, #12]
 643:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 644:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 645:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 638              		.loc 1 645 0
 639 000e 4FF48053 		mov	r3, #4096
 640 0012 C4F20203 		movt	r3, 16386
 641 0016 5B68     		ldr	r3, [r3, #4]
 642 0018 FB60     		str	r3, [r7, #12]
 646:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 647:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 643              		.loc 1 647 0
 644 001a FB68     		ldr	r3, [r7, #12]
 645 001c 23F4E063 		bic	r3, r3, #1792
 646 0020 FB60     		str	r3, [r7, #12]
 648:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 649:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 647              		.loc 1 649 0
 648 0022 FA68     		ldr	r2, [r7, #12]
 649 0024 7B68     		ldr	r3, [r7, #4]
 650 0026 1343     		orrs	r3, r3, r2
 651 0028 FB60     		str	r3, [r7, #12]
 650:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 651:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 652              		.loc 1 651 0
 653 002a 4FF48053 		mov	r3, #4096
 654 002e C4F20203 		movt	r3, 16386
 655 0032 FA68     		ldr	r2, [r7, #12]
 656 0034 5A60     		str	r2, [r3, #4]
 652:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 657              		.loc 1 652 0
 658 0036 07F11407 		add	r7, r7, #20
 659 003a BD46     		mov	sp, r7
 660 003c 80BC     		pop	{r7}
 661 003e 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE66:
 665              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 666              		.align	2
 667              		.global	RCC_PCLK2Config
 668              		.thumb
 669              		.thumb_func
 671              	RCC_PCLK2Config:
 672              	.LFB67:
 653:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 654:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 655:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 656:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 657:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 658:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 659:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 660:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 661:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 662:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 663:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 664:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 665:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 666:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 667:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 673              		.loc 1 667 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 16
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              	.LCFI31:
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 85B0     		sub	sp, sp, #20
 683              	.LCFI32:
 684              		.cfi_def_cfa_offset 24
 685 0004 00AF     		add	r7, sp, #0
 686              	.LCFI33:
 687              		.cfi_def_cfa_register 7
 688 0006 7860     		str	r0, [r7, #4]
 668:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 689              		.loc 1 668 0
 690 0008 4FF00003 		mov	r3, #0
 691 000c FB60     		str	r3, [r7, #12]
 669:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 670:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 671:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 692              		.loc 1 671 0
 693 000e 4FF48053 		mov	r3, #4096
 694 0012 C4F20203 		movt	r3, 16386
 695 0016 5B68     		ldr	r3, [r3, #4]
 696 0018 FB60     		str	r3, [r7, #12]
 672:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 673:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 697              		.loc 1 673 0
 698 001a FB68     		ldr	r3, [r7, #12]
 699 001c 23F46053 		bic	r3, r3, #14336
 700 0020 FB60     		str	r3, [r7, #12]
 674:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 675:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 701              		.loc 1 675 0
 702 0022 7B68     		ldr	r3, [r7, #4]
 703 0024 4FEAC303 		lsl	r3, r3, #3
 704 0028 FA68     		ldr	r2, [r7, #12]
 705 002a 1343     		orrs	r3, r3, r2
 706 002c FB60     		str	r3, [r7, #12]
 676:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 677:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 707              		.loc 1 677 0
 708 002e 4FF48053 		mov	r3, #4096
 709 0032 C4F20203 		movt	r3, 16386
 710 0036 FA68     		ldr	r2, [r7, #12]
 711 0038 5A60     		str	r2, [r3, #4]
 678:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 712              		.loc 1 678 0
 713 003a 07F11407 		add	r7, r7, #20
 714 003e BD46     		mov	sp, r7
 715 0040 80BC     		pop	{r7}
 716 0042 7047     		bx	lr
 717              		.cfi_endproc
 718              	.LFE67:
 720              		.section	.text.RCC_ITConfig,"ax",%progbits
 721              		.align	2
 722              		.global	RCC_ITConfig
 723              		.thumb
 724              		.thumb_func
 726              	RCC_ITConfig:
 727              	.LFB68:
 679:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 680:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 681:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 682:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 683:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 684:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 685:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 686:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 687:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 688:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 689:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 690:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 691:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 692:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 693:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 694:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 695:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 696:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 697:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 698:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 699:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 700:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 701:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 702:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 703:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 704:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 705:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 706:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 707:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 728              		.loc 1 707 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 8
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              	.LCFI34:
 735              		.cfi_def_cfa_offset 4
 736              		.cfi_offset 7, -4
 737 0002 83B0     		sub	sp, sp, #12
 738              	.LCFI35:
 739              		.cfi_def_cfa_offset 16
 740 0004 00AF     		add	r7, sp, #0
 741              	.LCFI36:
 742              		.cfi_def_cfa_register 7
 743 0006 0246     		mov	r2, r0
 744 0008 0B46     		mov	r3, r1
 745 000a FA71     		strb	r2, [r7, #7]
 746 000c BB71     		strb	r3, [r7, #6]
 708:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 709:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 710:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 711:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 747              		.loc 1 711 0
 748 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 749 0010 002B     		cmp	r3, #0
 750 0012 0ED0     		beq	.L25
 712:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 713:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 714:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 751              		.loc 1 714 0
 752 0014 41F20903 		movw	r3, #4105
 753 0018 C4F20203 		movt	r3, 16386
 754 001c 41F20902 		movw	r2, #4105
 755 0020 C4F20202 		movt	r2, 16386
 756 0024 1278     		ldrb	r2, [r2, #0]
 757 0026 D1B2     		uxtb	r1, r2
 758 0028 FA79     		ldrb	r2, [r7, #7]
 759 002a 0A43     		orrs	r2, r2, r1
 760 002c D2B2     		uxtb	r2, r2
 761 002e 1A70     		strb	r2, [r3, #0]
 762 0030 10E0     		b	.L24
 763              	.L25:
 715:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 716:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 717:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 718:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 719:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 764              		.loc 1 719 0
 765 0032 41F20903 		movw	r3, #4105
 766 0036 C4F20203 		movt	r3, 16386
 767 003a 41F20902 		movw	r2, #4105
 768 003e C4F20202 		movt	r2, 16386
 769 0042 1278     		ldrb	r2, [r2, #0]
 770 0044 D1B2     		uxtb	r1, r2
 771 0046 FA79     		ldrb	r2, [r7, #7]
 772 0048 6FEA0202 		mvn	r2, r2
 773 004c D2B2     		uxtb	r2, r2
 774 004e 0A40     		ands	r2, r2, r1
 775 0050 D2B2     		uxtb	r2, r2
 776 0052 1A70     		strb	r2, [r3, #0]
 777              	.L24:
 720:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 721:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 778              		.loc 1 721 0
 779 0054 07F10C07 		add	r7, r7, #12
 780 0058 BD46     		mov	sp, r7
 781 005a 80BC     		pop	{r7}
 782 005c 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE68:
 786 005e 00BF     		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 787              		.align	2
 788              		.global	RCC_USBCLKConfig
 789              		.thumb
 790              		.thumb_func
 792              	RCC_USBCLKConfig:
 793              	.LFB69:
 722:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 723:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 724:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 725:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 726:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 727:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 728:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 729:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 730:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 731:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 732:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 733:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 734:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 735:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 794              		.loc 1 735 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 80B4     		push	{r7}
 800              	.LCFI37:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 83B0     		sub	sp, sp, #12
 804              	.LCFI38:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI39:
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
 736:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 737:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 738:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 739:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 810              		.loc 1 739 0
 811 0008 4FF0D803 		mov	r3, #216
 812 000c C4F24223 		movt	r3, 16962
 813 0010 7A68     		ldr	r2, [r7, #4]
 814 0012 1A60     		str	r2, [r3, #0]
 740:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 815              		.loc 1 740 0
 816 0014 07F10C07 		add	r7, r7, #12
 817 0018 BD46     		mov	sp, r7
 818 001a 80BC     		pop	{r7}
 819 001c 7047     		bx	lr
 820              		.cfi_endproc
 821              	.LFE69:
 823 001e 00BF     		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 824              		.align	2
 825              		.global	RCC_ADCCLKConfig
 826              		.thumb
 827              		.thumb_func
 829              	RCC_ADCCLKConfig:
 830              	.LFB70:
 741:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 742:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 743:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 744:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 745:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 746:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 747:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 748:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 749:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 750:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 751:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 752:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 753:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 754:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 755:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 756:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 757:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 758:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 759:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 760:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 761:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 762:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 763:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 764:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 765:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 766:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 767:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 768:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 769:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 770:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 771:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 772:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 773:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 831              		.loc 1 773 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 16
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836 0000 80B4     		push	{r7}
 837              	.LCFI40:
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              	.LCFI41:
 842              		.cfi_def_cfa_offset 24
 843 0004 00AF     		add	r7, sp, #0
 844              	.LCFI42:
 845              		.cfi_def_cfa_register 7
 846 0006 7860     		str	r0, [r7, #4]
 774:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 847              		.loc 1 774 0
 848 0008 4FF00003 		mov	r3, #0
 849 000c FB60     		str	r3, [r7, #12]
 775:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 776:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 777:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 850              		.loc 1 777 0
 851 000e 4FF48053 		mov	r3, #4096
 852 0012 C4F20203 		movt	r3, 16386
 853 0016 5B68     		ldr	r3, [r3, #4]
 854 0018 FB60     		str	r3, [r7, #12]
 778:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 779:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 855              		.loc 1 779 0
 856 001a FB68     		ldr	r3, [r7, #12]
 857 001c 23F44043 		bic	r3, r3, #49152
 858 0020 FB60     		str	r3, [r7, #12]
 780:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 781:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 859              		.loc 1 781 0
 860 0022 FA68     		ldr	r2, [r7, #12]
 861 0024 7B68     		ldr	r3, [r7, #4]
 862 0026 1343     		orrs	r3, r3, r2
 863 0028 FB60     		str	r3, [r7, #12]
 782:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 783:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 864              		.loc 1 783 0
 865 002a 4FF48053 		mov	r3, #4096
 866 002e C4F20203 		movt	r3, 16386
 867 0032 FA68     		ldr	r2, [r7, #12]
 868 0034 5A60     		str	r2, [r3, #4]
 784:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 869              		.loc 1 784 0
 870 0036 07F11407 		add	r7, r7, #20
 871 003a BD46     		mov	sp, r7
 872 003c 80BC     		pop	{r7}
 873 003e 7047     		bx	lr
 874              		.cfi_endproc
 875              	.LFE70:
 877              		.section	.text.RCC_LSEConfig,"ax",%progbits
 878              		.align	2
 879              		.global	RCC_LSEConfig
 880              		.thumb
 881              		.thumb_func
 883              	RCC_LSEConfig:
 884              	.LFB71:
 785:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 786:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 787:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 788:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 789:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 790:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 791:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 792:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 793:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 794:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 795:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 796:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 797:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 798:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 799:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 800:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 801:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 802:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 803:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 804:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 805:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 806:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 807:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 808:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 809:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 810:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 811:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 812:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 813:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 814:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 815:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 816:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 817:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 818:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 819:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 820:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 821:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 822:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 823:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 824:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 825:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 826:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 827:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 828:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 829:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 830:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 831:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 832:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 833:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 834:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 835:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 836:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 885              		.loc 1 836 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 0000 80B4     		push	{r7}
 891              	.LCFI43:
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 0002 83B0     		sub	sp, sp, #12
 895              	.LCFI44:
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              	.LCFI45:
 899              		.cfi_def_cfa_register 7
 900 0006 0346     		mov	r3, r0
 901 0008 FB71     		strb	r3, [r7, #7]
 837:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 838:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 839:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 840:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 841:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 902              		.loc 1 841 0
 903 000a 4FF48153 		mov	r3, #4128
 904 000e C4F20203 		movt	r3, 16386
 905 0012 4FF00002 		mov	r2, #0
 906 0016 1A70     		strb	r2, [r3, #0]
 842:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 843:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 907              		.loc 1 843 0
 908 0018 4FF48153 		mov	r3, #4128
 909 001c C4F20203 		movt	r3, 16386
 910 0020 4FF00002 		mov	r2, #0
 911 0024 1A70     		strb	r2, [r3, #0]
 844:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 845:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 912              		.loc 1 845 0
 913 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 914 0028 012B     		cmp	r3, #1
 915 002a 02D0     		beq	.L31
 916 002c 042B     		cmp	r3, #4
 917 002e 08D0     		beq	.L32
 918 0030 0FE0     		b	.L34
 919              	.L31:
 846:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 847:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 848:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 849:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 920              		.loc 1 849 0
 921 0032 4FF48153 		mov	r3, #4128
 922 0036 C4F20203 		movt	r3, 16386
 923 003a 4FF00102 		mov	r2, #1
 924 003e 1A70     		strb	r2, [r3, #0]
 850:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 925              		.loc 1 850 0
 926 0040 08E0     		b	.L29
 927              	.L32:
 851:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 852:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 853:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 854:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 928              		.loc 1 854 0
 929 0042 4FF48153 		mov	r3, #4128
 930 0046 C4F20203 		movt	r3, 16386
 931 004a 4FF00502 		mov	r2, #5
 932 004e 1A70     		strb	r2, [r3, #0]
 855:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 933              		.loc 1 855 0
 934 0050 00E0     		b	.L29
 935              	.L34:
 856:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 857:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 858:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 936              		.loc 1 858 0
 937 0052 00BF     		nop
 938              	.L29:
 859:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 860:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 939              		.loc 1 860 0
 940 0054 07F10C07 		add	r7, r7, #12
 941 0058 BD46     		mov	sp, r7
 942 005a 80BC     		pop	{r7}
 943 005c 7047     		bx	lr
 944              		.cfi_endproc
 945              	.LFE71:
 947 005e 00BF     		.section	.text.RCC_LSICmd,"ax",%progbits
 948              		.align	2
 949              		.global	RCC_LSICmd
 950              		.thumb
 951              		.thumb_func
 953              	RCC_LSICmd:
 954              	.LFB72:
 861:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 862:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 863:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 864:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 865:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 866:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 867:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 868:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 869:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 955              		.loc 1 869 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 960 0000 80B4     		push	{r7}
 961              	.LCFI46:
 962              		.cfi_def_cfa_offset 4
 963              		.cfi_offset 7, -4
 964 0002 83B0     		sub	sp, sp, #12
 965              	.LCFI47:
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              	.LCFI48:
 969              		.cfi_def_cfa_register 7
 970 0006 0346     		mov	r3, r0
 971 0008 FB71     		strb	r3, [r7, #7]
 870:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 871:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 972              		.loc 1 872 0
 973 000a 4FF49063 		mov	r3, #1152
 974 000e C4F24223 		movt	r3, 16962
 975 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 976 0014 1A60     		str	r2, [r3, #0]
 873:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 977              		.loc 1 873 0
 978 0016 07F10C07 		add	r7, r7, #12
 979 001a BD46     		mov	sp, r7
 980 001c 80BC     		pop	{r7}
 981 001e 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE72:
 985              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 986              		.align	2
 987              		.global	RCC_RTCCLKConfig
 988              		.thumb
 989              		.thumb_func
 991              	RCC_RTCCLKConfig:
 992              	.LFB73:
 874:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 875:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 876:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 877:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 878:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 879:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 880:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 881:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 882:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 883:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 884:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 885:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 886:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 993              		.loc 1 886 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              	.LCFI49:
 1000              		.cfi_def_cfa_offset 4
 1001              		.cfi_offset 7, -4
 1002 0002 83B0     		sub	sp, sp, #12
 1003              	.LCFI50:
 1004              		.cfi_def_cfa_offset 16
 1005 0004 00AF     		add	r7, sp, #0
 1006              	.LCFI51:
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
 887:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 888:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 889:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 890:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1009              		.loc 1 890 0
 1010 0008 4FF48053 		mov	r3, #4096
 1011 000c C4F20203 		movt	r3, 16386
 1012 0010 4FF48052 		mov	r2, #4096
 1013 0014 C4F20202 		movt	r2, 16386
 1014 0018 116A     		ldr	r1, [r2, #32]
 1015 001a 7A68     		ldr	r2, [r7, #4]
 1016 001c 0A43     		orrs	r2, r2, r1
 1017 001e 1A62     		str	r2, [r3, #32]
 891:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1018              		.loc 1 891 0
 1019 0020 07F10C07 		add	r7, r7, #12
 1020 0024 BD46     		mov	sp, r7
 1021 0026 80BC     		pop	{r7}
 1022 0028 7047     		bx	lr
 1023              		.cfi_endproc
 1024              	.LFE73:
 1026 002a 00BF     		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1027              		.align	2
 1028              		.global	RCC_RTCCLKCmd
 1029              		.thumb
 1030              		.thumb_func
 1032              	RCC_RTCCLKCmd:
 1033              	.LFB74:
 892:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 893:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 894:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 895:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 896:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 897:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 898:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 899:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 900:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1034              		.loc 1 900 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 8
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 1039 0000 80B4     		push	{r7}
 1040              	.LCFI52:
 1041              		.cfi_def_cfa_offset 4
 1042              		.cfi_offset 7, -4
 1043 0002 83B0     		sub	sp, sp, #12
 1044              	.LCFI53:
 1045              		.cfi_def_cfa_offset 16
 1046 0004 00AF     		add	r7, sp, #0
 1047              	.LCFI54:
 1048              		.cfi_def_cfa_register 7
 1049 0006 0346     		mov	r3, r0
 1050 0008 FB71     		strb	r3, [r7, #7]
 901:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 902:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 903:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1051              		.loc 1 903 0
 1052 000a 40F23C43 		movw	r3, #1084
 1053 000e C4F24223 		movt	r3, 16962
 1054 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1055 0014 1A60     		str	r2, [r3, #0]
 904:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1056              		.loc 1 904 0
 1057 0016 07F10C07 		add	r7, r7, #12
 1058 001a BD46     		mov	sp, r7
 1059 001c 80BC     		pop	{r7}
 1060 001e 7047     		bx	lr
 1061              		.cfi_endproc
 1062              	.LFE74:
 1064              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1065              		.align	2
 1066              		.global	RCC_GetClocksFreq
 1067              		.thumb
 1068              		.thumb_func
 1070              	RCC_GetClocksFreq:
 1071              	.LFB75:
 905:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 906:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 907:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 908:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 909:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 910:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 911:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 912:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 913:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 914:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 915:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1072              		.loc 1 915 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 24
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 0000 80B4     		push	{r7}
 1078              	.LCFI55:
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 7, -4
 1081 0002 87B0     		sub	sp, sp, #28
 1082              	.LCFI56:
 1083              		.cfi_def_cfa_offset 32
 1084 0004 00AF     		add	r7, sp, #0
 1085              	.LCFI57:
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]
 916:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 1088              		.loc 1 916 0
 1089 0008 4FF00003 		mov	r3, #0
 1090 000c 7B61     		str	r3, [r7, #20]
 1091 000e 4FF00003 		mov	r3, #0
 1092 0012 3B61     		str	r3, [r7, #16]
 1093 0014 4FF00003 		mov	r3, #0
 1094 0018 FB60     		str	r3, [r7, #12]
 1095 001a 4FF00003 		mov	r3, #0
 1096 001e BB60     		str	r3, [r7, #8]
 917:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 918:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 919:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 920:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 921:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 922:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 923:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 924:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 925:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 926:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 927:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 1097              		.loc 1 927 0
 1098 0020 4FF48053 		mov	r3, #4096
 1099 0024 C4F20203 		movt	r3, 16386
 1100 0028 5B68     		ldr	r3, [r3, #4]
 1101 002a 03F00C03 		and	r3, r3, #12
 1102 002e 7B61     		str	r3, [r7, #20]
 928:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 929:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 1103              		.loc 1 929 0
 1104 0030 7B69     		ldr	r3, [r7, #20]
 1105 0032 042B     		cmp	r3, #4
 1106 0034 0AD0     		beq	.L41
 1107 0036 082B     		cmp	r3, #8
 1108 0038 0FD0     		beq	.L42
 1109 003a 002B     		cmp	r3, #0
 1110 003c 4DD1     		bne	.L47
 1111              	.L40:
 930:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 931:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 932:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1112              		.loc 1 932 0
 1113 003e 7A68     		ldr	r2, [r7, #4]
 1114 0040 4FF49053 		mov	r3, #4608
 1115 0044 C0F27A03 		movt	r3, 122
 1116 0048 1360     		str	r3, [r2, #0]
 933:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1117              		.loc 1 933 0
 1118 004a 4DE0     		b	.L43
 1119              	.L41:
 934:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 935:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1120              		.loc 1 935 0
 1121 004c 7A68     		ldr	r2, [r7, #4]
 1122 004e 4FF49053 		mov	r3, #4608
 1123 0052 C0F27A03 		movt	r3, 122
 1124 0056 1360     		str	r3, [r2, #0]
 936:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1125              		.loc 1 936 0
 1126 0058 46E0     		b	.L43
 1127              	.L42:
 937:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 938:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 939:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 940:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 1128              		.loc 1 940 0
 1129 005a 4FF48053 		mov	r3, #4096
 1130 005e C4F20203 		movt	r3, 16386
 1131 0062 5B68     		ldr	r3, [r3, #4]
 1132 0064 03F47013 		and	r3, r3, #3932160
 1133 0068 3B61     		str	r3, [r7, #16]
 941:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 1134              		.loc 1 941 0
 1135 006a 4FF48053 		mov	r3, #4096
 1136 006e C4F20203 		movt	r3, 16386
 1137 0072 5B68     		ldr	r3, [r3, #4]
 1138 0074 03F48033 		and	r3, r3, #65536
 1139 0078 FB60     		str	r3, [r7, #12]
 942:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 943:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 944:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1140              		.loc 1 944 0
 1141 007a 3B69     		ldr	r3, [r7, #16]
 1142 007c 4FEA9343 		lsr	r3, r3, #18
 1143 0080 03F10203 		add	r3, r3, #2
 1144 0084 3B61     		str	r3, [r7, #16]
 945:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 946:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 1145              		.loc 1 946 0
 1146 0086 FB68     		ldr	r3, [r7, #12]
 1147 0088 002B     		cmp	r3, #0
 1148 008a 09D1     		bne	.L44
 947:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 948:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 1149              		.loc 1 948 0
 1150 008c 3A69     		ldr	r2, [r7, #16]
 1151 008e 4FF41063 		mov	r3, #2304
 1152 0092 C0F23D03 		movt	r3, 61
 1153 0096 03FB02F2 		mul	r2, r3, r2
 1154 009a 7B68     		ldr	r3, [r7, #4]
 1155 009c 1A60     		str	r2, [r3, #0]
 949:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 950:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 951:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 952:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 953:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 954:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 955:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 956:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 957:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 958:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 959:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 960:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 961:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 962:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 963:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 964:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 965:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 966:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 967:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 968:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 969:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 970:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 971:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 972:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 973:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 974:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 975:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 976:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 977:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 978:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 979:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 980:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 981:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 982:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 983:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 984:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 985:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 986:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 987:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 988:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 989:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 990:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 991:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 992:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 993:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 994:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 995:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 996:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 997:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 998:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 999:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
1000:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
1001:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
1002:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
1003:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
1004:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1005:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1156              		.loc 1 1005 0
 1157 009e 23E0     		b	.L43
 1158              	.L44:
 958:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 1159              		.loc 1 958 0
 1160 00a0 4FF48053 		mov	r3, #4096
 1161 00a4 C4F20203 		movt	r3, 16386
 1162 00a8 5B68     		ldr	r3, [r3, #4]
 1163 00aa 03F40033 		and	r3, r3, #131072
 1164 00ae 002B     		cmp	r3, #0
 1165 00b0 09D0     		beq	.L46
 960:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 1166              		.loc 1 960 0
 1167 00b2 3A69     		ldr	r2, [r7, #16]
 1168 00b4 4FF41063 		mov	r3, #2304
 1169 00b8 C0F23D03 		movt	r3, 61
 1170 00bc 03FB02F2 		mul	r2, r3, r2
 1171 00c0 7B68     		ldr	r3, [r7, #4]
 1172 00c2 1A60     		str	r2, [r3, #0]
 1173              		.loc 1 1005 0
 1174 00c4 10E0     		b	.L43
 1175              	.L46:
 964:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 1176              		.loc 1 964 0
 1177 00c6 3A69     		ldr	r2, [r7, #16]
 1178 00c8 4FF49053 		mov	r3, #4608
 1179 00cc C0F27A03 		movt	r3, 122
 1180 00d0 03FB02F2 		mul	r2, r3, r2
 1181 00d4 7B68     		ldr	r3, [r7, #4]
 1182 00d6 1A60     		str	r2, [r3, #0]
 1183              		.loc 1 1005 0
 1184 00d8 06E0     		b	.L43
 1185              	.L47:
1006:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1007:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1008:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1186              		.loc 1 1008 0
 1187 00da 7A68     		ldr	r2, [r7, #4]
 1188 00dc 4FF49053 		mov	r3, #4608
 1189 00e0 C0F27A03 		movt	r3, 122
 1190 00e4 1360     		str	r3, [r2, #0]
1009:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 1191              		.loc 1 1009 0
 1192 00e6 00BF     		nop
 1193              	.L43:
1010:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1011:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1012:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1013:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1014:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 1194              		.loc 1 1014 0
 1195 00e8 4FF48053 		mov	r3, #4096
 1196 00ec C4F20203 		movt	r3, 16386
 1197 00f0 5B68     		ldr	r3, [r3, #4]
 1198 00f2 03F0F003 		and	r3, r3, #240
 1199 00f6 7B61     		str	r3, [r7, #20]
1015:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 1200              		.loc 1 1015 0
 1201 00f8 7B69     		ldr	r3, [r7, #20]
 1202 00fa 4FEA1313 		lsr	r3, r3, #4
 1203 00fe 7B61     		str	r3, [r7, #20]
1016:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1204              		.loc 1 1016 0
 1205 0100 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1206 0104 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1207 0108 7A69     		ldr	r2, [r7, #20]
 1208 010a 9B18     		adds	r3, r3, r2
 1209 010c 1B78     		ldrb	r3, [r3, #0]
 1210 010e DBB2     		uxtb	r3, r3
 1211 0110 BB60     		str	r3, [r7, #8]
1017:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1018:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1212              		.loc 1 1018 0
 1213 0112 7B68     		ldr	r3, [r7, #4]
 1214 0114 1A68     		ldr	r2, [r3, #0]
 1215 0116 BB68     		ldr	r3, [r7, #8]
 1216 0118 22FA03F2 		lsr	r2, r2, r3
 1217 011c 7B68     		ldr	r3, [r7, #4]
 1218 011e 5A60     		str	r2, [r3, #4]
1019:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1020:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 1219              		.loc 1 1020 0
 1220 0120 4FF48053 		mov	r3, #4096
 1221 0124 C4F20203 		movt	r3, 16386
 1222 0128 5B68     		ldr	r3, [r3, #4]
 1223 012a 03F4E063 		and	r3, r3, #1792
 1224 012e 7B61     		str	r3, [r7, #20]
1021:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 1225              		.loc 1 1021 0
 1226 0130 7B69     		ldr	r3, [r7, #20]
 1227 0132 4FEA1323 		lsr	r3, r3, #8
 1228 0136 7B61     		str	r3, [r7, #20]
1022:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1229              		.loc 1 1022 0
 1230 0138 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1231 013c C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1232 0140 7A69     		ldr	r2, [r7, #20]
 1233 0142 9B18     		adds	r3, r3, r2
 1234 0144 1B78     		ldrb	r3, [r3, #0]
 1235 0146 DBB2     		uxtb	r3, r3
 1236 0148 BB60     		str	r3, [r7, #8]
1023:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1024:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1237              		.loc 1 1024 0
 1238 014a 7B68     		ldr	r3, [r7, #4]
 1239 014c 5A68     		ldr	r2, [r3, #4]
 1240 014e BB68     		ldr	r3, [r7, #8]
 1241 0150 22FA03F2 		lsr	r2, r2, r3
 1242 0154 7B68     		ldr	r3, [r7, #4]
 1243 0156 9A60     		str	r2, [r3, #8]
1025:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1026:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 1244              		.loc 1 1026 0
 1245 0158 4FF48053 		mov	r3, #4096
 1246 015c C4F20203 		movt	r3, 16386
 1247 0160 5B68     		ldr	r3, [r3, #4]
 1248 0162 03F46053 		and	r3, r3, #14336
 1249 0166 7B61     		str	r3, [r7, #20]
1027:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 1250              		.loc 1 1027 0
 1251 0168 7B69     		ldr	r3, [r7, #20]
 1252 016a 4FEAD323 		lsr	r3, r3, #11
 1253 016e 7B61     		str	r3, [r7, #20]
1028:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1254              		.loc 1 1028 0
 1255 0170 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1256 0174 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1257 0178 7A69     		ldr	r2, [r7, #20]
 1258 017a 9B18     		adds	r3, r3, r2
 1259 017c 1B78     		ldrb	r3, [r3, #0]
 1260 017e DBB2     		uxtb	r3, r3
 1261 0180 BB60     		str	r3, [r7, #8]
1029:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1030:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1262              		.loc 1 1030 0
 1263 0182 7B68     		ldr	r3, [r7, #4]
 1264 0184 5A68     		ldr	r2, [r3, #4]
 1265 0186 BB68     		ldr	r3, [r7, #8]
 1266 0188 22FA03F2 		lsr	r2, r2, r3
 1267 018c 7B68     		ldr	r3, [r7, #4]
 1268 018e DA60     		str	r2, [r3, #12]
1031:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1032:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 1269              		.loc 1 1032 0
 1270 0190 4FF48053 		mov	r3, #4096
 1271 0194 C4F20203 		movt	r3, 16386
 1272 0198 5B68     		ldr	r3, [r3, #4]
 1273 019a 03F44043 		and	r3, r3, #49152
 1274 019e 7B61     		str	r3, [r7, #20]
1033:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 1275              		.loc 1 1033 0
 1276 01a0 7B69     		ldr	r3, [r7, #20]
 1277 01a2 4FEA9333 		lsr	r3, r3, #14
 1278 01a6 7B61     		str	r3, [r7, #20]
1034:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 1279              		.loc 1 1034 0
 1280 01a8 40F20003 		movw	r3, #:lower16:ADCPrescTable
 1281 01ac C0F20003 		movt	r3, #:upper16:ADCPrescTable
 1282 01b0 7A69     		ldr	r2, [r7, #20]
 1283 01b2 9B18     		adds	r3, r3, r2
 1284 01b4 1B78     		ldrb	r3, [r3, #0]
 1285 01b6 DBB2     		uxtb	r3, r3
 1286 01b8 BB60     		str	r3, [r7, #8]
1035:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1036:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 1287              		.loc 1 1036 0
 1288 01ba 7B68     		ldr	r3, [r7, #4]
 1289 01bc DA68     		ldr	r2, [r3, #12]
 1290 01be BB68     		ldr	r3, [r7, #8]
 1291 01c0 B2FBF3F2 		udiv	r2, r2, r3
 1292 01c4 7B68     		ldr	r3, [r7, #4]
 1293 01c6 1A61     		str	r2, [r3, #16]
1037:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1294              		.loc 1 1037 0
 1295 01c8 07F11C07 		add	r7, r7, #28
 1296 01cc BD46     		mov	sp, r7
 1297 01ce 80BC     		pop	{r7}
 1298 01d0 7047     		bx	lr
 1299              		.cfi_endproc
 1300              	.LFE75:
 1302 01d2 00BF     		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 1303              		.align	2
 1304              		.global	RCC_AHBPeriphClockCmd
 1305              		.thumb
 1306              		.thumb_func
 1308              	RCC_AHBPeriphClockCmd:
 1309              	.LFB76:
1038:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1039:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1040:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1041:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1042:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1043:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1044:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1045:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1046:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1047:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1048:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1049:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1050:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1051:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1052:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1053:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1054:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1055:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1056:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1057:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1058:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1059:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1060:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1061:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1062:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1063:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1064:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1065:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1066:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1067:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1068:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1069:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1070:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1071:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1310              		.loc 1 1071 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 8
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315 0000 80B4     		push	{r7}
 1316              	.LCFI58:
 1317              		.cfi_def_cfa_offset 4
 1318              		.cfi_offset 7, -4
 1319 0002 83B0     		sub	sp, sp, #12
 1320              	.LCFI59:
 1321              		.cfi_def_cfa_offset 16
 1322 0004 00AF     		add	r7, sp, #0
 1323              	.LCFI60:
 1324              		.cfi_def_cfa_register 7
 1325 0006 7860     		str	r0, [r7, #4]
 1326 0008 0B46     		mov	r3, r1
 1327 000a FB70     		strb	r3, [r7, #3]
1072:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1073:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1074:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1075:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1076:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1328              		.loc 1 1076 0
 1329 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1330 000e 002B     		cmp	r3, #0
 1331 0010 0CD0     		beq	.L49
1077:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1078:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1332              		.loc 1 1078 0
 1333 0012 4FF48053 		mov	r3, #4096
 1334 0016 C4F20203 		movt	r3, 16386
 1335 001a 4FF48052 		mov	r2, #4096
 1336 001e C4F20202 		movt	r2, 16386
 1337 0022 5169     		ldr	r1, [r2, #20]
 1338 0024 7A68     		ldr	r2, [r7, #4]
 1339 0026 0A43     		orrs	r2, r2, r1
 1340 0028 5A61     		str	r2, [r3, #20]
 1341 002a 0DE0     		b	.L48
 1342              	.L49:
1079:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1080:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1081:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1082:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1343              		.loc 1 1082 0
 1344 002c 4FF48053 		mov	r3, #4096
 1345 0030 C4F20203 		movt	r3, 16386
 1346 0034 4FF48052 		mov	r2, #4096
 1347 0038 C4F20202 		movt	r2, 16386
 1348 003c 5169     		ldr	r1, [r2, #20]
 1349 003e 7A68     		ldr	r2, [r7, #4]
 1350 0040 6FEA0202 		mvn	r2, r2
 1351 0044 0A40     		ands	r2, r2, r1
 1352 0046 5A61     		str	r2, [r3, #20]
 1353              	.L48:
1083:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1084:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1354              		.loc 1 1084 0
 1355 0048 07F10C07 		add	r7, r7, #12
 1356 004c BD46     		mov	sp, r7
 1357 004e 80BC     		pop	{r7}
 1358 0050 7047     		bx	lr
 1359              		.cfi_endproc
 1360              	.LFE76:
 1362 0052 00BF     		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1363              		.align	2
 1364              		.global	RCC_APB2PeriphClockCmd
 1365              		.thumb
 1366              		.thumb_func
 1368              	RCC_APB2PeriphClockCmd:
 1369              	.LFB77:
1085:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1086:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1087:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1088:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1089:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1090:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1091:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1092:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1093:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1094:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1095:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1096:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1097:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1098:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1099:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1370              		.loc 1 1102 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 8
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 1375 0000 80B4     		push	{r7}
 1376              	.LCFI61:
 1377              		.cfi_def_cfa_offset 4
 1378              		.cfi_offset 7, -4
 1379 0002 83B0     		sub	sp, sp, #12
 1380              	.LCFI62:
 1381              		.cfi_def_cfa_offset 16
 1382 0004 00AF     		add	r7, sp, #0
 1383              	.LCFI63:
 1384              		.cfi_def_cfa_register 7
 1385 0006 7860     		str	r0, [r7, #4]
 1386 0008 0B46     		mov	r3, r1
 1387 000a FB70     		strb	r3, [r7, #3]
1103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1388              		.loc 1 1106 0
 1389 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1390 000e 002B     		cmp	r3, #0
 1391 0010 0CD0     		beq	.L52
1107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1392              		.loc 1 1108 0
 1393 0012 4FF48053 		mov	r3, #4096
 1394 0016 C4F20203 		movt	r3, 16386
 1395 001a 4FF48052 		mov	r2, #4096
 1396 001e C4F20202 		movt	r2, 16386
 1397 0022 9169     		ldr	r1, [r2, #24]
 1398 0024 7A68     		ldr	r2, [r7, #4]
 1399 0026 0A43     		orrs	r2, r2, r1
 1400 0028 9A61     		str	r2, [r3, #24]
 1401 002a 0DE0     		b	.L51
 1402              	.L52:
1109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1403              		.loc 1 1112 0
 1404 002c 4FF48053 		mov	r3, #4096
 1405 0030 C4F20203 		movt	r3, 16386
 1406 0034 4FF48052 		mov	r2, #4096
 1407 0038 C4F20202 		movt	r2, 16386
 1408 003c 9169     		ldr	r1, [r2, #24]
 1409 003e 7A68     		ldr	r2, [r7, #4]
 1410 0040 6FEA0202 		mvn	r2, r2
 1411 0044 0A40     		ands	r2, r2, r1
 1412 0046 9A61     		str	r2, [r3, #24]
 1413              	.L51:
1113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1414              		.loc 1 1114 0
 1415 0048 07F10C07 		add	r7, r7, #12
 1416 004c BD46     		mov	sp, r7
 1417 004e 80BC     		pop	{r7}
 1418 0050 7047     		bx	lr
 1419              		.cfi_endproc
 1420              	.LFE77:
 1422 0052 00BF     		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1423              		.align	2
 1424              		.global	RCC_APB1PeriphClockCmd
 1425              		.thumb
 1426              		.thumb_func
 1428              	RCC_APB1PeriphClockCmd:
 1429              	.LFB78:
1115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1430              		.loc 1 1133 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 8
 1433              		@ frame_needed = 1, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 1435 0000 80B4     		push	{r7}
 1436              	.LCFI64:
 1437              		.cfi_def_cfa_offset 4
 1438              		.cfi_offset 7, -4
 1439 0002 83B0     		sub	sp, sp, #12
 1440              	.LCFI65:
 1441              		.cfi_def_cfa_offset 16
 1442 0004 00AF     		add	r7, sp, #0
 1443              	.LCFI66:
 1444              		.cfi_def_cfa_register 7
 1445 0006 7860     		str	r0, [r7, #4]
 1446 0008 0B46     		mov	r3, r1
 1447 000a FB70     		strb	r3, [r7, #3]
1134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1448              		.loc 1 1137 0
 1449 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1450 000e 002B     		cmp	r3, #0
 1451 0010 0CD0     		beq	.L55
1138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1452              		.loc 1 1139 0
 1453 0012 4FF48053 		mov	r3, #4096
 1454 0016 C4F20203 		movt	r3, 16386
 1455 001a 4FF48052 		mov	r2, #4096
 1456 001e C4F20202 		movt	r2, 16386
 1457 0022 D169     		ldr	r1, [r2, #28]
 1458 0024 7A68     		ldr	r2, [r7, #4]
 1459 0026 0A43     		orrs	r2, r2, r1
 1460 0028 DA61     		str	r2, [r3, #28]
 1461 002a 0DE0     		b	.L54
 1462              	.L55:
1140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1463              		.loc 1 1143 0
 1464 002c 4FF48053 		mov	r3, #4096
 1465 0030 C4F20203 		movt	r3, 16386
 1466 0034 4FF48052 		mov	r2, #4096
 1467 0038 C4F20202 		movt	r2, 16386
 1468 003c D169     		ldr	r1, [r2, #28]
 1469 003e 7A68     		ldr	r2, [r7, #4]
 1470 0040 6FEA0202 		mvn	r2, r2
 1471 0044 0A40     		ands	r2, r2, r1
 1472 0046 DA61     		str	r2, [r3, #28]
 1473              	.L54:
1144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1474              		.loc 1 1145 0
 1475 0048 07F10C07 		add	r7, r7, #12
 1476 004c BD46     		mov	sp, r7
 1477 004e 80BC     		pop	{r7}
 1478 0050 7047     		bx	lr
 1479              		.cfi_endproc
 1480              	.LFE78:
 1482 0052 00BF     		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1483              		.align	2
 1484              		.global	RCC_APB2PeriphResetCmd
 1485              		.thumb
 1486              		.thumb_func
 1488              	RCC_APB2PeriphResetCmd:
 1489              	.LFB79:
1146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1490              		.loc 1 1192 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 8
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
 1495 0000 80B4     		push	{r7}
 1496              	.LCFI67:
 1497              		.cfi_def_cfa_offset 4
 1498              		.cfi_offset 7, -4
 1499 0002 83B0     		sub	sp, sp, #12
 1500              	.LCFI68:
 1501              		.cfi_def_cfa_offset 16
 1502 0004 00AF     		add	r7, sp, #0
 1503              	.LCFI69:
 1504              		.cfi_def_cfa_register 7
 1505 0006 7860     		str	r0, [r7, #4]
 1506 0008 0B46     		mov	r3, r1
 1507 000a FB70     		strb	r3, [r7, #3]
1193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1508              		.loc 1 1196 0
 1509 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1510 000e 002B     		cmp	r3, #0
 1511 0010 0CD0     		beq	.L58
1197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1512              		.loc 1 1198 0
 1513 0012 4FF48053 		mov	r3, #4096
 1514 0016 C4F20203 		movt	r3, 16386
 1515 001a 4FF48052 		mov	r2, #4096
 1516 001e C4F20202 		movt	r2, 16386
 1517 0022 D168     		ldr	r1, [r2, #12]
 1518 0024 7A68     		ldr	r2, [r7, #4]
 1519 0026 0A43     		orrs	r2, r2, r1
 1520 0028 DA60     		str	r2, [r3, #12]
 1521 002a 0DE0     		b	.L57
 1522              	.L58:
1199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1523              		.loc 1 1202 0
 1524 002c 4FF48053 		mov	r3, #4096
 1525 0030 C4F20203 		movt	r3, 16386
 1526 0034 4FF48052 		mov	r2, #4096
 1527 0038 C4F20202 		movt	r2, 16386
 1528 003c D168     		ldr	r1, [r2, #12]
 1529 003e 7A68     		ldr	r2, [r7, #4]
 1530 0040 6FEA0202 		mvn	r2, r2
 1531 0044 0A40     		ands	r2, r2, r1
 1532 0046 DA60     		str	r2, [r3, #12]
 1533              	.L57:
1203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1534              		.loc 1 1204 0
 1535 0048 07F10C07 		add	r7, r7, #12
 1536 004c BD46     		mov	sp, r7
 1537 004e 80BC     		pop	{r7}
 1538 0050 7047     		bx	lr
 1539              		.cfi_endproc
 1540              	.LFE79:
 1542 0052 00BF     		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1543              		.align	2
 1544              		.global	RCC_APB1PeriphResetCmd
 1545              		.thumb
 1546              		.thumb_func
 1548              	RCC_APB1PeriphResetCmd:
 1549              	.LFB80:
1205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1550              		.loc 1 1223 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 8
 1553              		@ frame_needed = 1, uses_anonymous_args = 0
 1554              		@ link register save eliminated.
 1555 0000 80B4     		push	{r7}
 1556              	.LCFI70:
 1557              		.cfi_def_cfa_offset 4
 1558              		.cfi_offset 7, -4
 1559 0002 83B0     		sub	sp, sp, #12
 1560              	.LCFI71:
 1561              		.cfi_def_cfa_offset 16
 1562 0004 00AF     		add	r7, sp, #0
 1563              	.LCFI72:
 1564              		.cfi_def_cfa_register 7
 1565 0006 7860     		str	r0, [r7, #4]
 1566 0008 0B46     		mov	r3, r1
 1567 000a FB70     		strb	r3, [r7, #3]
1224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1568              		.loc 1 1227 0
 1569 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1570 000e 002B     		cmp	r3, #0
 1571 0010 0CD0     		beq	.L61
1228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1572              		.loc 1 1229 0
 1573 0012 4FF48053 		mov	r3, #4096
 1574 0016 C4F20203 		movt	r3, 16386
 1575 001a 4FF48052 		mov	r2, #4096
 1576 001e C4F20202 		movt	r2, 16386
 1577 0022 1169     		ldr	r1, [r2, #16]
 1578 0024 7A68     		ldr	r2, [r7, #4]
 1579 0026 0A43     		orrs	r2, r2, r1
 1580 0028 1A61     		str	r2, [r3, #16]
 1581 002a 0DE0     		b	.L60
 1582              	.L61:
1230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1583              		.loc 1 1233 0
 1584 002c 4FF48053 		mov	r3, #4096
 1585 0030 C4F20203 		movt	r3, 16386
 1586 0034 4FF48052 		mov	r2, #4096
 1587 0038 C4F20202 		movt	r2, 16386
 1588 003c 1169     		ldr	r1, [r2, #16]
 1589 003e 7A68     		ldr	r2, [r7, #4]
 1590 0040 6FEA0202 		mvn	r2, r2
 1591 0044 0A40     		ands	r2, r2, r1
 1592 0046 1A61     		str	r2, [r3, #16]
 1593              	.L60:
1234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1594              		.loc 1 1235 0
 1595 0048 07F10C07 		add	r7, r7, #12
 1596 004c BD46     		mov	sp, r7
 1597 004e 80BC     		pop	{r7}
 1598 0050 7047     		bx	lr
 1599              		.cfi_endproc
 1600              	.LFE80:
 1602 0052 00BF     		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1603              		.align	2
 1604              		.global	RCC_BackupResetCmd
 1605              		.thumb
 1606              		.thumb_func
 1608              	RCC_BackupResetCmd:
 1609              	.LFB81:
1236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1610              		.loc 1 1244 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 8
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615 0000 80B4     		push	{r7}
 1616              	.LCFI73:
 1617              		.cfi_def_cfa_offset 4
 1618              		.cfi_offset 7, -4
 1619 0002 83B0     		sub	sp, sp, #12
 1620              	.LCFI74:
 1621              		.cfi_def_cfa_offset 16
 1622 0004 00AF     		add	r7, sp, #0
 1623              	.LCFI75:
 1624              		.cfi_def_cfa_register 7
 1625 0006 0346     		mov	r3, r0
 1626 0008 FB71     		strb	r3, [r7, #7]
1245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1627              		.loc 1 1247 0
 1628 000a 4FF48863 		mov	r3, #1088
 1629 000e C4F24223 		movt	r3, 16962
 1630 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1631 0014 1A60     		str	r2, [r3, #0]
1248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1632              		.loc 1 1248 0
 1633 0016 07F10C07 		add	r7, r7, #12
 1634 001a BD46     		mov	sp, r7
 1635 001c 80BC     		pop	{r7}
 1636 001e 7047     		bx	lr
 1637              		.cfi_endproc
 1638              	.LFE81:
 1640              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 1641              		.align	2
 1642              		.global	RCC_ClockSecuritySystemCmd
 1643              		.thumb
 1644              		.thumb_func
 1646              	RCC_ClockSecuritySystemCmd:
 1647              	.LFB82:
1249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1648              		.loc 1 1257 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 8
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652              		@ link register save eliminated.
 1653 0000 80B4     		push	{r7}
 1654              	.LCFI76:
 1655              		.cfi_def_cfa_offset 4
 1656              		.cfi_offset 7, -4
 1657 0002 83B0     		sub	sp, sp, #12
 1658              	.LCFI77:
 1659              		.cfi_def_cfa_offset 16
 1660 0004 00AF     		add	r7, sp, #0
 1661              	.LCFI78:
 1662              		.cfi_def_cfa_register 7
 1663 0006 0346     		mov	r3, r0
 1664 0008 FB71     		strb	r3, [r7, #7]
1258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1665              		.loc 1 1260 0
 1666 000a 4FF04C03 		mov	r3, #76
 1667 000e C4F24223 		movt	r3, 16962
 1668 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1669 0014 1A60     		str	r2, [r3, #0]
1261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1670              		.loc 1 1261 0
 1671 0016 07F10C07 		add	r7, r7, #12
 1672 001a BD46     		mov	sp, r7
 1673 001c 80BC     		pop	{r7}
 1674 001e 7047     		bx	lr
 1675              		.cfi_endproc
 1676              	.LFE82:
 1678              		.section	.text.RCC_MCOConfig,"ax",%progbits
 1679              		.align	2
 1680              		.global	RCC_MCOConfig
 1681              		.thumb
 1682              		.thumb_func
 1684              	RCC_MCOConfig:
 1685              	.LFB83:
1262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1686              		.loc 1 1289 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 8
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691 0000 80B4     		push	{r7}
 1692              	.LCFI79:
 1693              		.cfi_def_cfa_offset 4
 1694              		.cfi_offset 7, -4
 1695 0002 83B0     		sub	sp, sp, #12
 1696              	.LCFI80:
 1697              		.cfi_def_cfa_offset 16
 1698 0004 00AF     		add	r7, sp, #0
 1699              	.LCFI81:
 1700              		.cfi_def_cfa_register 7
 1701 0006 0346     		mov	r3, r0
 1702 0008 FB71     		strb	r3, [r7, #7]
1290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1703              		.loc 1 1294 0
 1704 000a 41F20703 		movw	r3, #4103
 1705 000e C4F20203 		movt	r3, 16386
 1706 0012 FA79     		ldrb	r2, [r7, #7]
 1707 0014 1A70     		strb	r2, [r3, #0]
1295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1708              		.loc 1 1295 0
 1709 0016 07F10C07 		add	r7, r7, #12
 1710 001a BD46     		mov	sp, r7
 1711 001c 80BC     		pop	{r7}
 1712 001e 7047     		bx	lr
 1713              		.cfi_endproc
 1714              	.LFE83:
 1716              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1717              		.align	2
 1718              		.global	RCC_GetFlagStatus
 1719              		.thumb
 1720              		.thumb_func
 1722              	RCC_GetFlagStatus:
 1723              	.LFB84:
1296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1724              		.loc 1 1333 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 24
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
 1729 0000 80B4     		push	{r7}
 1730              	.LCFI82:
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 87B0     		sub	sp, sp, #28
 1734              	.LCFI83:
 1735              		.cfi_def_cfa_offset 32
 1736 0004 00AF     		add	r7, sp, #0
 1737              	.LCFI84:
 1738              		.cfi_def_cfa_register 7
 1739 0006 0346     		mov	r3, r0
 1740 0008 FB71     		strb	r3, [r7, #7]
1334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
 1741              		.loc 1 1334 0
 1742 000a 4FF00003 		mov	r3, #0
 1743 000e FB60     		str	r3, [r7, #12]
1335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
 1744              		.loc 1 1335 0
 1745 0010 4FF00003 		mov	r3, #0
 1746 0014 7B61     		str	r3, [r7, #20]
1336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
 1747              		.loc 1 1336 0
 1748 0016 4FF00003 		mov	r3, #0
 1749 001a FB74     		strb	r3, [r7, #19]
1337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1750              		.loc 1 1341 0
 1751 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1752 001e 4FEA5313 		lsr	r3, r3, #5
 1753 0022 DBB2     		uxtb	r3, r3
 1754 0024 FB60     		str	r3, [r7, #12]
1342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1755              		.loc 1 1342 0
 1756 0026 FB68     		ldr	r3, [r7, #12]
 1757 0028 012B     		cmp	r3, #1
 1758 002a 06D1     		bne	.L67
1343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1759              		.loc 1 1344 0
 1760 002c 4FF48053 		mov	r3, #4096
 1761 0030 C4F20203 		movt	r3, 16386
 1762 0034 1B68     		ldr	r3, [r3, #0]
 1763 0036 7B61     		str	r3, [r7, #20]
 1764 0038 0FE0     		b	.L68
 1765              	.L67:
1345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1766              		.loc 1 1346 0
 1767 003a FB68     		ldr	r3, [r7, #12]
 1768 003c 022B     		cmp	r3, #2
 1769 003e 06D1     		bne	.L69
1347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1770              		.loc 1 1348 0
 1771 0040 4FF48053 		mov	r3, #4096
 1772 0044 C4F20203 		movt	r3, 16386
 1773 0048 1B6A     		ldr	r3, [r3, #32]
 1774 004a 7B61     		str	r3, [r7, #20]
 1775 004c 05E0     		b	.L68
 1776              	.L69:
1349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1777              		.loc 1 1352 0
 1778 004e 4FF48053 		mov	r3, #4096
 1779 0052 C4F20203 		movt	r3, 16386
 1780 0056 5B6A     		ldr	r3, [r3, #36]
 1781 0058 7B61     		str	r3, [r7, #20]
 1782              	.L68:
1353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1783              		.loc 1 1356 0
 1784 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1785 005c 03F01F03 		and	r3, r3, #31
 1786 0060 FB60     		str	r3, [r7, #12]
1357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1787              		.loc 1 1357 0
 1788 0062 FB68     		ldr	r3, [r7, #12]
 1789 0064 7A69     		ldr	r2, [r7, #20]
 1790 0066 22FA03F3 		lsr	r3, r2, r3
 1791 006a 03F00103 		and	r3, r3, #1
 1792 006e 002B     		cmp	r3, #0
 1793 0070 03D0     		beq	.L70
1358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1794              		.loc 1 1359 0
 1795 0072 4FF00103 		mov	r3, #1
 1796 0076 FB74     		strb	r3, [r7, #19]
 1797 0078 02E0     		b	.L71
 1798              	.L70:
1360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1799              		.loc 1 1363 0
 1800 007a 4FF00003 		mov	r3, #0
 1801 007e FB74     		strb	r3, [r7, #19]
 1802              	.L71:
1364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
 1803              		.loc 1 1367 0
 1804 0080 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1805              		.loc 1 1368 0
 1806 0082 1846     		mov	r0, r3
 1807 0084 07F11C07 		add	r7, r7, #28
 1808 0088 BD46     		mov	sp, r7
 1809 008a 80BC     		pop	{r7}
 1810 008c 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE84:
 1814 008e 00BF     		.section	.text.RCC_ClearFlag,"ax",%progbits
 1815              		.align	2
 1816              		.global	RCC_ClearFlag
 1817              		.thumb
 1818              		.thumb_func
 1820              	RCC_ClearFlag:
 1821              	.LFB85:
1369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1822              		.loc 1 1378 0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 1, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
 1827 0000 80B4     		push	{r7}
 1828              	.LCFI85:
 1829              		.cfi_def_cfa_offset 4
 1830              		.cfi_offset 7, -4
 1831 0002 00AF     		add	r7, sp, #0
 1832              	.LCFI86:
 1833              		.cfi_def_cfa_register 7
1379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1834              		.loc 1 1380 0
 1835 0004 4FF48053 		mov	r3, #4096
 1836 0008 C4F20203 		movt	r3, 16386
 1837 000c 4FF48052 		mov	r2, #4096
 1838 0010 C4F20202 		movt	r2, 16386
 1839 0014 526A     		ldr	r2, [r2, #36]
 1840 0016 42F08072 		orr	r2, r2, #16777216
 1841 001a 5A62     		str	r2, [r3, #36]
1381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1842              		.loc 1 1381 0
 1843 001c BD46     		mov	sp, r7
 1844 001e 80BC     		pop	{r7}
 1845 0020 7047     		bx	lr
 1846              		.cfi_endproc
 1847              	.LFE85:
 1849 0022 00BF     		.section	.text.RCC_GetITStatus,"ax",%progbits
 1850              		.align	2
 1851              		.global	RCC_GetITStatus
 1852              		.thumb
 1853              		.thumb_func
 1855              	RCC_GetITStatus:
 1856              	.LFB86:
1382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1857              		.loc 1 1409 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 16
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861              		@ link register save eliminated.
 1862 0000 80B4     		push	{r7}
 1863              	.LCFI87:
 1864              		.cfi_def_cfa_offset 4
 1865              		.cfi_offset 7, -4
 1866 0002 85B0     		sub	sp, sp, #20
 1867              	.LCFI88:
 1868              		.cfi_def_cfa_offset 24
 1869 0004 00AF     		add	r7, sp, #0
 1870              	.LCFI89:
 1871              		.cfi_def_cfa_register 7
 1872 0006 0346     		mov	r3, r0
 1873 0008 FB71     		strb	r3, [r7, #7]
1410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
 1874              		.loc 1 1410 0
 1875 000a 4FF00003 		mov	r3, #0
 1876 000e FB73     		strb	r3, [r7, #15]
1411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1877              		.loc 1 1415 0
 1878 0010 4FF48053 		mov	r3, #4096
 1879 0014 C4F20203 		movt	r3, 16386
 1880 0018 9A68     		ldr	r2, [r3, #8]
 1881 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1882 001c 1340     		ands	r3, r3, r2
 1883 001e 002B     		cmp	r3, #0
 1884 0020 03D0     		beq	.L75
1416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1885              		.loc 1 1417 0
 1886 0022 4FF00103 		mov	r3, #1
 1887 0026 FB73     		strb	r3, [r7, #15]
 1888 0028 02E0     		b	.L76
 1889              	.L75:
1418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1890              		.loc 1 1421 0
 1891 002a 4FF00003 		mov	r3, #0
 1892 002e FB73     		strb	r3, [r7, #15]
 1893              	.L76:
1422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
 1894              		.loc 1 1425 0
 1895 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1896              		.loc 1 1426 0
 1897 0032 1846     		mov	r0, r3
 1898 0034 07F11407 		add	r7, r7, #20
 1899 0038 BD46     		mov	sp, r7
 1900 003a 80BC     		pop	{r7}
 1901 003c 7047     		bx	lr
 1902              		.cfi_endproc
 1903              	.LFE86:
 1905 003e 00BF     		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 1906              		.align	2
 1907              		.global	RCC_ClearITPendingBit
 1908              		.thumb
 1909              		.thumb_func
 1911              	RCC_ClearITPendingBit:
 1912              	.LFB87:
1427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1913              		.loc 1 1455 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 8
 1916              		@ frame_needed = 1, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 1918 0000 80B4     		push	{r7}
 1919              	.LCFI90:
 1920              		.cfi_def_cfa_offset 4
 1921              		.cfi_offset 7, -4
 1922 0002 83B0     		sub	sp, sp, #12
 1923              	.LCFI91:
 1924              		.cfi_def_cfa_offset 16
 1925 0004 00AF     		add	r7, sp, #0
 1926              	.LCFI92:
 1927              		.cfi_def_cfa_register 7
 1928 0006 0346     		mov	r3, r0
 1929 0008 FB71     		strb	r3, [r7, #7]
1456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1930              		.loc 1 1461 0
 1931 000a 41F20A03 		movw	r3, #4106
 1932 000e C4F20203 		movt	r3, 16386
 1933 0012 FA79     		ldrb	r2, [r7, #7]
 1934 0014 1A70     		strb	r2, [r3, #0]
1462:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1935              		.loc 1 1462 0
 1936 0016 07F10C07 		add	r7, r7, #12
 1937 001a BD46     		mov	sp, r7
 1938 001c 80BC     		pop	{r7}
 1939 001e 7047     		bx	lr
 1940              		.cfi_endproc
 1941              	.LFE87:
 1943              		.text
 1944              	.Letext0:
 1945              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 1946              		.file 3 "/Users/zac/code/spark/marvin/libraries/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 1947              		.file 4 "/Users/zac/code/spark/marvin/libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 1948              		.file 5 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:19     .data:0000000000000000 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:22     .data:0000000000000000 APBAHBPrescTable
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:42     .data:0000000000000010 ADCPrescTable
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:48     .text.RCC_DeInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:53     .text.RCC_DeInit:0000000000000000 RCC_DeInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:124    .text.RCC_HSEConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:129    .text.RCC_HSEConfig:0000000000000000 RCC_HSEConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:205    .text.RCC_WaitForHSEStartUp:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:210    .text.RCC_WaitForHSEStartUp:0000000000000000 RCC_WaitForHSEStartUp
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1722   .text.RCC_GetFlagStatus:0000000000000000 RCC_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:280    .text.RCC_AdjustHSICalibrationValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:285    .text.RCC_AdjustHSICalibrationValue:0000000000000000 RCC_AdjustHSICalibrationValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:336    .text.RCC_HSICmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:341    .text.RCC_HSICmd:0000000000000000 RCC_HSICmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:374    .text.RCC_PLLConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:379    .text.RCC_PLLConfig:0000000000000000 RCC_PLLConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:431    .text.RCC_PLLCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:436    .text.RCC_PLLCmd:0000000000000000 RCC_PLLCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:469    .text.RCC_SYSCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:474    .text.RCC_SYSCLKConfig:0000000000000000 RCC_SYSCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:523    .text.RCC_GetSYSCLKSource:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:528    .text.RCC_GetSYSCLKSource:0000000000000000 RCC_GetSYSCLKSource
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:558    .text.RCC_HCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:563    .text.RCC_HCLKConfig:0000000000000000 RCC_HCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:612    .text.RCC_PCLK1Config:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:617    .text.RCC_PCLK1Config:0000000000000000 RCC_PCLK1Config
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:666    .text.RCC_PCLK2Config:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:671    .text.RCC_PCLK2Config:0000000000000000 RCC_PCLK2Config
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:721    .text.RCC_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:726    .text.RCC_ITConfig:0000000000000000 RCC_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:787    .text.RCC_USBCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:792    .text.RCC_USBCLKConfig:0000000000000000 RCC_USBCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:824    .text.RCC_ADCCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:829    .text.RCC_ADCCLKConfig:0000000000000000 RCC_ADCCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:878    .text.RCC_LSEConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:883    .text.RCC_LSEConfig:0000000000000000 RCC_LSEConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:948    .text.RCC_LSICmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:953    .text.RCC_LSICmd:0000000000000000 RCC_LSICmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:986    .text.RCC_RTCCLKConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:991    .text.RCC_RTCCLKConfig:0000000000000000 RCC_RTCCLKConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1027   .text.RCC_RTCCLKCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1032   .text.RCC_RTCCLKCmd:0000000000000000 RCC_RTCCLKCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1065   .text.RCC_GetClocksFreq:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1070   .text.RCC_GetClocksFreq:0000000000000000 RCC_GetClocksFreq
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1303   .text.RCC_AHBPeriphClockCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1308   .text.RCC_AHBPeriphClockCmd:0000000000000000 RCC_AHBPeriphClockCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1363   .text.RCC_APB2PeriphClockCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1368   .text.RCC_APB2PeriphClockCmd:0000000000000000 RCC_APB2PeriphClockCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1423   .text.RCC_APB1PeriphClockCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1428   .text.RCC_APB1PeriphClockCmd:0000000000000000 RCC_APB1PeriphClockCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1483   .text.RCC_APB2PeriphResetCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1488   .text.RCC_APB2PeriphResetCmd:0000000000000000 RCC_APB2PeriphResetCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1543   .text.RCC_APB1PeriphResetCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1548   .text.RCC_APB1PeriphResetCmd:0000000000000000 RCC_APB1PeriphResetCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1603   .text.RCC_BackupResetCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1608   .text.RCC_BackupResetCmd:0000000000000000 RCC_BackupResetCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1641   .text.RCC_ClockSecuritySystemCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1646   .text.RCC_ClockSecuritySystemCmd:0000000000000000 RCC_ClockSecuritySystemCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1679   .text.RCC_MCOConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1684   .text.RCC_MCOConfig:0000000000000000 RCC_MCOConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1717   .text.RCC_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1815   .text.RCC_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1820   .text.RCC_ClearFlag:0000000000000000 RCC_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1850   .text.RCC_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1855   .text.RCC_GetITStatus:0000000000000000 RCC_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1906   .text.RCC_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccegruTP.s:1911   .text.RCC_ClearITPendingBit:0000000000000000 RCC_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.31.74a586c036c8ee5d9205c6728cc8d6ab
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.73.39d0bf38e72896b342f8df9bde23ca46

NO UNDEFINED SYMBOLS
