   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_spi.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SPI_I2S_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	SPI_I2S_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	SPI_I2S_DeInit:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @file    stm32f10x_spi.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief   This file provides all the SPI firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_spi.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_rcc.h"
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI 
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief SPI driver modules
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_TypesDefinitions
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Defines
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SPE mask */
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Set          ((uint16_t)0x0040)
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Reset        ((uint16_t)0xFFBF)
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S I2SE mask */
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Set     ((uint16_t)0x0400)
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Reset   ((uint16_t)0xFBFF)
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCNext mask */
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCNext_Set      ((uint16_t)0x1000)
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCEN mask */
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Set        ((uint16_t)0x2000)
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Reset      ((uint16_t)0xDFFF)
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SSOE mask */
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Set         ((uint16_t)0x0004)
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Reset       ((uint16_t)0xFFFB)
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI registers Masks */
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CLEAR_Mask       ((uint16_t)0x3040)
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_CLEAR_Mask   ((uint16_t)0xF040)
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI or I2S mode selection masks */
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define SPI_Mode_Select      ((uint16_t)0xF7FF)
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_Mode_Select      ((uint16_t)0x0800) 
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S clock source selection masks */
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S2_CLOCK_SRC       ((uint32_t)(0x00020000))
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S3_CLOCK_SRC       ((uint32_t)(0x00040000))
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_MUL_MASK         ((uint32_t)(0x0000F000))
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_DIV_MASK         ((uint32_t)(0x000000F0))
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Macros
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Variables
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_FunctionPrototypes
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Functions
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Deinitializes the SPIx peripheral registers to their default
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         reset values (Affects also the I2Ss).
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
  27              		.loc 1 126 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPIx == SPI1)
  43              		.loc 1 130 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF44053 		mov	r3, #12288
  46 000e C4F20103 		movt	r3, 16385
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI1 reset state */
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
  49              		.loc 1 133 0
  50 0016 4FF48050 		mov	r0, #4096
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI1 from reset state */
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
  53              		.loc 1 135 0
  54 0022 4FF48050 		mov	r0, #4096
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 002e 26E0     		b	.L1
  58              	.L2:
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else if (SPIx == SPI2)
  59              		.loc 1 137 0
  60 0030 7A68     		ldr	r2, [r7, #4]
  61 0032 4FF46053 		mov	r3, #14336
  62 0036 C4F20003 		movt	r3, 16384
  63 003a 9A42     		cmp	r2, r3
  64 003c 0CD1     		bne	.L4
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI2 reset state */
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
  65              		.loc 1 140 0
  66 003e 4FF48040 		mov	r0, #16384
  67 0042 4FF00101 		mov	r1, #1
  68 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI2 from reset state */
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
  69              		.loc 1 142 0
  70 004a 4FF48040 		mov	r0, #16384
  71 004e 4FF00001 		mov	r1, #0
  72 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  73 0056 12E0     		b	.L1
  74              	.L4:
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if (SPIx == SPI3)
  75              		.loc 1 146 0
  76 0058 7A68     		ldr	r2, [r7, #4]
  77 005a 4FF47053 		mov	r3, #15360
  78 005e C4F20003 		movt	r3, 16384
  79 0062 9A42     		cmp	r2, r3
  80 0064 0BD1     		bne	.L1
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Enable SPI3 reset state */
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
  81              		.loc 1 149 0
  82 0066 4FF40040 		mov	r0, #32768
  83 006a 4FF00101 		mov	r1, #1
  84 006e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Release SPI3 from reset state */
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
  85              		.loc 1 151 0
  86 0072 4FF40040 		mov	r0, #32768
  87 0076 4FF00001 		mov	r1, #0
  88 007a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  89              	.L1:
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
  90              		.loc 1 154 0
  91 007e 07F10807 		add	r7, r7, #8
  92 0082 BD46     		mov	sp, r7
  93 0084 80BD     		pop	{r7, pc}
  94              		.cfi_endproc
  95              	.LFE56:
  97 0086 00BF     		.section	.text.SPI_Init,"ax",%progbits
  98              		.align	2
  99              		.global	SPI_Init
 100              		.thumb
 101              		.thumb_func
 103              	SPI_Init:
 104              	.LFB57:
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the SPI_InitStruct.
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 105              		.loc 1 165 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 16
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 80B4     		push	{r7}
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 7, -4
 114 0002 85B0     		sub	sp, sp, #20
 115              	.LCFI4:
 116              		.cfi_def_cfa_offset 24
 117 0004 00AF     		add	r7, sp, #0
 118              	.LCFI5:
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 121 0008 3960     		str	r1, [r7, #0]
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0;
 122              		.loc 1 166 0
 123 000a 4FF00003 		mov	r3, #0
 124 000e FB81     		strh	r3, [r7, #14]	@ movhi
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* check the parameters */
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));   
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the SPI parameters */
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPIx CR1 value */
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->CR1;
 125              		.loc 1 184 0
 126 0010 7B68     		ldr	r3, [r7, #4]
 127 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 128 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg &= CR1_CLEAR_Mask;
 129              		.loc 1 186 0
 130 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 131 0018 03F44153 		and	r3, r3, #12352
 132 001c FB81     		strh	r3, [r7, #14]	@ movhi
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****      master/salve mode, CPOL and CPHA */
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 133              		.loc 1 195 0
 134 001e 3B68     		ldr	r3, [r7, #0]
 135 0020 1A88     		ldrh	r2, [r3, #0]
 136 0022 3B68     		ldr	r3, [r7, #0]
 137 0024 5B88     		ldrh	r3, [r3, #2]
 138 0026 1343     		orrs	r3, r3, r2
 139 0028 9AB2     		uxth	r2, r3
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 140              		.loc 1 196 0
 141 002a 3B68     		ldr	r3, [r7, #0]
 142 002c 9B88     		ldrh	r3, [r3, #4]
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 143              		.loc 1 195 0
 144 002e 1343     		orrs	r3, r3, r2
 145 0030 9AB2     		uxth	r2, r3
 146              		.loc 1 196 0
 147 0032 3B68     		ldr	r3, [r7, #0]
 148 0034 DB88     		ldrh	r3, [r3, #6]
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 149              		.loc 1 195 0
 150 0036 1343     		orrs	r3, r3, r2
 151 0038 9AB2     		uxth	r2, r3
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 152              		.loc 1 197 0
 153 003a 3B68     		ldr	r3, [r7, #0]
 154 003c 1B89     		ldrh	r3, [r3, #8]
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 155              		.loc 1 195 0
 156 003e 1343     		orrs	r3, r3, r2
 157 0040 9AB2     		uxth	r2, r3
 158              		.loc 1 197 0
 159 0042 3B68     		ldr	r3, [r7, #0]
 160 0044 5B89     		ldrh	r3, [r3, #10]
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 161              		.loc 1 195 0
 162 0046 1343     		orrs	r3, r3, r2
 163 0048 9AB2     		uxth	r2, r3
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 164              		.loc 1 198 0
 165 004a 3B68     		ldr	r3, [r7, #0]
 166 004c 9B89     		ldrh	r3, [r3, #12]
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 167              		.loc 1 195 0
 168 004e 1343     		orrs	r3, r3, r2
 169 0050 9AB2     		uxth	r2, r3
 170              		.loc 1 198 0
 171 0052 3B68     		ldr	r3, [r7, #0]
 172 0054 DB89     		ldrh	r3, [r3, #14]
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 173              		.loc 1 195 0
 174 0056 1343     		orrs	r3, r3, r2
 175 0058 9AB2     		uxth	r2, r3
 176 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 177 005c 1343     		orrs	r3, r3, r2
 178 005e FB81     		strh	r3, [r7, #14]	@ movhi
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CR1 */
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 = tmpreg;
 179              		.loc 1 200 0
 180 0060 7B68     		ldr	r3, [r7, #4]
 181 0062 FA89     		ldrh	r2, [r7, #14]	@ movhi
 182 0064 1A80     		strh	r2, [r3, #0]	@ movhi
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= SPI_Mode_Select;		
 183              		.loc 1 203 0
 184 0066 7B68     		ldr	r3, [r7, #4]
 185 0068 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 186 006a 9BB2     		uxth	r3, r3
 187 006c 23F40063 		bic	r3, r3, #2048
 188 0070 9AB2     		uxth	r2, r3
 189 0072 7B68     		ldr	r3, [r7, #4]
 190 0074 9A83     		strh	r2, [r3, #28]	@ movhi
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CRCPOLY */
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 191              		.loc 1 207 0
 192 0076 3B68     		ldr	r3, [r7, #0]
 193 0078 1A8A     		ldrh	r2, [r3, #16]
 194 007a 7B68     		ldr	r3, [r7, #4]
 195 007c 1A82     		strh	r2, [r3, #16]	@ movhi
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 196              		.loc 1 208 0
 197 007e 07F11407 		add	r7, r7, #20
 198 0082 BD46     		mov	sp, r7
 199 0084 80BC     		pop	{r7}
 200 0086 7047     		bx	lr
 201              		.cfi_endproc
 202              	.LFE57:
 204              		.section	.text.I2S_Init,"ax",%progbits
 205              		.align	2
 206              		.global	I2S_Init
 207              		.thumb
 208              		.thumb_func
 210              	I2S_Init:
 211              	.LFB58:
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the I2S_InitStruct.
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         (configured in I2S mode).
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         configured in I2S mode.
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  The function calculates the optimal prescaler needed to obtain the most 
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  accurate audio frequency (depending on the I2S clock source, the PLL values 
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  and the product configuration). But in case the prescaler value is greater 
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  than 511, the default value (0x02) will be configured instead.  *   
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 212              		.loc 1 226 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 48
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 0000 80B5     		push	{r7, lr}
 217              	.LCFI6:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 8CB0     		sub	sp, sp, #48
 222              	.LCFI7:
 223              		.cfi_def_cfa_offset 56
 224 0004 00AF     		add	r7, sp, #0
 225              	.LCFI8:
 226              		.cfi_def_cfa_register 7
 227 0006 7860     		str	r0, [r7, #4]
 228 0008 3960     		str	r1, [r7, #0]
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 229              		.loc 1 227 0
 230 000a 4FF00003 		mov	r3, #0
 231 000e 7B84     		strh	r3, [r7, #34]	@ movhi
 232 0010 4FF00203 		mov	r3, #2
 233 0014 FB85     		strh	r3, [r7, #46]	@ movhi
 234 0016 4FF00003 		mov	r3, #0
 235 001a BB85     		strh	r3, [r7, #44]	@ movhi
 236 001c 4FF00103 		mov	r3, #1
 237 0020 7B85     		strh	r3, [r7, #42]	@ movhi
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t tmp = 0;
 238              		.loc 1 228 0
 239 0022 4FF00003 		mov	r3, #0
 240 0026 7B62     		str	r3, [r7, #36]
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   RCC_ClocksTypeDef RCC_Clocks;
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t sourceclock = 0;
 241              		.loc 1 230 0
 242 0028 4FF00003 		mov	r3, #0
 243 002c FB61     		str	r3, [r7, #28]
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the I2S parameters */
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_Mask; 
 244              		.loc 1 243 0
 245 002e 7B68     		ldr	r3, [r7, #4]
 246 0030 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 247 0032 9BB2     		uxth	r3, r3
 248 0034 23F47B63 		bic	r3, r3, #4016
 249 0038 23F00F03 		bic	r3, r3, #15
 250 003c 9AB2     		uxth	r2, r3
 251 003e 7B68     		ldr	r3, [r7, #4]
 252 0040 9A83     		strh	r2, [r3, #28]	@ movhi
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = 0x0002;
 253              		.loc 1 244 0
 254 0042 7B68     		ldr	r3, [r7, #4]
 255 0044 4FF00202 		mov	r2, #2
 256 0048 1A84     		strh	r2, [r3, #32]	@ movhi
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the I2SCFGR register value */
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 257              		.loc 1 247 0
 258 004a 7B68     		ldr	r3, [r7, #4]
 259 004c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 260 004e 7B84     		strh	r3, [r7, #34]	@ movhi
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 261              		.loc 1 250 0
 262 0050 3B68     		ldr	r3, [r7, #0]
 263 0052 9B68     		ldr	r3, [r3, #8]
 264 0054 022B     		cmp	r3, #2
 265 0056 06D1     		bne	.L7
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)0;
 266              		.loc 1 252 0
 267 0058 4FF00003 		mov	r3, #0
 268 005c BB85     		strh	r3, [r7, #44]	@ movhi
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)2;   
 269              		.loc 1 253 0
 270 005e 4FF00203 		mov	r3, #2
 271 0062 FB85     		strh	r3, [r7, #46]	@ movhi
 272 0064 67E0     		b	.L8
 273              	.L7:
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the frame length (For the Prescaler computing) */
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 274              		.loc 1 259 0
 275 0066 3B68     		ldr	r3, [r7, #0]
 276 0068 9B88     		ldrh	r3, [r3, #4]
 277 006a 002B     		cmp	r3, #0
 278 006c 03D1     		bne	.L9
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 16 bits */
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 1;
 279              		.loc 1 262 0
 280 006e 4FF00103 		mov	r3, #1
 281 0072 7B85     		strh	r3, [r7, #42]	@ movhi
 282 0074 02E0     		b	.L10
 283              	.L9:
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 32 bits */
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 2;
 284              		.loc 1 267 0
 285 0076 4FF00203 		mov	r3, #2
 286 007a 7B85     		strh	r3, [r7, #42]	@ movhi
 287              	.L10:
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the I2S clock source mask depending on the peripheral number */
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(((uint32_t)SPIx) == SPI2_BASE)
 288              		.loc 1 271 0
 289 007c 7A68     		ldr	r2, [r7, #4]
 290 007e 4FF46053 		mov	r3, #14336
 291 0082 C4F20003 		movt	r3, 16384
 292 0086 9A42     		cmp	r2, r3
 293 0088 03D1     		bne	.L11
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S2 */
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S2_CLOCK_SRC;
 294              		.loc 1 274 0
 295 008a 4FF40033 		mov	r3, #131072
 296 008e 7B62     		str	r3, [r7, #36]
 297 0090 02E0     		b	.L12
 298              	.L11:
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else 
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S3 */      
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S3_CLOCK_SRC;
 299              		.loc 1 279 0
 300 0092 4FF48023 		mov	r3, #262144
 301 0096 7B62     		str	r3, [r7, #36]
 302              	.L12:
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the I2S clock source configuration depending on the Device:
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****        Only Connectivity line devices have the PLL3 VCO clock */
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #ifdef STM32F10X_CL
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if((RCC->CFGR2 & tmp) != 0)
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the configuration bits of RCC PLL3 multiplier */
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint32_t)((RCC->CFGR2 & I2S_MUL_MASK) >> 12);
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the value of the PLL3 multiplier */      
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       if((tmp > 5) && (tmp < 15))
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         /* Multiplier is between 8 and 14 (value 15 is forbidden) */
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         tmp += 2;
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       else
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         if (tmp == 15)
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         {
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           /* Multiplier is 20 */
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           tmp = 20;
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         }
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }      
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the PREDIV2 value */
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t)(((RCC->CFGR2 & I2S_DIV_MASK) >> 4) + 1);
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Calculate the Source Clock frequency based on PLL3 and PREDIV2 values */
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t) ((HSE_Value / sourceclock) * tmp * 2); 
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* I2S Clock source is System clock: Get System Clock frequency */
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_GetClocksFreq(&RCC_Clocks);      
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the source clock value: based on System Clock value */
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = RCC_Clocks.SYSCLK_Frequency;
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }        
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #else /* STM32F10X_HD */
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* I2S Clock source is System clock: Get System Clock frequency */
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_GetClocksFreq(&RCC_Clocks);      
 303              		.loc 1 320 0
 304 0098 07F10803 		add	r3, r7, #8
 305 009c 1846     		mov	r0, r3
 306 009e FFF7FEFF 		bl	RCC_GetClocksFreq
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the source clock value: based on System Clock value */
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 307              		.loc 1 323 0
 308 00a2 BB68     		ldr	r3, [r7, #8]
 309 00a4 FB61     		str	r3, [r7, #28]
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #endif /* STM32F10X_CL */    
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the Real divider depending on the MCLK output state with a floating point */
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 310              		.loc 1 327 0
 311 00a6 3B68     		ldr	r3, [r7, #0]
 312 00a8 DB88     		ldrh	r3, [r3, #6]
 313 00aa B3F5007F 		cmp	r3, #512
 314 00ae 13D1     		bne	.L13
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is enabled */
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 315              		.loc 1 330 0
 316 00b0 FB69     		ldr	r3, [r7, #28]
 317 00b2 4FEA1322 		lsr	r2, r3, #8
 318 00b6 1346     		mov	r3, r2
 319 00b8 4FEA8303 		lsl	r3, r3, #2
 320 00bc 9B18     		adds	r3, r3, r2
 321 00be 4FEA4303 		lsl	r3, r3, #1
 322 00c2 1A46     		mov	r2, r3
 323 00c4 3B68     		ldr	r3, [r7, #0]
 324 00c6 9B68     		ldr	r3, [r3, #8]
 325 00c8 B2FBF3F3 		udiv	r3, r2, r3
 326 00cc 9BB2     		uxth	r3, r3
 327 00ce 03F10503 		add	r3, r3, #5
 328 00d2 9BB2     		uxth	r3, r3
 329 00d4 7B62     		str	r3, [r7, #36]
 330 00d6 15E0     		b	.L14
 331              	.L13:
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is disabled */
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 332              		.loc 1 335 0
 333 00d8 7B8D     		ldrh	r3, [r7, #42]
 334 00da 4FEA4313 		lsl	r3, r3, #5
 335 00de FA69     		ldr	r2, [r7, #28]
 336 00e0 B2FBF3F2 		udiv	r2, r2, r3
 337 00e4 1346     		mov	r3, r2
 338 00e6 4FEA8303 		lsl	r3, r3, #2
 339 00ea 9B18     		adds	r3, r3, r2
 340 00ec 4FEA4303 		lsl	r3, r3, #1
 341 00f0 1A46     		mov	r2, r3
 342 00f2 3B68     		ldr	r3, [r7, #0]
 343 00f4 9B68     		ldr	r3, [r3, #8]
 344 00f6 B2FBF3F3 		udiv	r3, r2, r3
 345 00fa 9BB2     		uxth	r3, r3
 346 00fc 03F10503 		add	r3, r3, #5
 347 0100 9BB2     		uxth	r3, r3
 348 0102 7B62     		str	r3, [r7, #36]
 349              	.L14:
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Remove the floating point */
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     tmp = tmp / 10;  
 350              		.loc 1 339 0
 351 0104 7A6A     		ldr	r2, [r7, #36]
 352 0106 4CF6CD43 		movw	r3, #52429
 353 010a CCF6CC43 		movt	r3, 52428
 354 010e A3FB0213 		umull	r1, r3, r3, r2
 355 0112 4FEAD303 		lsr	r3, r3, #3
 356 0116 7B62     		str	r3, [r7, #36]
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the parity of the divider */
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 357              		.loc 1 342 0
 358 0118 7B6A     		ldr	r3, [r7, #36]
 359 011a 9BB2     		uxth	r3, r3
 360 011c 03F00103 		and	r3, r3, #1
 361 0120 BB85     		strh	r3, [r7, #44]	@ movhi
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the i2sdiv prescaler */
 345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 362              		.loc 1 345 0
 363 0122 BB8D     		ldrh	r3, [r7, #44]
 364 0124 7A6A     		ldr	r2, [r7, #36]
 365 0126 D31A     		subs	r3, r2, r3
 366 0128 4FEA5303 		lsr	r3, r3, #1
 367 012c FB85     		strh	r3, [r7, #46]	@ movhi
 346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 368              		.loc 1 348 0
 369 012e BB8D     		ldrh	r3, [r7, #44]	@ movhi
 370 0130 4FEA0323 		lsl	r3, r3, #8
 371 0134 BB85     		strh	r3, [r7, #44]	@ movhi
 372              	.L8:
 349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 373              		.loc 1 352 0
 374 0136 FB8D     		ldrh	r3, [r7, #46]
 375 0138 012B     		cmp	r3, #1
 376 013a 02D9     		bls	.L15
 377              		.loc 1 352 0 is_stmt 0 discriminator 1
 378 013c FB8D     		ldrh	r3, [r7, #46]
 379 013e FF2B     		cmp	r3, #255
 380 0140 05D9     		bls	.L16
 381              	.L15:
 353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the default values */
 355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = 2;
 382              		.loc 1 355 0 is_stmt 1
 383 0142 4FF00203 		mov	r3, #2
 384 0146 FB85     		strh	r3, [r7, #46]	@ movhi
 356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = 0;
 385              		.loc 1 356 0
 386 0148 4FF00003 		mov	r3, #0
 387 014c BB85     		strh	r3, [r7, #44]	@ movhi
 388              	.L16:
 357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = (uint16_t)(i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
 389              		.loc 1 360 0
 390 014e 3B68     		ldr	r3, [r7, #0]
 391 0150 DA88     		ldrh	r2, [r3, #6]
 392 0152 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 393 0154 1343     		orrs	r3, r3, r2
 394 0156 9AB2     		uxth	r2, r3
 395 0158 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 396 015a 1343     		orrs	r3, r3, r2
 397 015c 9AB2     		uxth	r2, r3
 398 015e 7B68     		ldr	r3, [r7, #4]
 399 0160 1A84     		strh	r2, [r3, #32]	@ movhi
 361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 400              		.loc 1 363 0
 401 0162 3B68     		ldr	r3, [r7, #0]
 402 0164 1A88     		ldrh	r2, [r3, #0]
 364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 403              		.loc 1 364 0
 404 0166 3B68     		ldr	r3, [r7, #0]
 405 0168 5988     		ldrh	r1, [r3, #2]
 406 016a 3B68     		ldr	r3, [r7, #0]
 407 016c 9888     		ldrh	r0, [r3, #4]
 365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 408              		.loc 1 365 0
 409 016e 3B68     		ldr	r3, [r7, #0]
 410 0170 9B89     		ldrh	r3, [r3, #12]
 364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 411              		.loc 1 364 0
 412 0172 0343     		orrs	r3, r3, r0
 413 0174 9BB2     		uxth	r3, r3
 414 0176 0B43     		orrs	r3, r3, r1
 415 0178 9BB2     		uxth	r3, r3
 363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 416              		.loc 1 363 0
 417 017a 1343     		orrs	r3, r3, r2
 418 017c 9AB2     		uxth	r2, r3
 419 017e 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 420 0180 1343     		orrs	r3, r3, r2
 421 0182 9BB2     		uxth	r3, r3
 422 0184 43F40063 		orr	r3, r3, #2048
 423 0188 7B84     		strh	r3, [r7, #34]	@ movhi
 366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SCFGR */  
 368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR = tmpreg;   
 424              		.loc 1 368 0
 425 018a 7B68     		ldr	r3, [r7, #4]
 426 018c 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 427 018e 9A83     		strh	r2, [r3, #28]	@ movhi
 369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 428              		.loc 1 369 0
 429 0190 07F13007 		add	r7, r7, #48
 430 0194 BD46     		mov	sp, r7
 431 0196 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE58:
 435              		.section	.text.SPI_StructInit,"ax",%progbits
 436              		.align	2
 437              		.global	SPI_StructInit
 438              		.thumb
 439              		.thumb_func
 441              	SPI_StructInit:
 442              	.LFB59:
 370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct : pointer to a SPI_InitTypeDef structure which will be initialized.
 374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 443              		.loc 1 377 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448 0000 80B4     		push	{r7}
 449              	.LCFI9:
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 83B0     		sub	sp, sp, #12
 453              	.LCFI10:
 454              		.cfi_def_cfa_offset 16
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI11:
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_Direction member */
 380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 459              		.loc 1 380 0
 460 0008 7B68     		ldr	r3, [r7, #4]
 461 000a 4FF00002 		mov	r2, #0
 462 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_Mode member */
 382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 463              		.loc 1 382 0
 464 0010 7B68     		ldr	r3, [r7, #4]
 465 0012 4FF00002 		mov	r2, #0
 466 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_DataSize member */
 384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 467              		.loc 1 384 0
 468 0018 7B68     		ldr	r3, [r7, #4]
 469 001a 4FF00002 		mov	r2, #0
 470 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPOL member */
 386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 471              		.loc 1 386 0
 472 0020 7B68     		ldr	r3, [r7, #4]
 473 0022 4FF00002 		mov	r2, #0
 474 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPHA member */
 388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 475              		.loc 1 388 0
 476 0028 7B68     		ldr	r3, [r7, #4]
 477 002a 4FF00002 		mov	r2, #0
 478 002e 1A81     		strh	r2, [r3, #8]	@ movhi
 389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_NSS member */
 390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 479              		.loc 1 390 0
 480 0030 7B68     		ldr	r3, [r7, #4]
 481 0032 4FF00002 		mov	r2, #0
 482 0036 5A81     		strh	r2, [r3, #10]	@ movhi
 391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 483              		.loc 1 392 0
 484 0038 7B68     		ldr	r3, [r7, #4]
 485 003a 4FF00002 		mov	r2, #0
 486 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_FirstBit member */
 394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 487              		.loc 1 394 0
 488 0040 7B68     		ldr	r3, [r7, #4]
 489 0042 4FF00002 		mov	r2, #0
 490 0046 DA81     		strh	r2, [r3, #14]	@ movhi
 395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 491              		.loc 1 396 0
 492 0048 7B68     		ldr	r3, [r7, #4]
 493 004a 4FF00702 		mov	r2, #7
 494 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 495              		.loc 1 397 0
 496 0050 07F10C07 		add	r7, r7, #12
 497 0054 BD46     		mov	sp, r7
 498 0056 80BC     		pop	{r7}
 499 0058 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE59:
 503 005a 00BF     		.section	.text.I2S_StructInit,"ax",%progbits
 504              		.align	2
 505              		.global	I2S_StructInit
 506              		.thumb
 507              		.thumb_func
 509              	I2S_StructInit:
 510              	.LFB60:
 398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct : pointer to a I2S_InitTypeDef structure which will be initialized.
 402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 511              		.loc 1 405 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 8
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516 0000 80B4     		push	{r7}
 517              	.LCFI12:
 518              		.cfi_def_cfa_offset 4
 519              		.cfi_offset 7, -4
 520 0002 83B0     		sub	sp, sp, #12
 521              	.LCFI13:
 522              		.cfi_def_cfa_offset 16
 523 0004 00AF     		add	r7, sp, #0
 524              	.LCFI14:
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Mode member */
 408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 527              		.loc 1 408 0
 528 0008 7B68     		ldr	r3, [r7, #4]
 529 000a 4FF00002 		mov	r2, #0
 530 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Standard member */
 411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 531              		.loc 1 411 0
 532 0010 7B68     		ldr	r3, [r7, #4]
 533 0012 4FF00002 		mov	r2, #0
 534 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_DataFormat member */
 414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 535              		.loc 1 414 0
 536 0018 7B68     		ldr	r3, [r7, #4]
 537 001a 4FF00002 		mov	r2, #0
 538 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 539              		.loc 1 417 0
 540 0020 7B68     		ldr	r3, [r7, #4]
 541 0022 4FF00002 		mov	r2, #0
 542 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_AudioFreq member */
 420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 543              		.loc 1 420 0
 544 0028 7B68     		ldr	r3, [r7, #4]
 545 002a 4FF00202 		mov	r2, #2
 546 002e 9A60     		str	r2, [r3, #8]
 421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_CPOL member */
 423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 547              		.loc 1 423 0
 548 0030 7B68     		ldr	r3, [r7, #4]
 549 0032 4FF00002 		mov	r2, #0
 550 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 551              		.loc 1 424 0
 552 0038 07F10C07 		add	r7, r7, #12
 553 003c BD46     		mov	sp, r7
 554 003e 80BC     		pop	{r7}
 555 0040 7047     		bx	lr
 556              		.cfi_endproc
 557              	.LFE60:
 559 0042 00BF     		.section	.text.SPI_Cmd,"ax",%progbits
 560              		.align	2
 561              		.global	SPI_Cmd
 562              		.thumb
 563              		.thumb_func
 565              	SPI_Cmd:
 566              	.LFB61:
 425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 567              		.loc 1 434 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 8
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572 0000 80B4     		push	{r7}
 573              	.LCFI15:
 574              		.cfi_def_cfa_offset 4
 575              		.cfi_offset 7, -4
 576 0002 83B0     		sub	sp, sp, #12
 577              	.LCFI16:
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              	.LCFI17:
 581              		.cfi_def_cfa_register 7
 582 0006 7860     		str	r0, [r7, #4]
 583 0008 0B46     		mov	r3, r1
 584 000a FB70     		strb	r3, [r7, #3]
 435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 585              		.loc 1 438 0
 586 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 587 000e 002B     		cmp	r3, #0
 588 0010 08D0     		beq	.L20
 439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral */
 441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_SPE_Set;
 589              		.loc 1 441 0
 590 0012 7B68     		ldr	r3, [r7, #4]
 591 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 592 0016 9BB2     		uxth	r3, r3
 593 0018 43F04003 		orr	r3, r3, #64
 594 001c 9AB2     		uxth	r2, r3
 595 001e 7B68     		ldr	r3, [r7, #4]
 596 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 597 0022 07E0     		b	.L19
 598              	.L20:
 442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral */
 446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_SPE_Reset;
 599              		.loc 1 446 0
 600 0024 7B68     		ldr	r3, [r7, #4]
 601 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 602 0028 9BB2     		uxth	r3, r3
 603 002a 23F04003 		bic	r3, r3, #64
 604 002e 9AB2     		uxth	r2, r3
 605 0030 7B68     		ldr	r3, [r7, #4]
 606 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 607              	.L19:
 447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 608              		.loc 1 448 0
 609 0034 07F10C07 		add	r7, r7, #12
 610 0038 BD46     		mov	sp, r7
 611 003a 80BC     		pop	{r7}
 612 003c 7047     		bx	lr
 613              		.cfi_endproc
 614              	.LFE61:
 616 003e 00BF     		.section	.text.I2S_Cmd,"ax",%progbits
 617              		.align	2
 618              		.global	I2S_Cmd
 619              		.thumb
 620              		.thumb_func
 622              	I2S_Cmd:
 623              	.LFB62:
 449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral.
 453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 624              		.loc 1 458 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629 0000 80B4     		push	{r7}
 630              	.LCFI18:
 631              		.cfi_def_cfa_offset 4
 632              		.cfi_offset 7, -4
 633 0002 83B0     		sub	sp, sp, #12
 634              	.LCFI19:
 635              		.cfi_def_cfa_offset 16
 636 0004 00AF     		add	r7, sp, #0
 637              	.LCFI20:
 638              		.cfi_def_cfa_register 7
 639 0006 7860     		str	r0, [r7, #4]
 640 0008 0B46     		mov	r3, r1
 641 000a FB70     		strb	r3, [r7, #3]
 459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 642              		.loc 1 462 0
 643 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 644 000e 002B     		cmp	r3, #0
 645 0010 08D0     		beq	.L23
 463:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 464:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 465:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR |= I2SCFGR_I2SE_Set;
 646              		.loc 1 465 0
 647 0012 7B68     		ldr	r3, [r7, #4]
 648 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 649 0016 9BB2     		uxth	r3, r3
 650 0018 43F48063 		orr	r3, r3, #1024
 651 001c 9AB2     		uxth	r2, r3
 652 001e 7B68     		ldr	r3, [r7, #4]
 653 0020 9A83     		strh	r2, [r3, #28]	@ movhi
 654 0022 07E0     		b	.L22
 655              	.L23:
 466:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 467:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 468:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 469:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral (in I2S mode) */
 470:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR &= I2SCFGR_I2SE_Reset;
 656              		.loc 1 470 0
 657 0024 7B68     		ldr	r3, [r7, #4]
 658 0026 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 659 0028 9BB2     		uxth	r3, r3
 660 002a 23F48063 		bic	r3, r3, #1024
 661 002e 9AB2     		uxth	r2, r3
 662 0030 7B68     		ldr	r3, [r7, #4]
 663 0032 9A83     		strh	r2, [r3, #28]	@ movhi
 664              	.L22:
 471:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 472:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 665              		.loc 1 472 0
 666 0034 07F10C07 		add	r7, r7, #12
 667 0038 BD46     		mov	sp, r7
 668 003a 80BC     		pop	{r7}
 669 003c 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE62:
 673 003e 00BF     		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 674              		.align	2
 675              		.global	SPI_I2S_ITConfig
 676              		.thumb
 677              		.thumb_func
 679              	SPI_I2S_ITConfig:
 680              	.LFB63:
 473:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 474:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 475:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
 476:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 477:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 478:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 479:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to be enabled or disabled. 
 480:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 481:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
 482:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
 483:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_ERR: Error interrupt mask
 484:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the specified SPI/I2S interrupt.
 485:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 486:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 487:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 488:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
 489:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 681              		.loc 1 489 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 16
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686 0000 80B4     		push	{r7}
 687              	.LCFI21:
 688              		.cfi_def_cfa_offset 4
 689              		.cfi_offset 7, -4
 690 0002 85B0     		sub	sp, sp, #20
 691              	.LCFI22:
 692              		.cfi_def_cfa_offset 24
 693 0004 00AF     		add	r7, sp, #0
 694              	.LCFI23:
 695              		.cfi_def_cfa_register 7
 696 0006 7860     		str	r0, [r7, #4]
 697 0008 1346     		mov	r3, r2
 698 000a 0A46     		mov	r2, r1
 699 000c FA70     		strb	r2, [r7, #3]
 700 000e BB70     		strb	r3, [r7, #2]
 490:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 701              		.loc 1 490 0
 702 0010 4FF00003 		mov	r3, #0
 703 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 704 0016 4FF00003 		mov	r3, #0
 705 001a BB81     		strh	r3, [r7, #12]	@ movhi
 491:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 492:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 493:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 494:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 495:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 496:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 497:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = SPI_I2S_IT >> 4;
 706              		.loc 1 497 0
 707 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 708 001e 4FEA1313 		lsr	r3, r3, #4
 709 0022 DBB2     		uxtb	r3, r3
 710 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 498:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 499:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 500:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 711              		.loc 1 500 0
 712 0026 FB89     		ldrh	r3, [r7, #14]
 713 0028 4FF00102 		mov	r2, #1
 714 002c 02FA03F3 		lsl	r3, r2, r3
 715 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 501:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 502:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 716              		.loc 1 502 0
 717 0032 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 718 0034 002B     		cmp	r3, #0
 719 0036 08D0     		beq	.L26
 503:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 504:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S interrupt */
 505:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= itmask;
 720              		.loc 1 505 0
 721 0038 7B68     		ldr	r3, [r7, #4]
 722 003a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 723 003c 9AB2     		uxth	r2, r3
 724 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 725 0040 1343     		orrs	r3, r3, r2
 726 0042 9AB2     		uxth	r2, r3
 727 0044 7B68     		ldr	r3, [r7, #4]
 728 0046 9A80     		strh	r2, [r3, #4]	@ movhi
 729 0048 0AE0     		b	.L25
 730              	.L26:
 506:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 507:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 508:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 509:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S interrupt */
 510:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 731              		.loc 1 510 0
 732 004a 7B68     		ldr	r3, [r7, #4]
 733 004c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 734 004e 9AB2     		uxth	r2, r3
 735 0050 BB89     		ldrh	r3, [r7, #12]	@ movhi
 736 0052 6FEA0303 		mvn	r3, r3
 737 0056 9BB2     		uxth	r3, r3
 738 0058 1340     		ands	r3, r3, r2
 739 005a 9AB2     		uxth	r2, r3
 740 005c 7B68     		ldr	r3, [r7, #4]
 741 005e 9A80     		strh	r2, [r3, #4]	@ movhi
 742              	.L25:
 511:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 512:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 743              		.loc 1 512 0
 744 0060 07F11407 		add	r7, r7, #20
 745 0064 BD46     		mov	sp, r7
 746 0066 80BC     		pop	{r7}
 747 0068 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE63:
 751 006a 00BF     		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 752              		.align	2
 753              		.global	SPI_I2S_DMACmd
 754              		.thumb
 755              		.thumb_func
 757              	SPI_I2S_DMACmd:
 758              	.LFB64:
 513:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 514:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 515:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 516:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 517:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 518:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 519:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI/I2S DMA transfer request to be enabled or disabled. 
 520:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be any combination of the following values:
 521:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 522:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 523:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the selected SPI/I2S DMA transfer request.
 524:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 525:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 526:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 527:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 528:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 759              		.loc 1 528 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 764 0000 80B4     		push	{r7}
 765              	.LCFI24:
 766              		.cfi_def_cfa_offset 4
 767              		.cfi_offset 7, -4
 768 0002 83B0     		sub	sp, sp, #12
 769              	.LCFI25:
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              	.LCFI26:
 773              		.cfi_def_cfa_register 7
 774 0006 7860     		str	r0, [r7, #4]
 775 0008 1346     		mov	r3, r2
 776 000a 0A46     		mov	r2, r1	@ movhi
 777 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 778 000e 7B70     		strb	r3, [r7, #1]
 529:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 530:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 531:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 532:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 533:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 779              		.loc 1 533 0
 780 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 781 0012 002B     		cmp	r3, #0
 782 0014 08D0     		beq	.L29
 534:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 535:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S DMA requests */
 536:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 783              		.loc 1 536 0
 784 0016 7B68     		ldr	r3, [r7, #4]
 785 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 786 001a 9AB2     		uxth	r2, r3
 787 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 788 001e 1343     		orrs	r3, r3, r2
 789 0020 9AB2     		uxth	r2, r3
 790 0022 7B68     		ldr	r3, [r7, #4]
 791 0024 9A80     		strh	r2, [r3, #4]	@ movhi
 792 0026 0AE0     		b	.L28
 793              	.L29:
 537:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 538:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 539:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 540:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S DMA requests */
 541:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 794              		.loc 1 541 0
 795 0028 7B68     		ldr	r3, [r7, #4]
 796 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 797 002c 9AB2     		uxth	r2, r3
 798 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 799 0030 6FEA0303 		mvn	r3, r3
 800 0034 9BB2     		uxth	r3, r3
 801 0036 1340     		ands	r3, r3, r2
 802 0038 9AB2     		uxth	r2, r3
 803 003a 7B68     		ldr	r3, [r7, #4]
 804 003c 9A80     		strh	r2, [r3, #4]	@ movhi
 805              	.L28:
 542:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 543:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 806              		.loc 1 543 0
 807 003e 07F10C07 		add	r7, r7, #12
 808 0042 BD46     		mov	sp, r7
 809 0044 80BC     		pop	{r7}
 810 0046 7047     		bx	lr
 811              		.cfi_endproc
 812              	.LFE64:
 814              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 815              		.align	2
 816              		.global	SPI_I2S_SendData
 817              		.thumb
 818              		.thumb_func
 820              	SPI_I2S_SendData:
 821              	.LFB65:
 544:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 545:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 546:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 547:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 548:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 549:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 550:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  Data : Data to be transmitted.
 551:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 552:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 553:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 554:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 822              		.loc 1 554 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 8
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826              		@ link register save eliminated.
 827 0000 80B4     		push	{r7}
 828              	.LCFI27:
 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 7, -4
 831 0002 83B0     		sub	sp, sp, #12
 832              	.LCFI28:
 833              		.cfi_def_cfa_offset 16
 834 0004 00AF     		add	r7, sp, #0
 835              	.LCFI29:
 836              		.cfi_def_cfa_register 7
 837 0006 7860     		str	r0, [r7, #4]
 838 0008 0B46     		mov	r3, r1
 839 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 555:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 556:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 557:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 558:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write in the DR register the data to be sent */
 559:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->DR = Data;
 840              		.loc 1 559 0
 841 000c 7B68     		ldr	r3, [r7, #4]
 842 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 843 0010 9A81     		strh	r2, [r3, #12]	@ movhi
 560:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 844              		.loc 1 560 0
 845 0012 07F10C07 		add	r7, r7, #12
 846 0016 BD46     		mov	sp, r7
 847 0018 80BC     		pop	{r7}
 848 001a 7047     		bx	lr
 849              		.cfi_endproc
 850              	.LFE65:
 852              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 853              		.align	2
 854              		.global	SPI_I2S_ReceiveData
 855              		.thumb
 856              		.thumb_func
 858              	SPI_I2S_ReceiveData:
 859              	.LFB66:
 561:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 562:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 563:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 564:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 565:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 566:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 567:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The value of the received data.
 568:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 569:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 570:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 860              		.loc 1 570 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865 0000 80B4     		push	{r7}
 866              	.LCFI30:
 867              		.cfi_def_cfa_offset 4
 868              		.cfi_offset 7, -4
 869 0002 83B0     		sub	sp, sp, #12
 870              	.LCFI31:
 871              		.cfi_def_cfa_offset 16
 872 0004 00AF     		add	r7, sp, #0
 873              	.LCFI32:
 874              		.cfi_def_cfa_register 7
 875 0006 7860     		str	r0, [r7, #4]
 571:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 572:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 573:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 574:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the data in the DR register */
 575:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->DR;
 876              		.loc 1 575 0
 877 0008 7B68     		ldr	r3, [r7, #4]
 878 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 879 000c 9BB2     		uxth	r3, r3
 576:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 880              		.loc 1 576 0
 881 000e 1846     		mov	r0, r3
 882 0010 07F10C07 		add	r7, r7, #12
 883 0014 BD46     		mov	sp, r7
 884 0016 80BC     		pop	{r7}
 885 0018 7047     		bx	lr
 886              		.cfi_endproc
 887              	.LFE66:
 889 001a 00BF     		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 890              		.align	2
 891              		.global	SPI_NSSInternalSoftwareConfig
 892              		.thumb
 893              		.thumb_func
 895              	SPI_NSSInternalSoftwareConfig:
 896              	.LFB67:
 577:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 578:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 579:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 580:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 581:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 582:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 583:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 584:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 585:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 586:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 587:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 588:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 897              		.loc 1 588 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 8
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 902 0000 80B4     		push	{r7}
 903              	.LCFI33:
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 0002 83B0     		sub	sp, sp, #12
 907              	.LCFI34:
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              	.LCFI35:
 911              		.cfi_def_cfa_register 7
 912 0006 7860     		str	r0, [r7, #4]
 913 0008 0B46     		mov	r3, r1
 914 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 589:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 590:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 591:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 592:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 915              		.loc 1 592 0
 916 000c 7A88     		ldrh	r2, [r7, #2]
 917 000e 4FF6FF63 		movw	r3, #65279
 918 0012 9A42     		cmp	r2, r3
 919 0014 08D0     		beq	.L35
 593:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 594:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set NSS pin internally by software */
 595:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 920              		.loc 1 595 0
 921 0016 7B68     		ldr	r3, [r7, #4]
 922 0018 1B88     		ldrh	r3, [r3, #0]	@ movhi
 923 001a 9BB2     		uxth	r3, r3
 924 001c 43F48073 		orr	r3, r3, #256
 925 0020 9AB2     		uxth	r2, r3
 926 0022 7B68     		ldr	r3, [r7, #4]
 927 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 928 0026 07E0     		b	.L34
 929              	.L35:
 596:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 597:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 598:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 599:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Reset NSS pin internally by software */
 600:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 930              		.loc 1 600 0
 931 0028 7B68     		ldr	r3, [r7, #4]
 932 002a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 933 002c 9BB2     		uxth	r3, r3
 934 002e 23F48073 		bic	r3, r3, #256
 935 0032 9AB2     		uxth	r2, r3
 936 0034 7B68     		ldr	r3, [r7, #4]
 937 0036 1A80     		strh	r2, [r3, #0]	@ movhi
 938              	.L34:
 601:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 602:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 939              		.loc 1 602 0
 940 0038 07F10C07 		add	r7, r7, #12
 941 003c BD46     		mov	sp, r7
 942 003e 80BC     		pop	{r7}
 943 0040 7047     		bx	lr
 944              		.cfi_endproc
 945              	.LFE67:
 947 0042 00BF     		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 948              		.align	2
 949              		.global	SPI_SSOutputCmd
 950              		.thumb
 951              		.thumb_func
 953              	SPI_SSOutputCmd:
 954              	.LFB68:
 603:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 604:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 605:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 606:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 607:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 608:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 609:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 610:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 611:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 612:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 955              		.loc 1 612 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 960 0000 80B4     		push	{r7}
 961              	.LCFI36:
 962              		.cfi_def_cfa_offset 4
 963              		.cfi_offset 7, -4
 964 0002 83B0     		sub	sp, sp, #12
 965              	.LCFI37:
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              	.LCFI38:
 969              		.cfi_def_cfa_register 7
 970 0006 7860     		str	r0, [r7, #4]
 971 0008 0B46     		mov	r3, r1
 972 000a FB70     		strb	r3, [r7, #3]
 613:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 614:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 615:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 973              		.loc 1 616 0
 974 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 975 000e 002B     		cmp	r3, #0
 976 0010 08D0     		beq	.L38
 617:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 618:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI SS output */
 619:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= CR2_SSOE_Set;
 977              		.loc 1 619 0
 978 0012 7B68     		ldr	r3, [r7, #4]
 979 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 980 0016 9BB2     		uxth	r3, r3
 981 0018 43F00403 		orr	r3, r3, #4
 982 001c 9AB2     		uxth	r2, r3
 983 001e 7B68     		ldr	r3, [r7, #4]
 984 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 985 0022 07E0     		b	.L37
 986              	.L38:
 620:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 621:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 622:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 623:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI SS output */
 624:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= CR2_SSOE_Reset;
 987              		.loc 1 624 0
 988 0024 7B68     		ldr	r3, [r7, #4]
 989 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 990 0028 9BB2     		uxth	r3, r3
 991 002a 23F00403 		bic	r3, r3, #4
 992 002e 9AB2     		uxth	r2, r3
 993 0030 7B68     		ldr	r3, [r7, #4]
 994 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 995              	.L37:
 625:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 626:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 996              		.loc 1 626 0
 997 0034 07F10C07 		add	r7, r7, #12
 998 0038 BD46     		mov	sp, r7
 999 003a 80BC     		pop	{r7}
 1000 003c 7047     		bx	lr
 1001              		.cfi_endproc
 1002              	.LFE68:
 1004 003e 00BF     		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 1005              		.align	2
 1006              		.global	SPI_DataSizeConfig
 1007              		.thumb
 1008              		.thumb_func
 1010              	SPI_DataSizeConfig:
 1011              	.LFB69:
 627:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 628:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 629:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures the data size for the selected SPI.
 630:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 631:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 632:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 633:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_16b: Set data frame format to 16bit
 634:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_8b: Set data frame format to 8bit
 635:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 636:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 637:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 638:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1012              		.loc 1 638 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 8
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
 1017 0000 80B4     		push	{r7}
 1018              	.LCFI39:
 1019              		.cfi_def_cfa_offset 4
 1020              		.cfi_offset 7, -4
 1021 0002 83B0     		sub	sp, sp, #12
 1022              	.LCFI40:
 1023              		.cfi_def_cfa_offset 16
 1024 0004 00AF     		add	r7, sp, #0
 1025              	.LCFI41:
 1026              		.cfi_def_cfa_register 7
 1027 0006 7860     		str	r0, [r7, #4]
 1028 0008 0B46     		mov	r3, r1
 1029 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 639:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 640:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 641:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 642:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear DFF bit */
 643:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 1030              		.loc 1 643 0
 1031 000c 7B68     		ldr	r3, [r7, #4]
 1032 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1033 0010 9BB2     		uxth	r3, r3
 1034 0012 23F40063 		bic	r3, r3, #2048
 1035 0016 9AB2     		uxth	r2, r3
 1036 0018 7B68     		ldr	r3, [r7, #4]
 1037 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 644:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set new DFF bit value */
 645:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 1038              		.loc 1 645 0
 1039 001c 7B68     		ldr	r3, [r7, #4]
 1040 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1041 0020 9AB2     		uxth	r2, r3
 1042 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1043 0024 1343     		orrs	r3, r3, r2
 1044 0026 9AB2     		uxth	r2, r3
 1045 0028 7B68     		ldr	r3, [r7, #4]
 1046 002a 1A80     		strh	r2, [r3, #0]	@ movhi
 646:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1047              		.loc 1 646 0
 1048 002c 07F10C07 		add	r7, r7, #12
 1049 0030 BD46     		mov	sp, r7
 1050 0032 80BC     		pop	{r7}
 1051 0034 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE69:
 1055 0036 00BF     		.section	.text.SPI_TransmitCRC,"ax",%progbits
 1056              		.align	2
 1057              		.global	SPI_TransmitCRC
 1058              		.thumb
 1059              		.thumb_func
 1061              	SPI_TransmitCRC:
 1062              	.LFB70:
 647:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 648:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 649:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmit the SPIx CRC value.
 650:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 651:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 652:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 653:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 654:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1063              		.loc 1 654 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068 0000 80B4     		push	{r7}
 1069              	.LCFI42:
 1070              		.cfi_def_cfa_offset 4
 1071              		.cfi_offset 7, -4
 1072 0002 83B0     		sub	sp, sp, #12
 1073              	.LCFI43:
 1074              		.cfi_def_cfa_offset 16
 1075 0004 00AF     		add	r7, sp, #0
 1076              	.LCFI44:
 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 655:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 656:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 657:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 658:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Enable the selected SPI CRC transmission */
 659:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= CR1_CRCNext_Set;
 1079              		.loc 1 659 0
 1080 0008 7B68     		ldr	r3, [r7, #4]
 1081 000a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1082 000c 9BB2     		uxth	r3, r3
 1083 000e 43F48053 		orr	r3, r3, #4096
 1084 0012 9AB2     		uxth	r2, r3
 1085 0014 7B68     		ldr	r3, [r7, #4]
 1086 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 660:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1087              		.loc 1 660 0
 1088 0018 07F10C07 		add	r7, r7, #12
 1089 001c BD46     		mov	sp, r7
 1090 001e 80BC     		pop	{r7}
 1091 0020 7047     		bx	lr
 1092              		.cfi_endproc
 1093              	.LFE70:
 1095 0022 00BF     		.section	.text.SPI_CalculateCRC,"ax",%progbits
 1096              		.align	2
 1097              		.global	SPI_CalculateCRC
 1098              		.thumb
 1099              		.thumb_func
 1101              	SPI_CalculateCRC:
 1102              	.LFB71:
 661:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 662:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 663:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 664:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 665:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 666:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 667:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 668:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 669:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 670:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1103              		.loc 1 670 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 8
 1106              		@ frame_needed = 1, uses_anonymous_args = 0
 1107              		@ link register save eliminated.
 1108 0000 80B4     		push	{r7}
 1109              	.LCFI45:
 1110              		.cfi_def_cfa_offset 4
 1111              		.cfi_offset 7, -4
 1112 0002 83B0     		sub	sp, sp, #12
 1113              	.LCFI46:
 1114              		.cfi_def_cfa_offset 16
 1115 0004 00AF     		add	r7, sp, #0
 1116              	.LCFI47:
 1117              		.cfi_def_cfa_register 7
 1118 0006 7860     		str	r0, [r7, #4]
 1119 0008 0B46     		mov	r3, r1
 1120 000a FB70     		strb	r3, [r7, #3]
 671:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 672:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 673:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 1121              		.loc 1 674 0
 1122 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1123 000e 002B     		cmp	r3, #0
 1124 0010 08D0     		beq	.L43
 675:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 676:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI CRC calculation */
 677:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_CRCEN_Set;
 1125              		.loc 1 677 0
 1126 0012 7B68     		ldr	r3, [r7, #4]
 1127 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1128 0016 9BB2     		uxth	r3, r3
 1129 0018 43F40053 		orr	r3, r3, #8192
 1130 001c 9AB2     		uxth	r2, r3
 1131 001e 7B68     		ldr	r3, [r7, #4]
 1132 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1133 0022 07E0     		b	.L42
 1134              	.L43:
 678:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 679:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 680:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 681:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI CRC calculation */
 682:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_CRCEN_Reset;
 1135              		.loc 1 682 0
 1136 0024 7B68     		ldr	r3, [r7, #4]
 1137 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1138 0028 9BB2     		uxth	r3, r3
 1139 002a 23F40053 		bic	r3, r3, #8192
 1140 002e 9AB2     		uxth	r2, r3
 1141 0030 7B68     		ldr	r3, [r7, #4]
 1142 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1143              	.L42:
 683:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 684:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1144              		.loc 1 684 0
 1145 0034 07F10C07 		add	r7, r7, #12
 1146 0038 BD46     		mov	sp, r7
 1147 003a 80BC     		pop	{r7}
 1148 003c 7047     		bx	lr
 1149              		.cfi_endproc
 1150              	.LFE71:
 1152 003e 00BF     		.section	.text.SPI_GetCRC,"ax",%progbits
 1153              		.align	2
 1154              		.global	SPI_GetCRC
 1155              		.thumb
 1156              		.thumb_func
 1158              	SPI_GetCRC:
 1159              	.LFB72:
 685:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 686:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 687:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 688:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 689:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 690:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 691:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Tx: Selects Tx CRC register
 692:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Rx: Selects Rx CRC register
 693:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The selected CRC register value..
 694:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 695:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 696:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1160              		.loc 1 696 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 16
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164              		@ link register save eliminated.
 1165 0000 80B4     		push	{r7}
 1166              	.LCFI48:
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 85B0     		sub	sp, sp, #20
 1170              	.LCFI49:
 1171              		.cfi_def_cfa_offset 24
 1172 0004 00AF     		add	r7, sp, #0
 1173              	.LCFI50:
 1174              		.cfi_def_cfa_register 7
 1175 0006 7860     		str	r0, [r7, #4]
 1176 0008 0B46     		mov	r3, r1
 1177 000a FB70     		strb	r3, [r7, #3]
 697:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t crcreg = 0;
 1178              		.loc 1 697 0
 1179 000c 4FF00003 		mov	r3, #0
 1180 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 698:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 699:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 700:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 701:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 1181              		.loc 1 701 0
 1182 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1183 0014 012B     		cmp	r3, #1
 1184 0016 03D0     		beq	.L46
 702:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 703:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Tx CRC register */
 704:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->TXCRCR;
 1185              		.loc 1 704 0
 1186 0018 7B68     		ldr	r3, [r7, #4]
 1187 001a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1188 001c FB81     		strh	r3, [r7, #14]	@ movhi
 1189 001e 02E0     		b	.L47
 1190              	.L46:
 705:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 706:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 707:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 708:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Rx CRC register */
 709:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->RXCRCR;
 1191              		.loc 1 709 0
 1192 0020 7B68     		ldr	r3, [r7, #4]
 1193 0022 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1194 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 1195              	.L47:
 710:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 711:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the selected CRC register */
 712:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return crcreg;
 1196              		.loc 1 712 0
 1197 0026 FB89     		ldrh	r3, [r7, #14]
 713:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1198              		.loc 1 713 0
 1199 0028 1846     		mov	r0, r3
 1200 002a 07F11407 		add	r7, r7, #20
 1201 002e BD46     		mov	sp, r7
 1202 0030 80BC     		pop	{r7}
 1203 0032 7047     		bx	lr
 1204              		.cfi_endproc
 1205              	.LFE72:
 1207              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 1208              		.align	2
 1209              		.global	SPI_GetCRCPolynomial
 1210              		.thumb
 1211              		.thumb_func
 1213              	SPI_GetCRCPolynomial:
 1214              	.LFB73:
 714:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 715:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 716:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 717:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 718:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The CRC Polynomial register value.
 719:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 720:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 721:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1215              		.loc 1 721 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 8
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
 1220 0000 80B4     		push	{r7}
 1221              	.LCFI51:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 83B0     		sub	sp, sp, #12
 1225              	.LCFI52:
 1226              		.cfi_def_cfa_offset 16
 1227 0004 00AF     		add	r7, sp, #0
 1228              	.LCFI53:
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
 722:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 723:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 724:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 725:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the CRC polynomial register */
 726:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->CRCPR;
 1231              		.loc 1 726 0
 1232 0008 7B68     		ldr	r3, [r7, #4]
 1233 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1234 000c 9BB2     		uxth	r3, r3
 727:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1235              		.loc 1 727 0
 1236 000e 1846     		mov	r0, r3
 1237 0010 07F10C07 		add	r7, r7, #12
 1238 0014 BD46     		mov	sp, r7
 1239 0016 80BC     		pop	{r7}
 1240 0018 7047     		bx	lr
 1241              		.cfi_endproc
 1242              	.LFE73:
 1244 001a 00BF     		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 1245              		.align	2
 1246              		.global	SPI_BiDirectionalLineConfig
 1247              		.thumb
 1248              		.thumb_func
 1250              	SPI_BiDirectionalLineConfig:
 1251              	.LFB74:
 728:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 729:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 730:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Selects the data transfer direction in bi-directional mode for the specified SPI.
 731:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 732:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bi-directional mode. 
 733:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 734:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Tx: Selects Tx transmission direction
 735:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Rx: Selects Rx receive direction
 736:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 737:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 738:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 739:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1252              		.loc 1 739 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 8
 1255              		@ frame_needed = 1, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
 1257 0000 80B4     		push	{r7}
 1258              	.LCFI54:
 1259              		.cfi_def_cfa_offset 4
 1260              		.cfi_offset 7, -4
 1261 0002 83B0     		sub	sp, sp, #12
 1262              	.LCFI55:
 1263              		.cfi_def_cfa_offset 16
 1264 0004 00AF     		add	r7, sp, #0
 1265              	.LCFI56:
 1266              		.cfi_def_cfa_register 7
 1267 0006 7860     		str	r0, [r7, #4]
 1268 0008 0B46     		mov	r3, r1
 1269 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 740:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 741:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 742:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 743:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 1270              		.loc 1 743 0
 1271 000c 7B88     		ldrh	r3, [r7, #2]
 1272 000e B3F5804F 		cmp	r3, #16384
 1273 0012 08D1     		bne	.L52
 744:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 745:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Tx only mode */
 746:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 1274              		.loc 1 746 0
 1275 0014 7B68     		ldr	r3, [r7, #4]
 1276 0016 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1277 0018 9BB2     		uxth	r3, r3
 1278 001a 43F48043 		orr	r3, r3, #16384
 1279 001e 9AB2     		uxth	r2, r3
 1280 0020 7B68     		ldr	r3, [r7, #4]
 1281 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 1282 0024 07E0     		b	.L51
 1283              	.L52:
 747:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 748:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 749:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 750:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Rx only mode */
 751:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 1284              		.loc 1 751 0
 1285 0026 7B68     		ldr	r3, [r7, #4]
 1286 0028 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1287 002a 9BB2     		uxth	r3, r3
 1288 002c 23F48043 		bic	r3, r3, #16384
 1289 0030 9AB2     		uxth	r2, r3
 1290 0032 7B68     		ldr	r3, [r7, #4]
 1291 0034 1A80     		strh	r2, [r3, #0]	@ movhi
 1292              	.L51:
 752:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 753:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1293              		.loc 1 753 0
 1294 0036 07F10C07 		add	r7, r7, #12
 1295 003a BD46     		mov	sp, r7
 1296 003c 80BC     		pop	{r7}
 1297 003e 7047     		bx	lr
 1298              		.cfi_endproc
 1299              	.LFE74:
 1301              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 1302              		.align	2
 1303              		.global	SPI_I2S_GetFlagStatus
 1304              		.thumb
 1305              		.thumb_func
 1307              	SPI_I2S_GetFlagStatus:
 1308              	.LFB75:
 754:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 755:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 756:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S flag is set or not.
 757:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 758:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 759:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 760:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI/I2S flag to check. 
 761:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 762:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
 763:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
 764:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_BSY: Busy flag.
 765:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_OVR: Overrun flag.
 766:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_MODF: Mode Fault flag.
 767:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_CRCERR: CRC Error flag.
 768:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_UDR: Underrun Error flag.
 769:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_CHSIDE: Channel Side flag.
 770:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
 771:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 772:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 773:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1309              		.loc 1 773 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 16
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 1314 0000 80B4     		push	{r7}
 1315              	.LCFI57:
 1316              		.cfi_def_cfa_offset 4
 1317              		.cfi_offset 7, -4
 1318 0002 85B0     		sub	sp, sp, #20
 1319              	.LCFI58:
 1320              		.cfi_def_cfa_offset 24
 1321 0004 00AF     		add	r7, sp, #0
 1322              	.LCFI59:
 1323              		.cfi_def_cfa_register 7
 1324 0006 7860     		str	r0, [r7, #4]
 1325 0008 0B46     		mov	r3, r1
 1326 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 774:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   FlagStatus bitstatus = RESET;
 1327              		.loc 1 774 0
 1328 000c 4FF00003 		mov	r3, #0
 1329 0010 FB73     		strb	r3, [r7, #15]
 775:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 776:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 777:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 778:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S flag */
 779:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 1330              		.loc 1 779 0
 1331 0012 7B68     		ldr	r3, [r7, #4]
 1332 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 1333 0016 9AB2     		uxth	r2, r3
 1334 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1335 001a 1340     		ands	r3, r3, r2
 1336 001c 9BB2     		uxth	r3, r3
 1337 001e 002B     		cmp	r3, #0
 1338 0020 03D0     		beq	.L55
 780:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 781:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is set */
 782:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 1339              		.loc 1 782 0
 1340 0022 4FF00103 		mov	r3, #1
 1341 0026 FB73     		strb	r3, [r7, #15]
 1342 0028 02E0     		b	.L56
 1343              	.L55:
 783:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 784:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 785:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 786:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is reset */
 787:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 1344              		.loc 1 787 0
 1345 002a 4FF00003 		mov	r3, #0
 1346 002e FB73     		strb	r3, [r7, #15]
 1347              	.L56:
 788:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 789:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_FLAG status */
 790:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return  bitstatus;
 1348              		.loc 1 790 0
 1349 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 791:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1350              		.loc 1 791 0
 1351 0032 1846     		mov	r0, r3
 1352 0034 07F11407 		add	r7, r7, #20
 1353 0038 BD46     		mov	sp, r7
 1354 003a 80BC     		pop	{r7}
 1355 003c 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE75:
 1359 003e 00BF     		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 1360              		.align	2
 1361              		.global	SPI_I2S_ClearFlag
 1362              		.thumb
 1363              		.thumb_func
 1365              	SPI_I2S_ClearFlag:
 1366              	.LFB76:
 792:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 793:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 794:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
 795:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 796:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 797:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
 798:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR flag.
 799:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 800:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun error) flag is cleared by software sequence: a read 
 801:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
 802:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
 803:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun error) flag is cleared by a read operation to 
 804:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     SPI_SR register (SPI_I2S_GetFlagStatus()).
 805:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) flag is cleared by software sequence: a read/write 
 806:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
 807:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
 808:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 809:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 810:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 811:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1367              		.loc 1 811 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 8
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371              		@ link register save eliminated.
 1372 0000 80B4     		push	{r7}
 1373              	.LCFI60:
 1374              		.cfi_def_cfa_offset 4
 1375              		.cfi_offset 7, -4
 1376 0002 83B0     		sub	sp, sp, #12
 1377              	.LCFI61:
 1378              		.cfi_def_cfa_offset 16
 1379 0004 00AF     		add	r7, sp, #0
 1380              	.LCFI62:
 1381              		.cfi_def_cfa_register 7
 1382 0006 7860     		str	r0, [r7, #4]
 1383 0008 0B46     		mov	r3, r1
 1384 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 812:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 813:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 814:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 815:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 816:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Clear the selected SPI CRC Error (CRCERR) flag */
 817:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 1385              		.loc 1 817 0
 1386 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1387 000e 6FEA0303 		mvn	r3, r3
 1388 0012 9AB2     		uxth	r2, r3
 1389 0014 7B68     		ldr	r3, [r7, #4]
 1390 0016 1A81     		strh	r2, [r3, #8]	@ movhi
 818:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1391              		.loc 1 818 0
 1392 0018 07F10C07 		add	r7, r7, #12
 1393 001c BD46     		mov	sp, r7
 1394 001e 80BC     		pop	{r7}
 1395 0020 7047     		bx	lr
 1396              		.cfi_endproc
 1397              	.LFE76:
 1399 0022 00BF     		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 1400              		.align	2
 1401              		.global	SPI_I2S_GetITStatus
 1402              		.thumb
 1403              		.thumb_func
 1405              	SPI_I2S_GetITStatus:
 1406              	.LFB77:
 819:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 820:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 821:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S interrupt has occurred or not.
 822:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 823:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 824:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 825:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to check. 
 826:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 827:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
 828:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
 829:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_OVR: Overrun interrupt.
 830:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_MODF: Mode Fault interrupt.
 831:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_CRCERR: CRC Error interrupt.
 832:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_IT_UDR: Underrun Error interrupt.
 833:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
 834:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 835:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 836:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1407              		.loc 1 836 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 16
 1410              		@ frame_needed = 1, uses_anonymous_args = 0
 1411              		@ link register save eliminated.
 1412 0000 80B4     		push	{r7}
 1413              	.LCFI63:
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 0002 85B0     		sub	sp, sp, #20
 1417              	.LCFI64:
 1418              		.cfi_def_cfa_offset 24
 1419 0004 00AF     		add	r7, sp, #0
 1420              	.LCFI65:
 1421              		.cfi_def_cfa_register 7
 1422 0006 7860     		str	r0, [r7, #4]
 1423 0008 0B46     		mov	r3, r1
 1424 000a FB70     		strb	r3, [r7, #3]
 837:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ITStatus bitstatus = RESET;
 1425              		.loc 1 837 0
 1426 000c 4FF00003 		mov	r3, #0
 1427 0010 FB73     		strb	r3, [r7, #15]
 838:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 1428              		.loc 1 838 0
 1429 0012 4FF00003 		mov	r3, #0
 1430 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 1431 0018 4FF00003 		mov	r3, #0
 1432 001c 7B81     		strh	r3, [r7, #10]	@ movhi
 1433 001e 4FF00003 		mov	r3, #0
 1434 0022 3B81     		strh	r3, [r7, #8]	@ movhi
 839:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 840:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 841:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 842:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 843:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 844:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 845:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1435              		.loc 1 845 0
 1436 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1437 0026 03F00F03 		and	r3, r3, #15
 1438 002a 4FF00102 		mov	r2, #1
 1439 002e 02FA03F3 		lsl	r3, r2, r3
 1440 0032 BB81     		strh	r3, [r7, #12]	@ movhi
 846:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 847:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT mask */
 848:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = SPI_I2S_IT >> 4;
 1441              		.loc 1 848 0
 1442 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1443 0036 4FEA1313 		lsr	r3, r3, #4
 1444 003a DBB2     		uxtb	r3, r3
 1445 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 849:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 850:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 851:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = 0x01 << itmask;
 1446              		.loc 1 851 0
 1447 003e 7B89     		ldrh	r3, [r7, #10]
 1448 0040 4FF00102 		mov	r2, #1
 1449 0044 02FA03F3 		lsl	r3, r2, r3
 1450 0048 7B81     		strh	r3, [r7, #10]	@ movhi
 852:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 853:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
 854:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 1451              		.loc 1 854 0
 1452 004a 7B68     		ldr	r3, [r7, #4]
 1453 004c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1454 004e 9AB2     		uxth	r2, r3
 1455 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1456 0052 1340     		ands	r3, r3, r2
 1457 0054 3B81     		strh	r3, [r7, #8]	@ movhi
 855:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 856:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S interrupt */
 857:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 1458              		.loc 1 857 0
 1459 0056 7B68     		ldr	r3, [r7, #4]
 1460 0058 1B89     		ldrh	r3, [r3, #8]	@ movhi
 1461 005a 9AB2     		uxth	r2, r3
 1462 005c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1463 005e 1340     		ands	r3, r3, r2
 1464 0060 9BB2     		uxth	r3, r3
 1465 0062 002B     		cmp	r3, #0
 1466 0064 06D0     		beq	.L60
 1467              		.loc 1 857 0 is_stmt 0 discriminator 1
 1468 0066 3B89     		ldrh	r3, [r7, #8]
 1469 0068 002B     		cmp	r3, #0
 1470 006a 03D0     		beq	.L60
 858:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 859:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is set */
 860:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 1471              		.loc 1 860 0 is_stmt 1
 1472 006c 4FF00103 		mov	r3, #1
 1473 0070 FB73     		strb	r3, [r7, #15]
 1474 0072 02E0     		b	.L61
 1475              	.L60:
 861:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 862:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 863:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 864:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is reset */
 865:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 1476              		.loc 1 865 0
 1477 0074 4FF00003 		mov	r3, #0
 1478 0078 FB73     		strb	r3, [r7, #15]
 1479              	.L61:
 866:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 867:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_IT status */
 868:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return bitstatus;
 1480              		.loc 1 868 0
 1481 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 869:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1482              		.loc 1 869 0
 1483 007c 1846     		mov	r0, r3
 1484 007e 07F11407 		add	r7, r7, #20
 1485 0082 BD46     		mov	sp, r7
 1486 0084 80BC     		pop	{r7}
 1487 0086 7047     		bx	lr
 1488              		.cfi_endproc
 1489              	.LFE77:
 1491              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 1492              		.align	2
 1493              		.global	SPI_I2S_ClearITPendingBit
 1494              		.thumb
 1495              		.thumb_func
 1497              	SPI_I2S_ClearITPendingBit:
 1498              	.LFB78:
 870:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 871:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 872:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
 873:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 874:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 875:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
 876:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR interrupt pending bit.   
 877:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 878:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun Error) interrupt pending bit is cleared by software 
 879:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
 880:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
 881:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun Error) interrupt pending bit is cleared by a read 
 882:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetITStatus()).
 883:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
 884:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
 885:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
 886:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     the SPI).
 887:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 888:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 889:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 890:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 1499              		.loc 1 890 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 16
 1502              		@ frame_needed = 1, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
 1504 0000 80B4     		push	{r7}
 1505              	.LCFI66:
 1506              		.cfi_def_cfa_offset 4
 1507              		.cfi_offset 7, -4
 1508 0002 85B0     		sub	sp, sp, #20
 1509              	.LCFI67:
 1510              		.cfi_def_cfa_offset 24
 1511 0004 00AF     		add	r7, sp, #0
 1512              	.LCFI68:
 1513              		.cfi_def_cfa_register 7
 1514 0006 7860     		str	r0, [r7, #4]
 1515 0008 0B46     		mov	r3, r1
 1516 000a FB70     		strb	r3, [r7, #3]
 891:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0;
 1517              		.loc 1 891 0
 1518 000c 4FF00003 		mov	r3, #0
 1519 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 892:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 893:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 894:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 895:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 896:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI IT index */
 897:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 1520              		.loc 1 897 0
 1521 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1522 0014 03F00F03 		and	r3, r3, #15
 1523 0018 4FF00102 		mov	r2, #1
 1524 001c 02FA03F3 		lsl	r3, r2, r3
 1525 0020 FB81     		strh	r3, [r7, #14]	@ movhi
 898:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 899:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
 900:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 1526              		.loc 1 900 0
 1527 0022 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1528 0024 6FEA0303 		mvn	r3, r3
 1529 0028 9AB2     		uxth	r2, r3
 1530 002a 7B68     		ldr	r3, [r7, #4]
 1531 002c 1A81     		strh	r2, [r3, #8]	@ movhi
 901:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 1532              		.loc 1 901 0
 1533 002e 07F11407 		add	r7, r7, #20
 1534 0032 BD46     		mov	sp, r7
 1535 0034 80BC     		pop	{r7}
 1536 0036 7047     		bx	lr
 1537              		.cfi_endproc
 1538              	.LFE78:
 1540              		.text
 1541              	.Letext0:
 1542              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 1543              		.file 3 "/Users/zac/code/spark/marvin/libraries/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 1544              		.file 4 "/Users/zac/code/spark/marvin/libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 1545              		.file 5 "/Users/zac/code/spark/marvin/libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_spi.h"
 1546              		.file 6 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_spi.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:19     .text.SPI_I2S_DeInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:24     .text.SPI_I2S_DeInit:0000000000000000 SPI_I2S_DeInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:98     .text.SPI_Init:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:103    .text.SPI_Init:0000000000000000 SPI_Init
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:205    .text.I2S_Init:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:210    .text.I2S_Init:0000000000000000 I2S_Init
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:436    .text.SPI_StructInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:441    .text.SPI_StructInit:0000000000000000 SPI_StructInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:504    .text.I2S_StructInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:509    .text.I2S_StructInit:0000000000000000 I2S_StructInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:560    .text.SPI_Cmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:565    .text.SPI_Cmd:0000000000000000 SPI_Cmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:617    .text.I2S_Cmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:622    .text.I2S_Cmd:0000000000000000 I2S_Cmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:674    .text.SPI_I2S_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:679    .text.SPI_I2S_ITConfig:0000000000000000 SPI_I2S_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:752    .text.SPI_I2S_DMACmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:757    .text.SPI_I2S_DMACmd:0000000000000000 SPI_I2S_DMACmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:815    .text.SPI_I2S_SendData:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:820    .text.SPI_I2S_SendData:0000000000000000 SPI_I2S_SendData
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:853    .text.SPI_I2S_ReceiveData:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:858    .text.SPI_I2S_ReceiveData:0000000000000000 SPI_I2S_ReceiveData
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:890    .text.SPI_NSSInternalSoftwareConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:895    .text.SPI_NSSInternalSoftwareConfig:0000000000000000 SPI_NSSInternalSoftwareConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:948    .text.SPI_SSOutputCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:953    .text.SPI_SSOutputCmd:0000000000000000 SPI_SSOutputCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1005   .text.SPI_DataSizeConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1010   .text.SPI_DataSizeConfig:0000000000000000 SPI_DataSizeConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1056   .text.SPI_TransmitCRC:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1061   .text.SPI_TransmitCRC:0000000000000000 SPI_TransmitCRC
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1096   .text.SPI_CalculateCRC:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1101   .text.SPI_CalculateCRC:0000000000000000 SPI_CalculateCRC
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1153   .text.SPI_GetCRC:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1158   .text.SPI_GetCRC:0000000000000000 SPI_GetCRC
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1208   .text.SPI_GetCRCPolynomial:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1213   .text.SPI_GetCRCPolynomial:0000000000000000 SPI_GetCRCPolynomial
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1245   .text.SPI_BiDirectionalLineConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1250   .text.SPI_BiDirectionalLineConfig:0000000000000000 SPI_BiDirectionalLineConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1302   .text.SPI_I2S_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1307   .text.SPI_I2S_GetFlagStatus:0000000000000000 SPI_I2S_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1360   .text.SPI_I2S_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1365   .text.SPI_I2S_ClearFlag:0000000000000000 SPI_I2S_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1400   .text.SPI_I2S_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1405   .text.SPI_I2S_GetITStatus:0000000000000000 SPI_I2S_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1492   .text.SPI_I2S_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//cc6MgSAH.s:1497   .text.SPI_I2S_ClearITPendingBit:0000000000000000 SPI_I2S_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.31.74a586c036c8ee5d9205c6728cc8d6ab
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_spi.h.123.42540f44e30eca038a8322f5b46ad4fc

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
