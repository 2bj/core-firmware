   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	ADC_DeInit:
  25              	.LFB56:
  26              		.file 1 "../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c"
   1:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
   2:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @version V3.6.1
   6:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @date    05-March-2012
   7:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @attention
  10:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  11:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  12:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  13:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * You may not use this file except in compliance with the License.
  15:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * You may obtain a copy of the License at:
  16:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  17:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  19:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * See the License for the specific language governing permissions and
  23:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * limitations under the License.
  24:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  25:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
  26:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  27:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  28:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  29:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  30:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  31:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  32:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  33:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  34:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  35:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  36:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  37:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  38:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  39:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  40:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  41:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  42:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  43:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  44:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  45:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
  46:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
  47:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  48:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  49:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  50:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  51:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  52:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  53:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  54:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  55:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  56:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  57:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  58:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  59:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  60:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  61:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  62:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  63:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  64:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  65:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  66:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  67:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  68:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  69:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  70:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  71:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  72:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  73:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  74:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  75:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  76:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  77:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  78:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  79:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  80:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  81:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  82:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  83:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  84:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  85:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  86:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  87:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  88:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  89:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  90:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  91:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  92:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  93:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  94:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  95:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  96:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  97:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  98:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  99:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
 100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
 101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
 103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
 104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JL mask */
 135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
  27              		.loc 1 186 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
 190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  43              		.loc 1 190 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF41053 		mov	r3, #9216
  46 000e C4F20103 		movt	r3, 16385
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  49              		.loc 1 193 0
  50 0016 4FF40070 		mov	r0, #512
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  53              		.loc 1 195 0
  54 0022 4FF40070 		mov	r0, #512
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 002e 26E0     		b	.L1
  58              	.L2:
 196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  59              		.loc 1 197 0
  60 0030 7A68     		ldr	r2, [r7, #4]
  61 0032 4FF42053 		mov	r3, #10240
  62 0036 C4F20103 		movt	r3, 16385
  63 003a 9A42     		cmp	r2, r3
  64 003c 0CD1     		bne	.L4
 198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  65              		.loc 1 200 0
  66 003e 4FF48060 		mov	r0, #1024
  67 0042 4FF00101 		mov	r1, #1
  68 0046 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  69              		.loc 1 202 0
  70 004a 4FF48060 		mov	r0, #1024
  71 004e 4FF00001 		mov	r1, #0
  72 0052 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  73 0056 12E0     		b	.L1
  74              	.L4:
 203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  75              		.loc 1 206 0
  76 0058 7A68     		ldr	r2, [r7, #4]
  77 005a 4FF47053 		mov	r3, #15360
  78 005e C4F20103 		movt	r3, 16385
  79 0062 9A42     		cmp	r2, r3
  80 0064 0BD1     		bne	.L1
 207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     {
 208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  81              		.loc 1 209 0
  82 0066 4FF40040 		mov	r0, #32768
  83 006a 4FF00101 		mov	r1, #1
  84 006e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  85              		.loc 1 211 0
  86 0072 4FF40040 		mov	r0, #32768
  87 0076 4FF00001 		mov	r1, #0
  88 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  89              	.L1:
 212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     }
 213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
  90              		.loc 1 214 0
  91 007e 07F10807 		add	r7, r7, #8
  92 0082 BD46     		mov	sp, r7
  93 0084 80BD     		pop	{r7, pc}
  94              		.cfi_endproc
  95              	.LFE56:
  97 0086 00BF     		.section	.text.ADC_Init,"ax",%progbits
  98              		.align	2
  99              		.global	ADC_Init
 100              		.thumb
 101              		.thumb_func
 103              	ADC_Init:
 104              	.LFB57:
 215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 105              		.loc 1 225 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 16
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 80B4     		push	{r7}
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 7, -4
 114 0002 85B0     		sub	sp, sp, #20
 115              	.LCFI4:
 116              		.cfi_def_cfa_offset 24
 117 0004 00AF     		add	r7, sp, #0
 118              	.LCFI5:
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 121 0008 3960     		str	r1, [r7, #0]
 226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 122              		.loc 1 226 0
 123 000a 4FF00003 		mov	r3, #0
 124 000e FB60     		str	r3, [r7, #12]
 227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 125              		.loc 1 227 0
 126 0010 4FF00003 		mov	r3, #0
 127 0014 FB72     		strb	r3, [r7, #11]
 228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 128              		.loc 1 239 0
 129 0016 7B68     		ldr	r3, [r7, #4]
 130 0018 5B68     		ldr	r3, [r3, #4]
 131 001a FB60     		str	r3, [r7, #12]
 240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 132              		.loc 1 241 0
 133 001c FB68     		ldr	r3, [r7, #12]
 134 001e 23F47023 		bic	r3, r3, #983040
 135 0022 23F48073 		bic	r3, r3, #256
 136 0026 FB60     		str	r3, [r7, #12]
 242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 137              		.loc 1 245 0
 138 0028 3B68     		ldr	r3, [r7, #0]
 139 002a 1A68     		ldr	r2, [r3, #0]
 140 002c 3B68     		ldr	r3, [r7, #0]
 141 002e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 142 0030 4FEA0323 		lsl	r3, r3, #8
 143 0034 1343     		orrs	r3, r3, r2
 144 0036 FA68     		ldr	r2, [r7, #12]
 145 0038 1343     		orrs	r3, r3, r2
 146 003a FB60     		str	r3, [r7, #12]
 246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 147              		.loc 1 247 0
 148 003c 7B68     		ldr	r3, [r7, #4]
 149 003e FA68     		ldr	r2, [r7, #12]
 150 0040 5A60     		str	r2, [r3, #4]
 248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 151              		.loc 1 251 0
 152 0042 7B68     		ldr	r3, [r7, #4]
 153 0044 9B68     		ldr	r3, [r3, #8]
 154 0046 FB60     		str	r3, [r7, #12]
 252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 155              		.loc 1 253 0
 156 0048 FA68     		ldr	r2, [r7, #12]
 157 004a 4FF2FD73 		movw	r3, #63485
 158 004e CFF6F173 		movt	r3, 65521
 159 0052 1340     		ands	r3, r3, r2
 160 0054 FB60     		str	r3, [r7, #12]
 254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 161              		.loc 1 258 0
 162 0056 3B68     		ldr	r3, [r7, #0]
 163 0058 DA68     		ldr	r2, [r3, #12]
 164 005a 3B68     		ldr	r3, [r7, #0]
 165 005c 9B68     		ldr	r3, [r3, #8]
 166 005e 1A43     		orrs	r2, r2, r3
 259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 167              		.loc 1 259 0
 168 0060 3B68     		ldr	r3, [r7, #0]
 169 0062 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 170 0064 4FEA4303 		lsl	r3, r3, #1
 258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 171              		.loc 1 258 0
 172 0068 1343     		orrs	r3, r3, r2
 173 006a FA68     		ldr	r2, [r7, #12]
 174 006c 1343     		orrs	r3, r3, r2
 175 006e FB60     		str	r3, [r7, #12]
 260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 176              		.loc 1 261 0
 177 0070 7B68     		ldr	r3, [r7, #4]
 178 0072 FA68     		ldr	r2, [r7, #12]
 179 0074 9A60     		str	r2, [r3, #8]
 262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 180              		.loc 1 265 0
 181 0076 7B68     		ldr	r3, [r7, #4]
 182 0078 DB6A     		ldr	r3, [r3, #44]
 183 007a FB60     		str	r3, [r7, #12]
 266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear L bits */
 267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 184              		.loc 1 267 0
 185 007c FB68     		ldr	r3, [r7, #12]
 186 007e 23F47003 		bic	r3, r3, #15728640
 187 0082 FB60     		str	r3, [r7, #12]
 268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 188              		.loc 1 270 0
 189 0084 3B68     		ldr	r3, [r7, #0]
 190 0086 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 191 0088 03F1FF33 		add	r3, r3, #-1
 192 008c DAB2     		uxtb	r2, r3
 193 008e FB7A     		ldrb	r3, [r7, #11]
 194 0090 1343     		orrs	r3, r3, r2
 195 0092 FB72     		strb	r3, [r7, #11]
 271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 196              		.loc 1 271 0
 197 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 198 0096 4FEA0353 		lsl	r3, r3, #20
 199 009a FA68     		ldr	r2, [r7, #12]
 200 009c 1343     		orrs	r3, r3, r2
 201 009e FB60     		str	r3, [r7, #12]
 272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 202              		.loc 1 273 0
 203 00a0 7B68     		ldr	r3, [r7, #4]
 204 00a2 FA68     		ldr	r2, [r7, #12]
 205 00a4 DA62     		str	r2, [r3, #44]
 274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 206              		.loc 1 274 0
 207 00a6 07F11407 		add	r7, r7, #20
 208 00aa BD46     		mov	sp, r7
 209 00ac 80BC     		pop	{r7}
 210 00ae 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE57:
 214              		.section	.text.ADC_StructInit,"ax",%progbits
 215              		.align	2
 216              		.global	ADC_StructInit
 217              		.thumb
 218              		.thumb_func
 220              	ADC_StructInit:
 221              	.LFB58:
 275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 222              		.loc 1 282 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              	.LCFI6:
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 7, -4
 231 0002 83B0     		sub	sp, sp, #12
 232              	.LCFI7:
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              	.LCFI8:
 236              		.cfi_def_cfa_register 7
 237 0006 7860     		str	r0, [r7, #4]
 283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 238              		.loc 1 285 0
 239 0008 7B68     		ldr	r3, [r7, #4]
 240 000a 4FF00002 		mov	r2, #0
 241 000e 1A60     		str	r2, [r3, #0]
 286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 242              		.loc 1 287 0
 243 0010 7B68     		ldr	r3, [r7, #4]
 244 0012 4FF00002 		mov	r2, #0
 245 0016 1A71     		strb	r2, [r3, #4]
 288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 246              		.loc 1 289 0
 247 0018 7B68     		ldr	r3, [r7, #4]
 248 001a 4FF00002 		mov	r2, #0
 249 001e 5A71     		strb	r2, [r3, #5]
 290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 250              		.loc 1 291 0
 251 0020 7B68     		ldr	r3, [r7, #4]
 252 0022 4FF00002 		mov	r2, #0
 253 0026 9A60     		str	r2, [r3, #8]
 292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 254              		.loc 1 293 0
 255 0028 7B68     		ldr	r3, [r7, #4]
 256 002a 4FF00002 		mov	r2, #0
 257 002e DA60     		str	r2, [r3, #12]
 294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 258              		.loc 1 295 0
 259 0030 7B68     		ldr	r3, [r7, #4]
 260 0032 4FF00102 		mov	r2, #1
 261 0036 1A74     		strb	r2, [r3, #16]
 296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 262              		.loc 1 296 0
 263 0038 07F10C07 		add	r7, r7, #12
 264 003c BD46     		mov	sp, r7
 265 003e 80BC     		pop	{r7}
 266 0040 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE58:
 270 0042 00BF     		.section	.text.ADC_Cmd,"ax",%progbits
 271              		.align	2
 272              		.global	ADC_Cmd
 273              		.thumb
 274              		.thumb_func
 276              	ADC_Cmd:
 277              	.LFB59:
 297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 300:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 301:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 302:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 303:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 304:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 305:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 306:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 278              		.loc 1 306 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283 0000 80B4     		push	{r7}
 284              	.LCFI9:
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 83B0     		sub	sp, sp, #12
 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI11:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 294 0008 0B46     		mov	r3, r1
 295 000a FB70     		strb	r3, [r7, #3]
 307:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 308:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 309:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 310:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 296              		.loc 1 310 0
 297 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 298 000e 002B     		cmp	r3, #0
 299 0010 06D0     		beq	.L8
 311:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 312:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 313:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 300              		.loc 1 313 0
 301 0012 7B68     		ldr	r3, [r7, #4]
 302 0014 9B68     		ldr	r3, [r3, #8]
 303 0016 43F00102 		orr	r2, r3, #1
 304 001a 7B68     		ldr	r3, [r7, #4]
 305 001c 9A60     		str	r2, [r3, #8]
 306 001e 05E0     		b	.L7
 307              	.L8:
 314:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 315:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 316:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 317:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 318:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 308              		.loc 1 318 0
 309 0020 7B68     		ldr	r3, [r7, #4]
 310 0022 9B68     		ldr	r3, [r3, #8]
 311 0024 23F00102 		bic	r2, r3, #1
 312 0028 7B68     		ldr	r3, [r7, #4]
 313 002a 9A60     		str	r2, [r3, #8]
 314              	.L7:
 319:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 320:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 315              		.loc 1 320 0
 316 002c 07F10C07 		add	r7, r7, #12
 317 0030 BD46     		mov	sp, r7
 318 0032 80BC     		pop	{r7}
 319 0034 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE59:
 323 0036 00BF     		.section	.text.ADC_DMACmd,"ax",%progbits
 324              		.align	2
 325              		.global	ADC_DMACmd
 326              		.thumb
 327              		.thumb_func
 329              	ADC_DMACmd:
 330              	.LFB60:
 321:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 322:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 323:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 324:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 325:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 326:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 327:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 328:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 329:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 330:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 331:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 331              		.loc 1 331 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 80B4     		push	{r7}
 337              	.LCFI12:
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 83B0     		sub	sp, sp, #12
 341              	.LCFI13:
 342              		.cfi_def_cfa_offset 16
 343 0004 00AF     		add	r7, sp, #0
 344              	.LCFI14:
 345              		.cfi_def_cfa_register 7
 346 0006 7860     		str	r0, [r7, #4]
 347 0008 0B46     		mov	r3, r1
 348 000a FB70     		strb	r3, [r7, #3]
 332:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 333:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 334:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 335:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 349              		.loc 1 335 0
 350 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 351 000e 002B     		cmp	r3, #0
 352 0010 06D0     		beq	.L11
 336:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 337:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 338:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 353              		.loc 1 338 0
 354 0012 7B68     		ldr	r3, [r7, #4]
 355 0014 9B68     		ldr	r3, [r3, #8]
 356 0016 43F48072 		orr	r2, r3, #256
 357 001a 7B68     		ldr	r3, [r7, #4]
 358 001c 9A60     		str	r2, [r3, #8]
 359 001e 05E0     		b	.L10
 360              	.L11:
 339:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 340:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 341:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 342:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 343:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 361              		.loc 1 343 0
 362 0020 7B68     		ldr	r3, [r7, #4]
 363 0022 9B68     		ldr	r3, [r3, #8]
 364 0024 23F48072 		bic	r2, r3, #256
 365 0028 7B68     		ldr	r3, [r7, #4]
 366 002a 9A60     		str	r2, [r3, #8]
 367              	.L10:
 344:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 345:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 368              		.loc 1 345 0
 369 002c 07F10C07 		add	r7, r7, #12
 370 0030 BD46     		mov	sp, r7
 371 0032 80BC     		pop	{r7}
 372 0034 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE60:
 376 0036 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 377              		.align	2
 378              		.global	ADC_ITConfig
 379              		.thumb
 380              		.thumb_func
 382              	ADC_ITConfig:
 383              	.LFB61:
 346:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 347:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 348:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 349:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 350:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 351:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 352:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 353:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 354:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 355:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 356:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 357:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 358:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 359:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 360:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 384              		.loc 1 360 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 16
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI15:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 85B0     		sub	sp, sp, #20
 394              	.LCFI16:
 395              		.cfi_def_cfa_offset 24
 396 0004 00AF     		add	r7, sp, #0
 397              	.LCFI17:
 398              		.cfi_def_cfa_register 7
 399 0006 7860     		str	r0, [r7, #4]
 400 0008 1346     		mov	r3, r2
 401 000a 0A46     		mov	r2, r1	@ movhi
 402 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 403 000e 7B70     		strb	r3, [r7, #1]
 361:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 404              		.loc 1 361 0
 405 0010 4FF00003 		mov	r3, #0
 406 0014 FB73     		strb	r3, [r7, #15]
 362:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 363:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 364:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 365:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 366:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 367:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 407              		.loc 1 367 0
 408 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 409 0018 FB73     		strb	r3, [r7, #15]
 368:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 410              		.loc 1 368 0
 411 001a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 412 001c 002B     		cmp	r3, #0
 413 001e 06D0     		beq	.L14
 369:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 370:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 371:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 414              		.loc 1 371 0
 415 0020 7B68     		ldr	r3, [r7, #4]
 416 0022 5A68     		ldr	r2, [r3, #4]
 417 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 418 0026 1A43     		orrs	r2, r2, r3
 419 0028 7B68     		ldr	r3, [r7, #4]
 420 002a 5A60     		str	r2, [r3, #4]
 421 002c 07E0     		b	.L13
 422              	.L14:
 372:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 373:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 374:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 375:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 376:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 423              		.loc 1 376 0
 424 002e 7B68     		ldr	r3, [r7, #4]
 425 0030 5A68     		ldr	r2, [r3, #4]
 426 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 427 0034 6FEA0303 		mvn	r3, r3
 428 0038 1A40     		ands	r2, r2, r3
 429 003a 7B68     		ldr	r3, [r7, #4]
 430 003c 5A60     		str	r2, [r3, #4]
 431              	.L13:
 377:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 378:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 432              		.loc 1 378 0
 433 003e 07F11407 		add	r7, r7, #20
 434 0042 BD46     		mov	sp, r7
 435 0044 80BC     		pop	{r7}
 436 0046 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE61:
 440              		.section	.text.ADC_ResetCalibration,"ax",%progbits
 441              		.align	2
 442              		.global	ADC_ResetCalibration
 443              		.thumb
 444              		.thumb_func
 446              	ADC_ResetCalibration:
 447              	.LFB62:
 379:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 380:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 381:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 382:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 383:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 384:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 385:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 386:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 448              		.loc 1 386 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 8
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 80B4     		push	{r7}
 454              	.LCFI18:
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 83B0     		sub	sp, sp, #12
 458              	.LCFI19:
 459              		.cfi_def_cfa_offset 16
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI20:
 462              		.cfi_def_cfa_register 7
 463 0006 7860     		str	r0, [r7, #4]
 387:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 388:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 389:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 390:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 464              		.loc 1 390 0
 465 0008 7B68     		ldr	r3, [r7, #4]
 466 000a 9B68     		ldr	r3, [r3, #8]
 467 000c 43F00802 		orr	r2, r3, #8
 468 0010 7B68     		ldr	r3, [r7, #4]
 469 0012 9A60     		str	r2, [r3, #8]
 391:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 470              		.loc 1 391 0
 471 0014 07F10C07 		add	r7, r7, #12
 472 0018 BD46     		mov	sp, r7
 473 001a 80BC     		pop	{r7}
 474 001c 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE62:
 478 001e 00BF     		.section	.text.ADC_GetResetCalibrationStatus,"ax",%progbits
 479              		.align	2
 480              		.global	ADC_GetResetCalibrationStatus
 481              		.thumb
 482              		.thumb_func
 484              	ADC_GetResetCalibrationStatus:
 485              	.LFB63:
 392:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 393:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 394:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 395:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 396:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 397:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 398:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 399:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 486              		.loc 1 399 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 16
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              	.LCFI21:
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 85B0     		sub	sp, sp, #20
 496              	.LCFI22:
 497              		.cfi_def_cfa_offset 24
 498 0004 00AF     		add	r7, sp, #0
 499              	.LCFI23:
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
 400:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 502              		.loc 1 400 0
 503 0008 4FF00003 		mov	r3, #0
 504 000c FB73     		strb	r3, [r7, #15]
 401:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 402:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 403:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 404:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 505              		.loc 1 404 0
 506 000e 7B68     		ldr	r3, [r7, #4]
 507 0010 9B68     		ldr	r3, [r3, #8]
 508 0012 03F00803 		and	r3, r3, #8
 509 0016 002B     		cmp	r3, #0
 510 0018 03D0     		beq	.L18
 405:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 406:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 407:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 511              		.loc 1 407 0
 512 001a 4FF00103 		mov	r3, #1
 513 001e FB73     		strb	r3, [r7, #15]
 514 0020 02E0     		b	.L19
 515              	.L18:
 408:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 409:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 410:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 411:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 412:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 516              		.loc 1 412 0
 517 0022 4FF00003 		mov	r3, #0
 518 0026 FB73     		strb	r3, [r7, #15]
 519              	.L19:
 413:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 414:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 415:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 520              		.loc 1 415 0
 521 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 416:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 522              		.loc 1 416 0
 523 002a 1846     		mov	r0, r3
 524 002c 07F11407 		add	r7, r7, #20
 525 0030 BD46     		mov	sp, r7
 526 0032 80BC     		pop	{r7}
 527 0034 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE63:
 531 0036 00BF     		.section	.text.ADC_StartCalibration,"ax",%progbits
 532              		.align	2
 533              		.global	ADC_StartCalibration
 534              		.thumb
 535              		.thumb_func
 537              	ADC_StartCalibration:
 538              	.LFB64:
 417:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 418:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 419:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 420:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 421:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 422:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 423:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 424:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 539              		.loc 1 424 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 0000 80B4     		push	{r7}
 545              	.LCFI24:
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 83B0     		sub	sp, sp, #12
 549              	.LCFI25:
 550              		.cfi_def_cfa_offset 16
 551 0004 00AF     		add	r7, sp, #0
 552              	.LCFI26:
 553              		.cfi_def_cfa_register 7
 554 0006 7860     		str	r0, [r7, #4]
 425:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 426:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 427:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 428:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 555              		.loc 1 428 0
 556 0008 7B68     		ldr	r3, [r7, #4]
 557 000a 9B68     		ldr	r3, [r3, #8]
 558 000c 43F00402 		orr	r2, r3, #4
 559 0010 7B68     		ldr	r3, [r7, #4]
 560 0012 9A60     		str	r2, [r3, #8]
 429:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 561              		.loc 1 429 0
 562 0014 07F10C07 		add	r7, r7, #12
 563 0018 BD46     		mov	sp, r7
 564 001a 80BC     		pop	{r7}
 565 001c 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE64:
 569 001e 00BF     		.section	.text.ADC_GetCalibrationStatus,"ax",%progbits
 570              		.align	2
 571              		.global	ADC_GetCalibrationStatus
 572              		.thumb
 573              		.thumb_func
 575              	ADC_GetCalibrationStatus:
 576              	.LFB65:
 430:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 431:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 432:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 433:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 434:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 435:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 436:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 437:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 577              		.loc 1 437 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 16
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              	.LCFI27:
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 7, -4
 586 0002 85B0     		sub	sp, sp, #20
 587              	.LCFI28:
 588              		.cfi_def_cfa_offset 24
 589 0004 00AF     		add	r7, sp, #0
 590              	.LCFI29:
 591              		.cfi_def_cfa_register 7
 592 0006 7860     		str	r0, [r7, #4]
 438:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 593              		.loc 1 438 0
 594 0008 4FF00003 		mov	r3, #0
 595 000c FB73     		strb	r3, [r7, #15]
 439:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 440:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 441:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 442:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 596              		.loc 1 442 0
 597 000e 7B68     		ldr	r3, [r7, #4]
 598 0010 9B68     		ldr	r3, [r3, #8]
 599 0012 03F00403 		and	r3, r3, #4
 600 0016 002B     		cmp	r3, #0
 601 0018 03D0     		beq	.L23
 443:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 444:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 445:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 602              		.loc 1 445 0
 603 001a 4FF00103 		mov	r3, #1
 604 001e FB73     		strb	r3, [r7, #15]
 605 0020 02E0     		b	.L24
 606              	.L23:
 446:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 447:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 448:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 449:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 450:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 607              		.loc 1 450 0
 608 0022 4FF00003 		mov	r3, #0
 609 0026 FB73     		strb	r3, [r7, #15]
 610              	.L24:
 451:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 452:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 453:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 611              		.loc 1 453 0
 612 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 454:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 613              		.loc 1 454 0
 614 002a 1846     		mov	r0, r3
 615 002c 07F11407 		add	r7, r7, #20
 616 0030 BD46     		mov	sp, r7
 617 0032 80BC     		pop	{r7}
 618 0034 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE65:
 622 0036 00BF     		.section	.text.ADC_SoftwareStartConvCmd,"ax",%progbits
 623              		.align	2
 624              		.global	ADC_SoftwareStartConvCmd
 625              		.thumb
 626              		.thumb_func
 628              	ADC_SoftwareStartConvCmd:
 629              	.LFB66:
 455:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 456:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 457:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 458:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 459:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 460:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 461:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 462:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 463:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 464:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 630              		.loc 1 464 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 8
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635 0000 80B4     		push	{r7}
 636              	.LCFI30:
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 7, -4
 639 0002 83B0     		sub	sp, sp, #12
 640              	.LCFI31:
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              	.LCFI32:
 644              		.cfi_def_cfa_register 7
 645 0006 7860     		str	r0, [r7, #4]
 646 0008 0B46     		mov	r3, r1
 647 000a FB70     		strb	r3, [r7, #3]
 465:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 466:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 467:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 648              		.loc 1 468 0
 649 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 650 000e 002B     		cmp	r3, #0
 651 0010 06D0     		beq	.L27
 469:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 470:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 471:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 652              		.loc 1 472 0
 653 0012 7B68     		ldr	r3, [r7, #4]
 654 0014 9B68     		ldr	r3, [r3, #8]
 655 0016 43F4A002 		orr	r2, r3, #5242880
 656 001a 7B68     		ldr	r3, [r7, #4]
 657 001c 9A60     		str	r2, [r3, #8]
 658 001e 05E0     		b	.L26
 659              	.L27:
 473:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 474:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 475:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 476:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 477:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 478:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 660              		.loc 1 478 0
 661 0020 7B68     		ldr	r3, [r7, #4]
 662 0022 9B68     		ldr	r3, [r3, #8]
 663 0024 23F4A002 		bic	r2, r3, #5242880
 664 0028 7B68     		ldr	r3, [r7, #4]
 665 002a 9A60     		str	r2, [r3, #8]
 666              	.L26:
 479:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 480:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 667              		.loc 1 480 0
 668 002c 07F10C07 		add	r7, r7, #12
 669 0030 BD46     		mov	sp, r7
 670 0032 80BC     		pop	{r7}
 671 0034 7047     		bx	lr
 672              		.cfi_endproc
 673              	.LFE66:
 675 0036 00BF     		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 676              		.align	2
 677              		.global	ADC_GetSoftwareStartConvStatus
 678              		.thumb
 679              		.thumb_func
 681              	ADC_GetSoftwareStartConvStatus:
 682              	.LFB67:
 481:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 482:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 483:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 484:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 485:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 486:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 487:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 488:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 683              		.loc 1 488 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 16
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688 0000 80B4     		push	{r7}
 689              	.LCFI33:
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 7, -4
 692 0002 85B0     		sub	sp, sp, #20
 693              	.LCFI34:
 694              		.cfi_def_cfa_offset 24
 695 0004 00AF     		add	r7, sp, #0
 696              	.LCFI35:
 697              		.cfi_def_cfa_register 7
 698 0006 7860     		str	r0, [r7, #4]
 489:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 699              		.loc 1 489 0
 700 0008 4FF00003 		mov	r3, #0
 701 000c FB73     		strb	r3, [r7, #15]
 490:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 491:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 492:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 493:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 702              		.loc 1 493 0
 703 000e 7B68     		ldr	r3, [r7, #4]
 704 0010 9B68     		ldr	r3, [r3, #8]
 705 0012 03F48003 		and	r3, r3, #4194304
 706 0016 002B     		cmp	r3, #0
 707 0018 03D0     		beq	.L30
 494:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 495:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 496:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 708              		.loc 1 496 0
 709 001a 4FF00103 		mov	r3, #1
 710 001e FB73     		strb	r3, [r7, #15]
 711 0020 02E0     		b	.L31
 712              	.L30:
 497:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 498:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 499:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 500:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 501:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 713              		.loc 1 501 0
 714 0022 4FF00003 		mov	r3, #0
 715 0026 FB73     		strb	r3, [r7, #15]
 716              	.L31:
 502:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 503:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 504:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 717              		.loc 1 504 0
 718 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 505:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 719              		.loc 1 505 0
 720 002a 1846     		mov	r0, r3
 721 002c 07F11407 		add	r7, r7, #20
 722 0030 BD46     		mov	sp, r7
 723 0032 80BC     		pop	{r7}
 724 0034 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE67:
 728 0036 00BF     		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 729              		.align	2
 730              		.global	ADC_DiscModeChannelCountConfig
 731              		.thumb
 732              		.thumb_func
 734              	ADC_DiscModeChannelCountConfig:
 735              	.LFB68:
 506:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 507:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 508:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 509:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         group channel.
 510:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 511:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 512:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 513:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 514:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 515:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 516:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 736              		.loc 1 516 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 16
 739              		@ frame_needed = 1, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741 0000 80B4     		push	{r7}
 742              	.LCFI36:
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 85B0     		sub	sp, sp, #20
 746              	.LCFI37:
 747              		.cfi_def_cfa_offset 24
 748 0004 00AF     		add	r7, sp, #0
 749              	.LCFI38:
 750              		.cfi_def_cfa_register 7
 751 0006 7860     		str	r0, [r7, #4]
 752 0008 0B46     		mov	r3, r1
 753 000a FB70     		strb	r3, [r7, #3]
 517:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 754              		.loc 1 517 0
 755 000c 4FF00003 		mov	r3, #0
 756 0010 FB60     		str	r3, [r7, #12]
 518:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 757              		.loc 1 518 0
 758 0012 4FF00003 		mov	r3, #0
 759 0016 BB60     		str	r3, [r7, #8]
 519:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 520:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 521:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 522:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 523:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 760              		.loc 1 523 0
 761 0018 7B68     		ldr	r3, [r7, #4]
 762 001a 5B68     		ldr	r3, [r3, #4]
 763 001c FB60     		str	r3, [r7, #12]
 524:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 525:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 764              		.loc 1 525 0
 765 001e FB68     		ldr	r3, [r7, #12]
 766 0020 23F46043 		bic	r3, r3, #57344
 767 0024 FB60     		str	r3, [r7, #12]
 526:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 527:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 768              		.loc 1 527 0
 769 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 770 0028 03F1FF33 		add	r3, r3, #-1
 771 002c BB60     		str	r3, [r7, #8]
 528:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 772              		.loc 1 528 0
 773 002e BB68     		ldr	r3, [r7, #8]
 774 0030 4FEA4333 		lsl	r3, r3, #13
 775 0034 FA68     		ldr	r2, [r7, #12]
 776 0036 1343     		orrs	r3, r3, r2
 777 0038 FB60     		str	r3, [r7, #12]
 529:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 530:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 778              		.loc 1 530 0
 779 003a 7B68     		ldr	r3, [r7, #4]
 780 003c FA68     		ldr	r2, [r7, #12]
 781 003e 5A60     		str	r2, [r3, #4]
 531:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 782              		.loc 1 531 0
 783 0040 07F11407 		add	r7, r7, #20
 784 0044 BD46     		mov	sp, r7
 785 0046 80BC     		pop	{r7}
 786 0048 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE68:
 790 004a 00BF     		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 791              		.align	2
 792              		.global	ADC_DiscModeCmd
 793              		.thumb
 794              		.thumb_func
 796              	ADC_DiscModeCmd:
 797              	.LFB69:
 532:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 533:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 534:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 535:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 536:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 537:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 538:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on regular group channel.
 539:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 540:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 541:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 542:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 543:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 798              		.loc 1 543 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 8
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803 0000 80B4     		push	{r7}
 804              	.LCFI39:
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 83B0     		sub	sp, sp, #12
 808              	.LCFI40:
 809              		.cfi_def_cfa_offset 16
 810 0004 00AF     		add	r7, sp, #0
 811              	.LCFI41:
 812              		.cfi_def_cfa_register 7
 813 0006 7860     		str	r0, [r7, #4]
 814 0008 0B46     		mov	r3, r1
 815 000a FB70     		strb	r3, [r7, #3]
 544:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 545:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 546:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 547:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 816              		.loc 1 547 0
 817 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 818 000e 002B     		cmp	r3, #0
 819 0010 06D0     		beq	.L35
 548:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 549:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 550:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 820              		.loc 1 550 0
 821 0012 7B68     		ldr	r3, [r7, #4]
 822 0014 5B68     		ldr	r3, [r3, #4]
 823 0016 43F40062 		orr	r2, r3, #2048
 824 001a 7B68     		ldr	r3, [r7, #4]
 825 001c 5A60     		str	r2, [r3, #4]
 826 001e 05E0     		b	.L34
 827              	.L35:
 551:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 552:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 553:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 554:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 555:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 828              		.loc 1 555 0
 829 0020 7B68     		ldr	r3, [r7, #4]
 830 0022 5B68     		ldr	r3, [r3, #4]
 831 0024 23F40062 		bic	r2, r3, #2048
 832 0028 7B68     		ldr	r3, [r7, #4]
 833 002a 5A60     		str	r2, [r3, #4]
 834              	.L34:
 556:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 557:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 835              		.loc 1 557 0
 836 002c 07F10C07 		add	r7, r7, #12
 837 0030 BD46     		mov	sp, r7
 838 0032 80BC     		pop	{r7}
 839 0034 7047     		bx	lr
 840              		.cfi_endproc
 841              	.LFE69:
 843 0036 00BF     		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_RegularChannelConfig
 846              		.thumb
 847              		.thumb_func
 849              	ADC_RegularChannelConfig:
 850              	.LFB70:
 558:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 559:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 560:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 561:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 562:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 563:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 564:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 565:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 566:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 567:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 568:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 569:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 570:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 571:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 572:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 573:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 574:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 575:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 576:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 577:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 578:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 579:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 580:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 581:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 582:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 583:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 584:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 585:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 586:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 587:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 588:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 589:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 590:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 591:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 592:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 593:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 594:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 595:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 596:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 597:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 851              		.loc 1 597 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 16
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856 0000 80B4     		push	{r7}
 857              	.LCFI42:
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 85B0     		sub	sp, sp, #20
 861              	.LCFI43:
 862              		.cfi_def_cfa_offset 24
 863 0004 00AF     		add	r7, sp, #0
 864              	.LCFI44:
 865              		.cfi_def_cfa_register 7
 866 0006 7860     		str	r0, [r7, #4]
 867 0008 F970     		strb	r1, [r7, #3]
 868 000a BA70     		strb	r2, [r7, #2]
 869 000c 7B70     		strb	r3, [r7, #1]
 598:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 870              		.loc 1 598 0
 871 000e 4FF00003 		mov	r3, #0
 872 0012 FB60     		str	r3, [r7, #12]
 873 0014 4FF00003 		mov	r3, #0
 874 0018 BB60     		str	r3, [r7, #8]
 599:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 600:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 601:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 602:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 603:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 604:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 605:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 875              		.loc 1 605 0
 876 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 877 001c 092B     		cmp	r3, #9
 878 001e 27D9     		bls	.L38
 606:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 607:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 608:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 879              		.loc 1 608 0
 880 0020 7B68     		ldr	r3, [r7, #4]
 881 0022 DB68     		ldr	r3, [r3, #12]
 882 0024 FB60     		str	r3, [r7, #12]
 609:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 610:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 883              		.loc 1 610 0
 884 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 885 0028 1346     		mov	r3, r2
 886 002a 4FEA4303 		lsl	r3, r3, #1
 887 002e 9B18     		adds	r3, r3, r2
 888 0030 A3F11E03 		sub	r3, r3, #30
 889 0034 4FF00702 		mov	r2, #7
 890 0038 02FA03F3 		lsl	r3, r2, r3
 891 003c BB60     		str	r3, [r7, #8]
 611:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 612:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 892              		.loc 1 612 0
 893 003e BB68     		ldr	r3, [r7, #8]
 894 0040 6FEA0303 		mvn	r3, r3
 895 0044 FA68     		ldr	r2, [r7, #12]
 896 0046 1340     		ands	r3, r3, r2
 897 0048 FB60     		str	r3, [r7, #12]
 613:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 614:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 898              		.loc 1 614 0
 899 004a 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 900 004c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 901 004e 1346     		mov	r3, r2
 902 0050 4FEA4303 		lsl	r3, r3, #1
 903 0054 9B18     		adds	r3, r3, r2
 904 0056 A3F11E03 		sub	r3, r3, #30
 905 005a 01FA03F3 		lsl	r3, r1, r3
 906 005e BB60     		str	r3, [r7, #8]
 615:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 616:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 907              		.loc 1 616 0
 908 0060 FA68     		ldr	r2, [r7, #12]
 909 0062 BB68     		ldr	r3, [r7, #8]
 910 0064 1343     		orrs	r3, r3, r2
 911 0066 FB60     		str	r3, [r7, #12]
 617:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 618:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 912              		.loc 1 618 0
 913 0068 7B68     		ldr	r3, [r7, #4]
 914 006a FA68     		ldr	r2, [r7, #12]
 915 006c DA60     		str	r2, [r3, #12]
 916 006e 22E0     		b	.L39
 917              	.L38:
 619:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 620:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 621:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 622:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 623:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 918              		.loc 1 623 0
 919 0070 7B68     		ldr	r3, [r7, #4]
 920 0072 1B69     		ldr	r3, [r3, #16]
 921 0074 FB60     		str	r3, [r7, #12]
 624:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 625:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 922              		.loc 1 625 0
 923 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 924 0078 1346     		mov	r3, r2
 925 007a 4FEA4303 		lsl	r3, r3, #1
 926 007e 9B18     		adds	r3, r3, r2
 927 0080 4FF00702 		mov	r2, #7
 928 0084 02FA03F3 		lsl	r3, r2, r3
 929 0088 BB60     		str	r3, [r7, #8]
 626:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 627:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 930              		.loc 1 627 0
 931 008a BB68     		ldr	r3, [r7, #8]
 932 008c 6FEA0303 		mvn	r3, r3
 933 0090 FA68     		ldr	r2, [r7, #12]
 934 0092 1340     		ands	r3, r3, r2
 935 0094 FB60     		str	r3, [r7, #12]
 628:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 629:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 936              		.loc 1 629 0
 937 0096 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 938 0098 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 939 009a 1346     		mov	r3, r2
 940 009c 4FEA4303 		lsl	r3, r3, #1
 941 00a0 9B18     		adds	r3, r3, r2
 942 00a2 01FA03F3 		lsl	r3, r1, r3
 943 00a6 BB60     		str	r3, [r7, #8]
 630:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 631:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 944              		.loc 1 631 0
 945 00a8 FA68     		ldr	r2, [r7, #12]
 946 00aa BB68     		ldr	r3, [r7, #8]
 947 00ac 1343     		orrs	r3, r3, r2
 948 00ae FB60     		str	r3, [r7, #12]
 632:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 633:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 949              		.loc 1 633 0
 950 00b0 7B68     		ldr	r3, [r7, #4]
 951 00b2 FA68     		ldr	r2, [r7, #12]
 952 00b4 1A61     		str	r2, [r3, #16]
 953              	.L39:
 634:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 635:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 636:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (Rank < 7)
 954              		.loc 1 636 0
 955 00b6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 956 00b8 062B     		cmp	r3, #6
 957 00ba 27D8     		bhi	.L40
 637:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 638:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 639:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 958              		.loc 1 639 0
 959 00bc 7B68     		ldr	r3, [r7, #4]
 960 00be 5B6B     		ldr	r3, [r3, #52]
 961 00c0 FB60     		str	r3, [r7, #12]
 640:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 641:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 962              		.loc 1 641 0
 963 00c2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 964 00c4 03F1FF32 		add	r2, r3, #-1
 965 00c8 1346     		mov	r3, r2
 966 00ca 4FEA8303 		lsl	r3, r3, #2
 967 00ce 9B18     		adds	r3, r3, r2
 968 00d0 4FF01F02 		mov	r2, #31
 969 00d4 02FA03F3 		lsl	r3, r2, r3
 970 00d8 BB60     		str	r3, [r7, #8]
 642:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 643:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 971              		.loc 1 643 0
 972 00da BB68     		ldr	r3, [r7, #8]
 973 00dc 6FEA0303 		mvn	r3, r3
 974 00e0 FA68     		ldr	r2, [r7, #12]
 975 00e2 1340     		ands	r3, r3, r2
 976 00e4 FB60     		str	r3, [r7, #12]
 644:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 645:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 977              		.loc 1 645 0
 978 00e6 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 979 00e8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 980 00ea 03F1FF32 		add	r2, r3, #-1
 981 00ee 1346     		mov	r3, r2
 982 00f0 4FEA8303 		lsl	r3, r3, #2
 983 00f4 9B18     		adds	r3, r3, r2
 984 00f6 01FA03F3 		lsl	r3, r1, r3
 985 00fa BB60     		str	r3, [r7, #8]
 646:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 647:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 986              		.loc 1 647 0
 987 00fc FA68     		ldr	r2, [r7, #12]
 988 00fe BB68     		ldr	r3, [r7, #8]
 989 0100 1343     		orrs	r3, r3, r2
 990 0102 FB60     		str	r3, [r7, #12]
 648:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 649:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 991              		.loc 1 649 0
 992 0104 7B68     		ldr	r3, [r7, #4]
 993 0106 FA68     		ldr	r2, [r7, #12]
 994 0108 5A63     		str	r2, [r3, #52]
 995 010a 51E0     		b	.L37
 996              	.L40:
 650:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 651:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 652:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 997              		.loc 1 652 0
 998 010c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 999 010e 0C2B     		cmp	r3, #12
 1000 0110 27D8     		bhi	.L42
 653:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 654:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 655:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 1001              		.loc 1 655 0
 1002 0112 7B68     		ldr	r3, [r7, #4]
 1003 0114 1B6B     		ldr	r3, [r3, #48]
 1004 0116 FB60     		str	r3, [r7, #12]
 656:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 657:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 1005              		.loc 1 657 0
 1006 0118 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1007 011a 1346     		mov	r3, r2
 1008 011c 4FEA8303 		lsl	r3, r3, #2
 1009 0120 9B18     		adds	r3, r3, r2
 1010 0122 A3F12303 		sub	r3, r3, #35
 1011 0126 4FF01F02 		mov	r2, #31
 1012 012a 02FA03F3 		lsl	r3, r2, r3
 1013 012e BB60     		str	r3, [r7, #8]
 658:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 659:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1014              		.loc 1 659 0
 1015 0130 BB68     		ldr	r3, [r7, #8]
 1016 0132 6FEA0303 		mvn	r3, r3
 1017 0136 FA68     		ldr	r2, [r7, #12]
 1018 0138 1340     		ands	r3, r3, r2
 1019 013a FB60     		str	r3, [r7, #12]
 660:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 661:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1020              		.loc 1 661 0
 1021 013c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1022 013e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1023 0140 1346     		mov	r3, r2
 1024 0142 4FEA8303 		lsl	r3, r3, #2
 1025 0146 9B18     		adds	r3, r3, r2
 1026 0148 A3F12303 		sub	r3, r3, #35
 1027 014c 01FA03F3 		lsl	r3, r1, r3
 1028 0150 BB60     		str	r3, [r7, #8]
 662:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 663:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1029              		.loc 1 663 0
 1030 0152 FA68     		ldr	r2, [r7, #12]
 1031 0154 BB68     		ldr	r3, [r7, #8]
 1032 0156 1343     		orrs	r3, r3, r2
 1033 0158 FB60     		str	r3, [r7, #12]
 664:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 665:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1034              		.loc 1 665 0
 1035 015a 7B68     		ldr	r3, [r7, #4]
 1036 015c FA68     		ldr	r2, [r7, #12]
 1037 015e 1A63     		str	r2, [r3, #48]
 1038 0160 26E0     		b	.L37
 1039              	.L42:
 666:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 667:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 668:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 669:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 670:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 671:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1040              		.loc 1 671 0
 1041 0162 7B68     		ldr	r3, [r7, #4]
 1042 0164 DB6A     		ldr	r3, [r3, #44]
 1043 0166 FB60     		str	r3, [r7, #12]
 672:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 673:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1044              		.loc 1 673 0
 1045 0168 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1046 016a 1346     		mov	r3, r2
 1047 016c 4FEA8303 		lsl	r3, r3, #2
 1048 0170 9B18     		adds	r3, r3, r2
 1049 0172 A3F14103 		sub	r3, r3, #65
 1050 0176 4FF01F02 		mov	r2, #31
 1051 017a 02FA03F3 		lsl	r3, r2, r3
 1052 017e BB60     		str	r3, [r7, #8]
 674:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 675:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1053              		.loc 1 675 0
 1054 0180 BB68     		ldr	r3, [r7, #8]
 1055 0182 6FEA0303 		mvn	r3, r3
 1056 0186 FA68     		ldr	r2, [r7, #12]
 1057 0188 1340     		ands	r3, r3, r2
 1058 018a FB60     		str	r3, [r7, #12]
 676:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 677:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1059              		.loc 1 677 0
 1060 018c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1061 018e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1062 0190 1346     		mov	r3, r2
 1063 0192 4FEA8303 		lsl	r3, r3, #2
 1064 0196 9B18     		adds	r3, r3, r2
 1065 0198 A3F14103 		sub	r3, r3, #65
 1066 019c 01FA03F3 		lsl	r3, r1, r3
 1067 01a0 BB60     		str	r3, [r7, #8]
 678:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 679:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1068              		.loc 1 679 0
 1069 01a2 FA68     		ldr	r2, [r7, #12]
 1070 01a4 BB68     		ldr	r3, [r7, #8]
 1071 01a6 1343     		orrs	r3, r3, r2
 1072 01a8 FB60     		str	r3, [r7, #12]
 680:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 681:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1073              		.loc 1 681 0
 1074 01aa 7B68     		ldr	r3, [r7, #4]
 1075 01ac FA68     		ldr	r2, [r7, #12]
 1076 01ae DA62     		str	r2, [r3, #44]
 1077              	.L37:
 682:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 683:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1078              		.loc 1 683 0
 1079 01b0 07F11407 		add	r7, r7, #20
 1080 01b4 BD46     		mov	sp, r7
 1081 01b6 80BC     		pop	{r7}
 1082 01b8 7047     		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE70:
 1086 01ba 00BF     		.section	.text.ADC_ExternalTrigConvCmd,"ax",%progbits
 1087              		.align	2
 1088              		.global	ADC_ExternalTrigConvCmd
 1089              		.thumb
 1090              		.thumb_func
 1092              	ADC_ExternalTrigConvCmd:
 1093              	.LFB71:
 684:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 685:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 686:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 687:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 688:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 689:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 690:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 691:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 692:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 693:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1094              		.loc 1 693 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 80B4     		push	{r7}
 1100              	.LCFI45:
 1101              		.cfi_def_cfa_offset 4
 1102              		.cfi_offset 7, -4
 1103 0002 83B0     		sub	sp, sp, #12
 1104              	.LCFI46:
 1105              		.cfi_def_cfa_offset 16
 1106 0004 00AF     		add	r7, sp, #0
 1107              	.LCFI47:
 1108              		.cfi_def_cfa_register 7
 1109 0006 7860     		str	r0, [r7, #4]
 1110 0008 0B46     		mov	r3, r1
 1111 000a FB70     		strb	r3, [r7, #3]
 694:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 695:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 696:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 697:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1112              		.loc 1 697 0
 1113 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1114 000e 002B     		cmp	r3, #0
 1115 0010 06D0     		beq	.L44
 698:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 699:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 700:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 1116              		.loc 1 700 0
 1117 0012 7B68     		ldr	r3, [r7, #4]
 1118 0014 9B68     		ldr	r3, [r3, #8]
 1119 0016 43F48012 		orr	r2, r3, #1048576
 1120 001a 7B68     		ldr	r3, [r7, #4]
 1121 001c 9A60     		str	r2, [r3, #8]
 1122 001e 05E0     		b	.L43
 1123              	.L44:
 701:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 702:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 703:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 704:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 705:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 1124              		.loc 1 705 0
 1125 0020 7B68     		ldr	r3, [r7, #4]
 1126 0022 9B68     		ldr	r3, [r3, #8]
 1127 0024 23F48012 		bic	r2, r3, #1048576
 1128 0028 7B68     		ldr	r3, [r7, #4]
 1129 002a 9A60     		str	r2, [r3, #8]
 1130              	.L43:
 706:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 707:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1131              		.loc 1 707 0
 1132 002c 07F10C07 		add	r7, r7, #12
 1133 0030 BD46     		mov	sp, r7
 1134 0032 80BC     		pop	{r7}
 1135 0034 7047     		bx	lr
 1136              		.cfi_endproc
 1137              	.LFE71:
 1139 0036 00BF     		.section	.text.ADC_GetConversionValue,"ax",%progbits
 1140              		.align	2
 1141              		.global	ADC_GetConversionValue
 1142              		.thumb
 1143              		.thumb_func
 1145              	ADC_GetConversionValue:
 1146              	.LFB72:
 708:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 709:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 710:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 711:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 712:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 713:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 714:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 715:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1147              		.loc 1 715 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152 0000 80B4     		push	{r7}
 1153              	.LCFI48:
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 7, -4
 1156 0002 83B0     		sub	sp, sp, #12
 1157              	.LCFI49:
 1158              		.cfi_def_cfa_offset 16
 1159 0004 00AF     		add	r7, sp, #0
 1160              	.LCFI50:
 1161              		.cfi_def_cfa_register 7
 1162 0006 7860     		str	r0, [r7, #4]
 716:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 717:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 718:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 719:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 1163              		.loc 1 719 0
 1164 0008 7B68     		ldr	r3, [r7, #4]
 1165 000a DB6C     		ldr	r3, [r3, #76]
 1166 000c 9BB2     		uxth	r3, r3
 720:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1167              		.loc 1 720 0
 1168 000e 1846     		mov	r0, r3
 1169 0010 07F10C07 		add	r7, r7, #12
 1170 0014 BD46     		mov	sp, r7
 1171 0016 80BC     		pop	{r7}
 1172 0018 7047     		bx	lr
 1173              		.cfi_endproc
 1174              	.LFE72:
 1176 001a 00BF     		.section	.text.ADC_GetDualModeConversionValue,"ax",%progbits
 1177              		.align	2
 1178              		.global	ADC_GetDualModeConversionValue
 1179              		.thumb
 1180              		.thumb_func
 1182              	ADC_GetDualModeConversionValue:
 1183              	.LFB73:
 721:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 722:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 723:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 724:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 725:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 726:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 727:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1184              		.loc 1 727 0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 1, uses_anonymous_args = 0
 1188              		@ link register save eliminated.
 1189 0000 80B4     		push	{r7}
 1190              	.LCFI51:
 1191              		.cfi_def_cfa_offset 4
 1192              		.cfi_offset 7, -4
 1193 0002 00AF     		add	r7, sp, #0
 1194              	.LCFI52:
 1195              		.cfi_def_cfa_register 7
 728:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 729:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 1196              		.loc 1 729 0
 1197 0004 42F24C43 		movw	r3, #9292
 1198 0008 C4F20103 		movt	r3, 16385
 1199 000c 1B68     		ldr	r3, [r3, #0]
 730:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1200              		.loc 1 730 0
 1201 000e 1846     		mov	r0, r3
 1202 0010 BD46     		mov	sp, r7
 1203 0012 80BC     		pop	{r7}
 1204 0014 7047     		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE73:
 1208 0016 00BF     		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 1209              		.align	2
 1210              		.global	ADC_AutoInjectedConvCmd
 1211              		.thumb
 1212              		.thumb_func
 1214              	ADC_AutoInjectedConvCmd:
 1215              	.LFB74:
 731:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 732:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 733:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 734:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 735:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 736:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 737:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 738:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 739:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 740:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 741:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1216              		.loc 1 741 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221 0000 80B4     		push	{r7}
 1222              	.LCFI53:
 1223              		.cfi_def_cfa_offset 4
 1224              		.cfi_offset 7, -4
 1225 0002 83B0     		sub	sp, sp, #12
 1226              	.LCFI54:
 1227              		.cfi_def_cfa_offset 16
 1228 0004 00AF     		add	r7, sp, #0
 1229              	.LCFI55:
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 1232 0008 0B46     		mov	r3, r1
 1233 000a FB70     		strb	r3, [r7, #3]
 742:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 743:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 744:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 745:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1234              		.loc 1 745 0
 1235 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1236 000e 002B     		cmp	r3, #0
 1237 0010 06D0     		beq	.L51
 746:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 747:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 748:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 1238              		.loc 1 748 0
 1239 0012 7B68     		ldr	r3, [r7, #4]
 1240 0014 5B68     		ldr	r3, [r3, #4]
 1241 0016 43F48062 		orr	r2, r3, #1024
 1242 001a 7B68     		ldr	r3, [r7, #4]
 1243 001c 5A60     		str	r2, [r3, #4]
 1244 001e 05E0     		b	.L50
 1245              	.L51:
 749:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 750:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 751:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 752:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 753:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 1246              		.loc 1 753 0
 1247 0020 7B68     		ldr	r3, [r7, #4]
 1248 0022 5B68     		ldr	r3, [r3, #4]
 1249 0024 23F48062 		bic	r2, r3, #1024
 1250 0028 7B68     		ldr	r3, [r7, #4]
 1251 002a 5A60     		str	r2, [r3, #4]
 1252              	.L50:
 754:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 755:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1253              		.loc 1 755 0
 1254 002c 07F10C07 		add	r7, r7, #12
 1255 0030 BD46     		mov	sp, r7
 1256 0032 80BC     		pop	{r7}
 1257 0034 7047     		bx	lr
 1258              		.cfi_endproc
 1259              	.LFE74:
 1261 0036 00BF     		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 1262              		.align	2
 1263              		.global	ADC_InjectedDiscModeCmd
 1264              		.thumb
 1265              		.thumb_func
 1267              	ADC_InjectedDiscModeCmd:
 1268              	.LFB75:
 756:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 757:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 758:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 759:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 760:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 761:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 762:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on injected group channel.
 763:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 764:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 765:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 766:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 767:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1269              		.loc 1 767 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 8
 1272              		@ frame_needed = 1, uses_anonymous_args = 0
 1273              		@ link register save eliminated.
 1274 0000 80B4     		push	{r7}
 1275              	.LCFI56:
 1276              		.cfi_def_cfa_offset 4
 1277              		.cfi_offset 7, -4
 1278 0002 83B0     		sub	sp, sp, #12
 1279              	.LCFI57:
 1280              		.cfi_def_cfa_offset 16
 1281 0004 00AF     		add	r7, sp, #0
 1282              	.LCFI58:
 1283              		.cfi_def_cfa_register 7
 1284 0006 7860     		str	r0, [r7, #4]
 1285 0008 0B46     		mov	r3, r1
 1286 000a FB70     		strb	r3, [r7, #3]
 768:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 769:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 770:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 771:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1287              		.loc 1 771 0
 1288 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1289 000e 002B     		cmp	r3, #0
 1290 0010 06D0     		beq	.L54
 772:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 773:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 774:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 1291              		.loc 1 774 0
 1292 0012 7B68     		ldr	r3, [r7, #4]
 1293 0014 5B68     		ldr	r3, [r3, #4]
 1294 0016 43F48052 		orr	r2, r3, #4096
 1295 001a 7B68     		ldr	r3, [r7, #4]
 1296 001c 5A60     		str	r2, [r3, #4]
 1297 001e 05E0     		b	.L53
 1298              	.L54:
 775:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 776:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 777:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 778:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 779:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 1299              		.loc 1 779 0
 1300 0020 7B68     		ldr	r3, [r7, #4]
 1301 0022 5B68     		ldr	r3, [r3, #4]
 1302 0024 23F48052 		bic	r2, r3, #4096
 1303 0028 7B68     		ldr	r3, [r7, #4]
 1304 002a 5A60     		str	r2, [r3, #4]
 1305              	.L53:
 780:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 781:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1306              		.loc 1 781 0
 1307 002c 07F10C07 		add	r7, r7, #12
 1308 0030 BD46     		mov	sp, r7
 1309 0032 80BC     		pop	{r7}
 1310 0034 7047     		bx	lr
 1311              		.cfi_endproc
 1312              	.LFE75:
 1314 0036 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 1315              		.align	2
 1316              		.global	ADC_ExternalTrigInjectedConvConfig
 1317              		.thumb
 1318              		.thumb_func
 1320              	ADC_ExternalTrigInjectedConvConfig:
 1321              	.LFB76:
 782:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 783:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 784:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 785:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 786:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 787:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 788:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 789:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 790:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 791:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 792:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 793:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 794:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 795:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 796:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 797:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 798:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 799:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 800:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 801:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 802:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 803:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 804:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 805:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 806:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1322              		.loc 1 806 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 16
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 1327 0000 80B4     		push	{r7}
 1328              	.LCFI59:
 1329              		.cfi_def_cfa_offset 4
 1330              		.cfi_offset 7, -4
 1331 0002 85B0     		sub	sp, sp, #20
 1332              	.LCFI60:
 1333              		.cfi_def_cfa_offset 24
 1334 0004 00AF     		add	r7, sp, #0
 1335              	.LCFI61:
 1336              		.cfi_def_cfa_register 7
 1337 0006 7860     		str	r0, [r7, #4]
 1338 0008 3960     		str	r1, [r7, #0]
 807:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1339              		.loc 1 807 0
 1340 000a 4FF00003 		mov	r3, #0
 1341 000e FB60     		str	r3, [r7, #12]
 808:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 809:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 810:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 811:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 812:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 1342              		.loc 1 812 0
 1343 0010 7B68     		ldr	r3, [r7, #4]
 1344 0012 9B68     		ldr	r3, [r3, #8]
 1345 0014 FB60     		str	r3, [r7, #12]
 813:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 814:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 1346              		.loc 1 814 0
 1347 0016 FB68     		ldr	r3, [r7, #12]
 1348 0018 23F4E043 		bic	r3, r3, #28672
 1349 001c FB60     		str	r3, [r7, #12]
 815:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 816:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1350              		.loc 1 816 0
 1351 001e FA68     		ldr	r2, [r7, #12]
 1352 0020 3B68     		ldr	r3, [r7, #0]
 1353 0022 1343     		orrs	r3, r3, r2
 1354 0024 FB60     		str	r3, [r7, #12]
 817:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 818:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 1355              		.loc 1 818 0
 1356 0026 7B68     		ldr	r3, [r7, #4]
 1357 0028 FA68     		ldr	r2, [r7, #12]
 1358 002a 9A60     		str	r2, [r3, #8]
 819:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1359              		.loc 1 819 0
 1360 002c 07F11407 		add	r7, r7, #20
 1361 0030 BD46     		mov	sp, r7
 1362 0032 80BC     		pop	{r7}
 1363 0034 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE76:
 1367 0036 00BF     		.section	.text.ADC_ExternalTrigInjectedConvCmd,"ax",%progbits
 1368              		.align	2
 1369              		.global	ADC_ExternalTrigInjectedConvCmd
 1370              		.thumb
 1371              		.thumb_func
 1373              	ADC_ExternalTrigInjectedConvCmd:
 1374              	.LFB77:
 820:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 821:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 822:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 823:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         external trigger
 824:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 825:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 826:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         injected conversion.
 827:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 828:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 829:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 830:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 831:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1375              		.loc 1 831 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              	.LCFI62:
 1382              		.cfi_def_cfa_offset 4
 1383              		.cfi_offset 7, -4
 1384 0002 83B0     		sub	sp, sp, #12
 1385              	.LCFI63:
 1386              		.cfi_def_cfa_offset 16
 1387 0004 00AF     		add	r7, sp, #0
 1388              	.LCFI64:
 1389              		.cfi_def_cfa_register 7
 1390 0006 7860     		str	r0, [r7, #4]
 1391 0008 0B46     		mov	r3, r1
 1392 000a FB70     		strb	r3, [r7, #3]
 832:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 833:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 834:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 835:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1393              		.loc 1 835 0
 1394 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1395 000e 002B     		cmp	r3, #0
 1396 0010 06D0     		beq	.L58
 836:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 837:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 838:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 1397              		.loc 1 838 0
 1398 0012 7B68     		ldr	r3, [r7, #4]
 1399 0014 9B68     		ldr	r3, [r3, #8]
 1400 0016 43F40042 		orr	r2, r3, #32768
 1401 001a 7B68     		ldr	r3, [r7, #4]
 1402 001c 9A60     		str	r2, [r3, #8]
 1403 001e 05E0     		b	.L57
 1404              	.L58:
 839:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 840:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 841:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 842:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 843:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 1405              		.loc 1 843 0
 1406 0020 7B68     		ldr	r3, [r7, #4]
 1407 0022 9B68     		ldr	r3, [r3, #8]
 1408 0024 23F40042 		bic	r2, r3, #32768
 1409 0028 7B68     		ldr	r3, [r7, #4]
 1410 002a 9A60     		str	r2, [r3, #8]
 1411              	.L57:
 844:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 845:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1412              		.loc 1 845 0
 1413 002c 07F10C07 		add	r7, r7, #12
 1414 0030 BD46     		mov	sp, r7
 1415 0032 80BC     		pop	{r7}
 1416 0034 7047     		bx	lr
 1417              		.cfi_endproc
 1418              	.LFE77:
 1420 0036 00BF     		.section	.text.ADC_SoftwareStartInjectedConvCmd,"ax",%progbits
 1421              		.align	2
 1422              		.global	ADC_SoftwareStartInjectedConvCmd
 1423              		.thumb
 1424              		.thumb_func
 1426              	ADC_SoftwareStartInjectedConvCmd:
 1427              	.LFB78:
 846:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 847:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 848:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 849:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channels conversion.
 850:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 851:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 852:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 853:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 854:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 855:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 856:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1428              		.loc 1 856 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 8
 1431              		@ frame_needed = 1, uses_anonymous_args = 0
 1432              		@ link register save eliminated.
 1433 0000 80B4     		push	{r7}
 1434              	.LCFI65:
 1435              		.cfi_def_cfa_offset 4
 1436              		.cfi_offset 7, -4
 1437 0002 83B0     		sub	sp, sp, #12
 1438              	.LCFI66:
 1439              		.cfi_def_cfa_offset 16
 1440 0004 00AF     		add	r7, sp, #0
 1441              	.LCFI67:
 1442              		.cfi_def_cfa_register 7
 1443 0006 7860     		str	r0, [r7, #4]
 1444 0008 0B46     		mov	r3, r1
 1445 000a FB70     		strb	r3, [r7, #3]
 857:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 858:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 859:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 860:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1446              		.loc 1 860 0
 1447 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1448 000e 002B     		cmp	r3, #0
 1449 0010 06D0     		beq	.L61
 861:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 862:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 863:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 1450              		.loc 1 864 0
 1451 0012 7B68     		ldr	r3, [r7, #4]
 1452 0014 9B68     		ldr	r3, [r3, #8]
 1453 0016 43F40212 		orr	r2, r3, #2129920
 1454 001a 7B68     		ldr	r3, [r7, #4]
 1455 001c 9A60     		str	r2, [r3, #8]
 1456 001e 05E0     		b	.L60
 1457              	.L61:
 865:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 866:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 867:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 868:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 869:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 870:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 1458              		.loc 1 870 0
 1459 0020 7B68     		ldr	r3, [r7, #4]
 1460 0022 9B68     		ldr	r3, [r3, #8]
 1461 0024 23F40212 		bic	r2, r3, #2129920
 1462 0028 7B68     		ldr	r3, [r7, #4]
 1463 002a 9A60     		str	r2, [r3, #8]
 1464              	.L60:
 871:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 872:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1465              		.loc 1 872 0
 1466 002c 07F10C07 		add	r7, r7, #12
 1467 0030 BD46     		mov	sp, r7
 1468 0032 80BC     		pop	{r7}
 1469 0034 7047     		bx	lr
 1470              		.cfi_endproc
 1471              	.LFE78:
 1473 0036 00BF     		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 1474              		.align	2
 1475              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1476              		.thumb
 1477              		.thumb_func
 1479              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1480              	.LFB79:
 873:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 874:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 875:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 876:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 877:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 878:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 879:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 880:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1481              		.loc 1 880 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 16
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 1486 0000 80B4     		push	{r7}
 1487              	.LCFI68:
 1488              		.cfi_def_cfa_offset 4
 1489              		.cfi_offset 7, -4
 1490 0002 85B0     		sub	sp, sp, #20
 1491              	.LCFI69:
 1492              		.cfi_def_cfa_offset 24
 1493 0004 00AF     		add	r7, sp, #0
 1494              	.LCFI70:
 1495              		.cfi_def_cfa_register 7
 1496 0006 7860     		str	r0, [r7, #4]
 881:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1497              		.loc 1 881 0
 1498 0008 4FF00003 		mov	r3, #0
 1499 000c FB73     		strb	r3, [r7, #15]
 882:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 883:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 884:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 885:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 1500              		.loc 1 885 0
 1501 000e 7B68     		ldr	r3, [r7, #4]
 1502 0010 9B68     		ldr	r3, [r3, #8]
 1503 0012 03F40013 		and	r3, r3, #2097152
 1504 0016 002B     		cmp	r3, #0
 1505 0018 03D0     		beq	.L64
 886:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 887:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 888:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1506              		.loc 1 888 0
 1507 001a 4FF00103 		mov	r3, #1
 1508 001e FB73     		strb	r3, [r7, #15]
 1509 0020 02E0     		b	.L65
 1510              	.L64:
 889:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 890:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 891:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 892:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 893:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1511              		.loc 1 893 0
 1512 0022 4FF00003 		mov	r3, #0
 1513 0026 FB73     		strb	r3, [r7, #15]
 1514              	.L65:
 894:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 895:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 896:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 1515              		.loc 1 896 0
 1516 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 897:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1517              		.loc 1 897 0
 1518 002a 1846     		mov	r0, r3
 1519 002c 07F11407 		add	r7, r7, #20
 1520 0030 BD46     		mov	sp, r7
 1521 0032 80BC     		pop	{r7}
 1522 0034 7047     		bx	lr
 1523              		.cfi_endproc
 1524              	.LFE79:
 1526 0036 00BF     		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 1527              		.align	2
 1528              		.global	ADC_InjectedChannelConfig
 1529              		.thumb
 1530              		.thumb_func
 1532              	ADC_InjectedChannelConfig:
 1533              	.LFB80:
 898:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 899:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 900:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 901:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 902:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 903:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 904:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 905:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 906:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 907:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 908:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 909:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 910:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 911:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 912:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 913:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 914:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 915:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 916:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 917:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 918:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 919:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 920:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 921:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 922:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 923:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 924:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 925:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 926:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 927:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 928:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 929:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 930:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 931:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 932:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 933:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 934:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 935:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 936:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 937:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1534              		.loc 1 937 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 24
 1537              		@ frame_needed = 1, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 1539 0000 80B4     		push	{r7}
 1540              	.LCFI71:
 1541              		.cfi_def_cfa_offset 4
 1542              		.cfi_offset 7, -4
 1543 0002 87B0     		sub	sp, sp, #28
 1544              	.LCFI72:
 1545              		.cfi_def_cfa_offset 32
 1546 0004 00AF     		add	r7, sp, #0
 1547              	.LCFI73:
 1548              		.cfi_def_cfa_register 7
 1549 0006 7860     		str	r0, [r7, #4]
 1550 0008 F970     		strb	r1, [r7, #3]
 1551 000a BA70     		strb	r2, [r7, #2]
 1552 000c 7B70     		strb	r3, [r7, #1]
 938:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1553              		.loc 1 938 0
 1554 000e 4FF00003 		mov	r3, #0
 1555 0012 7B61     		str	r3, [r7, #20]
 1556 0014 4FF00003 		mov	r3, #0
 1557 0018 3B61     		str	r3, [r7, #16]
 1558 001a 4FF00003 		mov	r3, #0
 1559 001e FB60     		str	r3, [r7, #12]
 939:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 940:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 941:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 942:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 943:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 944:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 945:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1560              		.loc 1 945 0
 1561 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1562 0022 092B     		cmp	r3, #9
 1563 0024 27D9     		bls	.L68
 946:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 947:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 948:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1564              		.loc 1 948 0
 1565 0026 7B68     		ldr	r3, [r7, #4]
 1566 0028 DB68     		ldr	r3, [r3, #12]
 1567 002a 7B61     		str	r3, [r7, #20]
 949:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 950:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 1568              		.loc 1 950 0
 1569 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1570 002e 1346     		mov	r3, r2
 1571 0030 4FEA4303 		lsl	r3, r3, #1
 1572 0034 9B18     		adds	r3, r3, r2
 1573 0036 A3F11E03 		sub	r3, r3, #30
 1574 003a 4FF00702 		mov	r2, #7
 1575 003e 02FA03F3 		lsl	r3, r2, r3
 1576 0042 3B61     		str	r3, [r7, #16]
 951:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 952:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1577              		.loc 1 952 0
 1578 0044 3B69     		ldr	r3, [r7, #16]
 1579 0046 6FEA0303 		mvn	r3, r3
 1580 004a 7A69     		ldr	r2, [r7, #20]
 1581 004c 1340     		ands	r3, r3, r2
 1582 004e 7B61     		str	r3, [r7, #20]
 953:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 954:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1583              		.loc 1 954 0
 1584 0050 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1585 0052 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1586 0054 1346     		mov	r3, r2
 1587 0056 4FEA4303 		lsl	r3, r3, #1
 1588 005a 9B18     		adds	r3, r3, r2
 1589 005c A3F11E03 		sub	r3, r3, #30
 1590 0060 01FA03F3 		lsl	r3, r1, r3
 1591 0064 3B61     		str	r3, [r7, #16]
 955:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 956:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1592              		.loc 1 956 0
 1593 0066 7A69     		ldr	r2, [r7, #20]
 1594 0068 3B69     		ldr	r3, [r7, #16]
 1595 006a 1343     		orrs	r3, r3, r2
 1596 006c 7B61     		str	r3, [r7, #20]
 957:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 958:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1597              		.loc 1 958 0
 1598 006e 7B68     		ldr	r3, [r7, #4]
 1599 0070 7A69     		ldr	r2, [r7, #20]
 1600 0072 DA60     		str	r2, [r3, #12]
 1601 0074 22E0     		b	.L69
 1602              	.L68:
 959:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 960:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 961:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 962:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 963:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1603              		.loc 1 963 0
 1604 0076 7B68     		ldr	r3, [r7, #4]
 1605 0078 1B69     		ldr	r3, [r3, #16]
 1606 007a 7B61     		str	r3, [r7, #20]
 964:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 965:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1607              		.loc 1 965 0
 1608 007c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1609 007e 1346     		mov	r3, r2
 1610 0080 4FEA4303 		lsl	r3, r3, #1
 1611 0084 9B18     		adds	r3, r3, r2
 1612 0086 4FF00702 		mov	r2, #7
 1613 008a 02FA03F3 		lsl	r3, r2, r3
 1614 008e 3B61     		str	r3, [r7, #16]
 966:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 967:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1615              		.loc 1 967 0
 1616 0090 3B69     		ldr	r3, [r7, #16]
 1617 0092 6FEA0303 		mvn	r3, r3
 1618 0096 7A69     		ldr	r2, [r7, #20]
 1619 0098 1340     		ands	r3, r3, r2
 1620 009a 7B61     		str	r3, [r7, #20]
 968:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 969:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1621              		.loc 1 969 0
 1622 009c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1623 009e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1624 00a0 1346     		mov	r3, r2
 1625 00a2 4FEA4303 		lsl	r3, r3, #1
 1626 00a6 9B18     		adds	r3, r3, r2
 1627 00a8 01FA03F3 		lsl	r3, r1, r3
 1628 00ac 3B61     		str	r3, [r7, #16]
 970:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 971:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1629              		.loc 1 971 0
 1630 00ae 7A69     		ldr	r2, [r7, #20]
 1631 00b0 3B69     		ldr	r3, [r7, #16]
 1632 00b2 1343     		orrs	r3, r3, r2
 1633 00b4 7B61     		str	r3, [r7, #20]
 972:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 973:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1634              		.loc 1 973 0
 1635 00b6 7B68     		ldr	r3, [r7, #4]
 1636 00b8 7A69     		ldr	r2, [r7, #20]
 1637 00ba 1A61     		str	r2, [r3, #16]
 1638              	.L69:
 974:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 975:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Rank configuration */
 976:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 977:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1639              		.loc 1 977 0
 1640 00bc 7B68     		ldr	r3, [r7, #4]
 1641 00be 9B6B     		ldr	r3, [r3, #56]
 1642 00c0 7B61     		str	r3, [r7, #20]
 978:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 979:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1643              		.loc 1 979 0
 1644 00c2 7B69     		ldr	r3, [r7, #20]
 1645 00c4 03F44013 		and	r3, r3, #3145728
 1646 00c8 4FEA1353 		lsr	r3, r3, #20
 1647 00cc FB60     		str	r3, [r7, #12]
 980:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 981:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1648              		.loc 1 981 0
 1649 00ce FB68     		ldr	r3, [r7, #12]
 1650 00d0 DBB2     		uxtb	r3, r3
 1651 00d2 6FEA0303 		mvn	r3, r3
 1652 00d6 DAB2     		uxtb	r2, r3
 1653 00d8 BB78     		ldrb	r3, [r7, #2]
 1654 00da D318     		adds	r3, r2, r3
 1655 00dc DBB2     		uxtb	r3, r3
 1656 00de 03F10303 		add	r3, r3, #3
 1657 00e2 DBB2     		uxtb	r3, r3
 1658 00e4 1A46     		mov	r2, r3
 1659 00e6 1346     		mov	r3, r2
 1660 00e8 4FEA8303 		lsl	r3, r3, #2
 1661 00ec 9B18     		adds	r3, r3, r2
 1662 00ee 4FF01F02 		mov	r2, #31
 1663 00f2 02FA03F3 		lsl	r3, r2, r3
 1664 00f6 3B61     		str	r3, [r7, #16]
 982:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 983:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1665              		.loc 1 983 0
 1666 00f8 3B69     		ldr	r3, [r7, #16]
 1667 00fa 6FEA0303 		mvn	r3, r3
 1668 00fe 7A69     		ldr	r2, [r7, #20]
 1669 0100 1340     		ands	r3, r3, r2
 1670 0102 7B61     		str	r3, [r7, #20]
 984:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 985:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1671              		.loc 1 985 0
 1672 0104 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1673 0106 FB68     		ldr	r3, [r7, #12]
 1674 0108 DBB2     		uxtb	r3, r3
 1675 010a 6FEA0303 		mvn	r3, r3
 1676 010e DAB2     		uxtb	r2, r3
 1677 0110 BB78     		ldrb	r3, [r7, #2]
 1678 0112 D318     		adds	r3, r2, r3
 1679 0114 DBB2     		uxtb	r3, r3
 1680 0116 03F10303 		add	r3, r3, #3
 1681 011a DBB2     		uxtb	r3, r3
 1682 011c 1A46     		mov	r2, r3
 1683 011e 1346     		mov	r3, r2
 1684 0120 4FEA8303 		lsl	r3, r3, #2
 1685 0124 9B18     		adds	r3, r3, r2
 1686 0126 01FA03F3 		lsl	r3, r1, r3
 1687 012a 3B61     		str	r3, [r7, #16]
 986:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 987:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1688              		.loc 1 987 0
 1689 012c 7A69     		ldr	r2, [r7, #20]
 1690 012e 3B69     		ldr	r3, [r7, #16]
 1691 0130 1343     		orrs	r3, r3, r2
 1692 0132 7B61     		str	r3, [r7, #20]
 988:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 989:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1693              		.loc 1 989 0
 1694 0134 7B68     		ldr	r3, [r7, #4]
 1695 0136 7A69     		ldr	r2, [r7, #20]
 1696 0138 9A63     		str	r2, [r3, #56]
 990:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1697              		.loc 1 990 0
 1698 013a 07F11C07 		add	r7, r7, #28
 1699 013e BD46     		mov	sp, r7
 1700 0140 80BC     		pop	{r7}
 1701 0142 7047     		bx	lr
 1702              		.cfi_endproc
 1703              	.LFE80:
 1705              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1706              		.align	2
 1707              		.global	ADC_InjectedSequencerLengthConfig
 1708              		.thumb
 1709              		.thumb_func
 1711              	ADC_InjectedSequencerLengthConfig:
 1712              	.LFB81:
 991:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 992:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 993:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 994:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 995:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 996:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 997:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 998:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 999:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1000:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1713              		.loc 1 1000 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 16
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 1718 0000 80B4     		push	{r7}
 1719              	.LCFI74:
 1720              		.cfi_def_cfa_offset 4
 1721              		.cfi_offset 7, -4
 1722 0002 85B0     		sub	sp, sp, #20
 1723              	.LCFI75:
 1724              		.cfi_def_cfa_offset 24
 1725 0004 00AF     		add	r7, sp, #0
 1726              	.LCFI76:
 1727              		.cfi_def_cfa_register 7
 1728 0006 7860     		str	r0, [r7, #4]
 1729 0008 0B46     		mov	r3, r1
 1730 000a FB70     		strb	r3, [r7, #3]
1001:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1731              		.loc 1 1001 0
 1732 000c 4FF00003 		mov	r3, #0
 1733 0010 FB60     		str	r3, [r7, #12]
1002:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1734              		.loc 1 1002 0
 1735 0012 4FF00003 		mov	r3, #0
 1736 0016 BB60     		str	r3, [r7, #8]
1003:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1004:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1005:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1006:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1007:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1008:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1737              		.loc 1 1008 0
 1738 0018 7B68     		ldr	r3, [r7, #4]
 1739 001a 9B6B     		ldr	r3, [r3, #56]
 1740 001c FB60     		str	r3, [r7, #12]
1009:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1010:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1741              		.loc 1 1010 0
 1742 001e FB68     		ldr	r3, [r7, #12]
 1743 0020 23F44013 		bic	r3, r3, #3145728
 1744 0024 FB60     		str	r3, [r7, #12]
1011:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1012:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1745              		.loc 1 1012 0
 1746 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1747 0028 03F1FF33 		add	r3, r3, #-1
 1748 002c BB60     		str	r3, [r7, #8]
1013:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1749              		.loc 1 1013 0
 1750 002e BB68     		ldr	r3, [r7, #8]
 1751 0030 4FEA0353 		lsl	r3, r3, #20
 1752 0034 FA68     		ldr	r2, [r7, #12]
 1753 0036 1343     		orrs	r3, r3, r2
 1754 0038 FB60     		str	r3, [r7, #12]
1014:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1015:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1755              		.loc 1 1015 0
 1756 003a 7B68     		ldr	r3, [r7, #4]
 1757 003c FA68     		ldr	r2, [r7, #12]
 1758 003e 9A63     		str	r2, [r3, #56]
1016:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1759              		.loc 1 1016 0
 1760 0040 07F11407 		add	r7, r7, #20
 1761 0044 BD46     		mov	sp, r7
 1762 0046 80BC     		pop	{r7}
 1763 0048 7047     		bx	lr
 1764              		.cfi_endproc
 1765              	.LFE81:
 1767 004a 00BF     		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1768              		.align	2
 1769              		.global	ADC_SetInjectedOffset
 1770              		.thumb
 1771              		.thumb_func
 1773              	ADC_SetInjectedOffset:
 1774              	.LFB82:
1017:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1018:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1019:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1020:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1021:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1022:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1023:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1024:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1025:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1026:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1027:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1028:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1029:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1030:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1031:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1032:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1775              		.loc 1 1032 0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 16
 1778              		@ frame_needed = 1, uses_anonymous_args = 0
 1779              		@ link register save eliminated.
 1780 0000 80B4     		push	{r7}
 1781              	.LCFI77:
 1782              		.cfi_def_cfa_offset 4
 1783              		.cfi_offset 7, -4
 1784 0002 85B0     		sub	sp, sp, #20
 1785              	.LCFI78:
 1786              		.cfi_def_cfa_offset 24
 1787 0004 00AF     		add	r7, sp, #0
 1788              	.LCFI79:
 1789              		.cfi_def_cfa_register 7
 1790 0006 7860     		str	r0, [r7, #4]
 1791 0008 1346     		mov	r3, r2
 1792 000a 0A46     		mov	r2, r1
 1793 000c FA70     		strb	r2, [r7, #3]
 1794 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1033:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1795              		.loc 1 1033 0
 1796 0010 4FF00003 		mov	r3, #0
 1797 0014 FB60     		str	r3, [r7, #12]
1034:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1035:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1036:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1037:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1038:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1039:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1040:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1798              		.loc 1 1040 0
 1799 0016 7B68     		ldr	r3, [r7, #4]
 1800 0018 FB60     		str	r3, [r7, #12]
1041:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1801              		.loc 1 1041 0
 1802 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1803 001c FB68     		ldr	r3, [r7, #12]
 1804 001e D318     		adds	r3, r2, r3
 1805 0020 FB60     		str	r3, [r7, #12]
1042:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1043:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1044:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1806              		.loc 1 1044 0
 1807 0022 FB68     		ldr	r3, [r7, #12]
 1808 0024 3A88     		ldrh	r2, [r7, #0]
 1809 0026 1A60     		str	r2, [r3, #0]
1045:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1810              		.loc 1 1045 0
 1811 0028 07F11407 		add	r7, r7, #20
 1812 002c BD46     		mov	sp, r7
 1813 002e 80BC     		pop	{r7}
 1814 0030 7047     		bx	lr
 1815              		.cfi_endproc
 1816              	.LFE82:
 1818 0032 00BF     		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1819              		.align	2
 1820              		.global	ADC_GetInjectedConversionValue
 1821              		.thumb
 1822              		.thumb_func
 1824              	ADC_GetInjectedConversionValue:
 1825              	.LFB83:
1046:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1047:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1048:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1049:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1050:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1051:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1052:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1053:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1054:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1055:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1056:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1057:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1058:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1059:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1826              		.loc 1 1059 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 16
 1829              		@ frame_needed = 1, uses_anonymous_args = 0
 1830              		@ link register save eliminated.
 1831 0000 80B4     		push	{r7}
 1832              	.LCFI80:
 1833              		.cfi_def_cfa_offset 4
 1834              		.cfi_offset 7, -4
 1835 0002 85B0     		sub	sp, sp, #20
 1836              	.LCFI81:
 1837              		.cfi_def_cfa_offset 24
 1838 0004 00AF     		add	r7, sp, #0
 1839              	.LCFI82:
 1840              		.cfi_def_cfa_register 7
 1841 0006 7860     		str	r0, [r7, #4]
 1842 0008 0B46     		mov	r3, r1
 1843 000a FB70     		strb	r3, [r7, #3]
1060:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1844              		.loc 1 1060 0
 1845 000c 4FF00003 		mov	r3, #0
 1846 0010 FB60     		str	r3, [r7, #12]
1061:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1062:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1063:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1064:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1065:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1066:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1847              		.loc 1 1066 0
 1848 0012 7B68     		ldr	r3, [r7, #4]
 1849 0014 FB60     		str	r3, [r7, #12]
1067:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1850              		.loc 1 1067 0
 1851 0016 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1852 0018 FB68     		ldr	r3, [r7, #12]
 1853 001a D318     		adds	r3, r2, r3
 1854 001c 03F12803 		add	r3, r3, #40
 1855 0020 FB60     		str	r3, [r7, #12]
1068:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1069:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1070:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1856              		.loc 1 1070 0
 1857 0022 FB68     		ldr	r3, [r7, #12]
 1858 0024 1B68     		ldr	r3, [r3, #0]
 1859 0026 9BB2     		uxth	r3, r3
1071:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1860              		.loc 1 1071 0
 1861 0028 1846     		mov	r0, r3
 1862 002a 07F11407 		add	r7, r7, #20
 1863 002e BD46     		mov	sp, r7
 1864 0030 80BC     		pop	{r7}
 1865 0032 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE83:
 1869              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 1870              		.align	2
 1871              		.global	ADC_AnalogWatchdogCmd
 1872              		.thumb
 1873              		.thumb_func
 1875              	ADC_AnalogWatchdogCmd:
 1876              	.LFB84:
1072:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1073:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1074:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1075:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         or injected channels
1076:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1077:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1078:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1079:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1080:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1081:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1082:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1083:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1084:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1085:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1086:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None	  
1087:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1088:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1089:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1877              		.loc 1 1089 0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 16
 1880              		@ frame_needed = 1, uses_anonymous_args = 0
 1881              		@ link register save eliminated.
 1882 0000 80B4     		push	{r7}
 1883              	.LCFI83:
 1884              		.cfi_def_cfa_offset 4
 1885              		.cfi_offset 7, -4
 1886 0002 85B0     		sub	sp, sp, #20
 1887              	.LCFI84:
 1888              		.cfi_def_cfa_offset 24
 1889 0004 00AF     		add	r7, sp, #0
 1890              	.LCFI85:
 1891              		.cfi_def_cfa_register 7
 1892 0006 7860     		str	r0, [r7, #4]
 1893 0008 3960     		str	r1, [r7, #0]
1090:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1894              		.loc 1 1090 0
 1895 000a 4FF00003 		mov	r3, #0
 1896 000e FB60     		str	r3, [r7, #12]
1091:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1092:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1093:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1094:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1095:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1897              		.loc 1 1095 0
 1898 0010 7B68     		ldr	r3, [r7, #4]
 1899 0012 5B68     		ldr	r3, [r3, #4]
 1900 0014 FB60     		str	r3, [r7, #12]
1096:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1097:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1901              		.loc 1 1097 0
 1902 0016 FB68     		ldr	r3, [r7, #12]
 1903 0018 23F44003 		bic	r3, r3, #12582912
 1904 001c 23F40073 		bic	r3, r3, #512
 1905 0020 FB60     		str	r3, [r7, #12]
1098:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1099:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1906              		.loc 1 1099 0
 1907 0022 FA68     		ldr	r2, [r7, #12]
 1908 0024 3B68     		ldr	r3, [r7, #0]
 1909 0026 1343     		orrs	r3, r3, r2
 1910 0028 FB60     		str	r3, [r7, #12]
1100:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1101:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1911              		.loc 1 1101 0
 1912 002a 7B68     		ldr	r3, [r7, #4]
 1913 002c FA68     		ldr	r2, [r7, #12]
 1914 002e 5A60     		str	r2, [r3, #4]
1102:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1915              		.loc 1 1102 0
 1916 0030 07F11407 		add	r7, r7, #20
 1917 0034 BD46     		mov	sp, r7
 1918 0036 80BC     		pop	{r7}
 1919 0038 7047     		bx	lr
 1920              		.cfi_endproc
 1921              	.LFE84:
 1923 003a 00BF     		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 1924              		.align	2
 1925              		.global	ADC_AnalogWatchdogThresholdsConfig
 1926              		.thumb
 1927              		.thumb_func
 1929              	ADC_AnalogWatchdogThresholdsConfig:
 1930              	.LFB85:
1103:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1104:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1105:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1106:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1107:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1108:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1109:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1110:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1111:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1112:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1113:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1114:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1115:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1931              		.loc 1 1115 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 8
 1934              		@ frame_needed = 1, uses_anonymous_args = 0
 1935              		@ link register save eliminated.
 1936 0000 80B4     		push	{r7}
 1937              	.LCFI86:
 1938              		.cfi_def_cfa_offset 4
 1939              		.cfi_offset 7, -4
 1940 0002 83B0     		sub	sp, sp, #12
 1941              	.LCFI87:
 1942              		.cfi_def_cfa_offset 16
 1943 0004 00AF     		add	r7, sp, #0
 1944              	.LCFI88:
 1945              		.cfi_def_cfa_register 7
 1946 0006 7860     		str	r0, [r7, #4]
 1947 0008 1346     		mov	r3, r2
 1948 000a 0A46     		mov	r2, r1	@ movhi
 1949 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1950 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1116:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1117:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1118:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1119:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1120:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1121:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 1951              		.loc 1 1121 0
 1952 0010 7A88     		ldrh	r2, [r7, #2]
 1953 0012 7B68     		ldr	r3, [r7, #4]
 1954 0014 5A62     		str	r2, [r3, #36]
1122:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1123:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 1955              		.loc 1 1123 0
 1956 0016 3A88     		ldrh	r2, [r7, #0]
 1957 0018 7B68     		ldr	r3, [r7, #4]
 1958 001a 9A62     		str	r2, [r3, #40]
1124:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1959              		.loc 1 1124 0
 1960 001c 07F10C07 		add	r7, r7, #12
 1961 0020 BD46     		mov	sp, r7
 1962 0022 80BC     		pop	{r7}
 1963 0024 7047     		bx	lr
 1964              		.cfi_endproc
 1965              	.LFE85:
 1967 0026 00BF     		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 1968              		.align	2
 1969              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1970              		.thumb
 1971              		.thumb_func
 1973              	ADC_AnalogWatchdogSingleChannelConfig:
 1974              	.LFB86:
1125:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1126:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1127:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1128:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1129:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1130:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1131:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1132:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1133:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1134:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1135:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1136:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1137:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1138:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1139:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1140:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1141:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1142:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1143:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1144:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1145:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1146:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1147:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1148:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1149:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1150:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1151:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1152:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1975              		.loc 1 1152 0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 16
 1978              		@ frame_needed = 1, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
 1980 0000 80B4     		push	{r7}
 1981              	.LCFI89:
 1982              		.cfi_def_cfa_offset 4
 1983              		.cfi_offset 7, -4
 1984 0002 85B0     		sub	sp, sp, #20
 1985              	.LCFI90:
 1986              		.cfi_def_cfa_offset 24
 1987 0004 00AF     		add	r7, sp, #0
 1988              	.LCFI91:
 1989              		.cfi_def_cfa_register 7
 1990 0006 7860     		str	r0, [r7, #4]
 1991 0008 0B46     		mov	r3, r1
 1992 000a FB70     		strb	r3, [r7, #3]
1153:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1993              		.loc 1 1153 0
 1994 000c 4FF00003 		mov	r3, #0
 1995 0010 FB60     		str	r3, [r7, #12]
1154:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1155:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1156:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1157:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1158:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1996              		.loc 1 1158 0
 1997 0012 7B68     		ldr	r3, [r7, #4]
 1998 0014 5B68     		ldr	r3, [r3, #4]
 1999 0016 FB60     		str	r3, [r7, #12]
1159:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1160:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 2000              		.loc 1 1160 0
 2001 0018 FB68     		ldr	r3, [r7, #12]
 2002 001a 23F01F03 		bic	r3, r3, #31
 2003 001e FB60     		str	r3, [r7, #12]
1161:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1162:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 2004              		.loc 1 1162 0
 2005 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2006 0022 FA68     		ldr	r2, [r7, #12]
 2007 0024 1343     		orrs	r3, r3, r2
 2008 0026 FB60     		str	r3, [r7, #12]
1163:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1164:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 2009              		.loc 1 1164 0
 2010 0028 7B68     		ldr	r3, [r7, #4]
 2011 002a FA68     		ldr	r2, [r7, #12]
 2012 002c 5A60     		str	r2, [r3, #4]
1165:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2013              		.loc 1 1165 0
 2014 002e 07F11407 		add	r7, r7, #20
 2015 0032 BD46     		mov	sp, r7
 2016 0034 80BC     		pop	{r7}
 2017 0036 7047     		bx	lr
 2018              		.cfi_endproc
 2019              	.LFE86:
 2021              		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 2022              		.align	2
 2023              		.global	ADC_TempSensorVrefintCmd
 2024              		.thumb
 2025              		.thumb_func
 2027              	ADC_TempSensorVrefintCmd:
 2028              	.LFB87:
1166:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1167:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1168:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1169:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1170:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1171:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1172:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1173:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1174:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2029              		.loc 1 1174 0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 8
 2032              		@ frame_needed = 1, uses_anonymous_args = 0
 2033              		@ link register save eliminated.
 2034 0000 80B4     		push	{r7}
 2035              	.LCFI92:
 2036              		.cfi_def_cfa_offset 4
 2037              		.cfi_offset 7, -4
 2038 0002 83B0     		sub	sp, sp, #12
 2039              	.LCFI93:
 2040              		.cfi_def_cfa_offset 16
 2041 0004 00AF     		add	r7, sp, #0
 2042              	.LCFI94:
 2043              		.cfi_def_cfa_register 7
 2044 0006 0346     		mov	r3, r0
 2045 0008 FB71     		strb	r3, [r7, #7]
1175:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1176:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1177:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2046              		.loc 1 1177 0
 2047 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2048 000c 002B     		cmp	r3, #0
 2049 000e 0CD0     		beq	.L78
1178:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1179:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1180:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 2050              		.loc 1 1180 0
 2051 0010 4FF41053 		mov	r3, #9216
 2052 0014 C4F20103 		movt	r3, 16385
 2053 0018 4FF41052 		mov	r2, #9216
 2054 001c C4F20102 		movt	r2, 16385
 2055 0020 9268     		ldr	r2, [r2, #8]
 2056 0022 42F40002 		orr	r2, r2, #8388608
 2057 0026 9A60     		str	r2, [r3, #8]
 2058 0028 0BE0     		b	.L77
 2059              	.L78:
1181:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1182:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1183:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1184:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1185:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 2060              		.loc 1 1185 0
 2061 002a 4FF41053 		mov	r3, #9216
 2062 002e C4F20103 		movt	r3, 16385
 2063 0032 4FF41052 		mov	r2, #9216
 2064 0036 C4F20102 		movt	r2, 16385
 2065 003a 9268     		ldr	r2, [r2, #8]
 2066 003c 22F40002 		bic	r2, r2, #8388608
 2067 0040 9A60     		str	r2, [r3, #8]
 2068              	.L77:
1186:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1187:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2069              		.loc 1 1187 0
 2070 0042 07F10C07 		add	r7, r7, #12
 2071 0046 BD46     		mov	sp, r7
 2072 0048 80BC     		pop	{r7}
 2073 004a 7047     		bx	lr
 2074              		.cfi_endproc
 2075              	.LFE87:
 2077              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 2078              		.align	2
 2079              		.global	ADC_GetFlagStatus
 2080              		.thumb
 2081              		.thumb_func
 2083              	ADC_GetFlagStatus:
 2084              	.LFB88:
1188:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1189:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1190:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1191:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1192:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1193:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1194:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1195:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1196:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1197:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1198:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1199:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1200:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1201:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1202:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2085              		.loc 1 1202 0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 16
 2088              		@ frame_needed = 1, uses_anonymous_args = 0
 2089              		@ link register save eliminated.
 2090 0000 80B4     		push	{r7}
 2091              	.LCFI95:
 2092              		.cfi_def_cfa_offset 4
 2093              		.cfi_offset 7, -4
 2094 0002 85B0     		sub	sp, sp, #20
 2095              	.LCFI96:
 2096              		.cfi_def_cfa_offset 24
 2097 0004 00AF     		add	r7, sp, #0
 2098              	.LCFI97:
 2099              		.cfi_def_cfa_register 7
 2100 0006 7860     		str	r0, [r7, #4]
 2101 0008 0B46     		mov	r3, r1
 2102 000a FB70     		strb	r3, [r7, #3]
1203:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2103              		.loc 1 1203 0
 2104 000c 4FF00003 		mov	r3, #0
 2105 0010 FB73     		strb	r3, [r7, #15]
1204:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1205:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1206:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1207:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1208:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 2106              		.loc 1 1208 0
 2107 0012 7B68     		ldr	r3, [r7, #4]
 2108 0014 1A68     		ldr	r2, [r3, #0]
 2109 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2110 0018 1340     		ands	r3, r3, r2
 2111 001a 002B     		cmp	r3, #0
 2112 001c 03D0     		beq	.L81
1209:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1210:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1211:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2113              		.loc 1 1211 0
 2114 001e 4FF00103 		mov	r3, #1
 2115 0022 FB73     		strb	r3, [r7, #15]
 2116 0024 02E0     		b	.L82
 2117              	.L81:
1212:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1213:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1214:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1215:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1216:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2118              		.loc 1 1216 0
 2119 0026 4FF00003 		mov	r3, #0
 2120 002a FB73     		strb	r3, [r7, #15]
 2121              	.L82:
1217:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1218:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1219:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2122              		.loc 1 1219 0
 2123 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1220:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2124              		.loc 1 1220 0
 2125 002e 1846     		mov	r0, r3
 2126 0030 07F11407 		add	r7, r7, #20
 2127 0034 BD46     		mov	sp, r7
 2128 0036 80BC     		pop	{r7}
 2129 0038 7047     		bx	lr
 2130              		.cfi_endproc
 2131              	.LFE88:
 2133 003a 00BF     		.section	.text.ADC_ClearFlag,"ax",%progbits
 2134              		.align	2
 2135              		.global	ADC_ClearFlag
 2136              		.thumb
 2137              		.thumb_func
 2139              	ADC_ClearFlag:
 2140              	.LFB89:
1221:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1222:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1223:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1224:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1225:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1226:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1227:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1228:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1229:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1230:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1231:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1232:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1233:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1234:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1235:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2141              		.loc 1 1235 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 8
 2144              		@ frame_needed = 1, uses_anonymous_args = 0
 2145              		@ link register save eliminated.
 2146 0000 80B4     		push	{r7}
 2147              	.LCFI98:
 2148              		.cfi_def_cfa_offset 4
 2149              		.cfi_offset 7, -4
 2150 0002 83B0     		sub	sp, sp, #12
 2151              	.LCFI99:
 2152              		.cfi_def_cfa_offset 16
 2153 0004 00AF     		add	r7, sp, #0
 2154              	.LCFI100:
 2155              		.cfi_def_cfa_register 7
 2156 0006 7860     		str	r0, [r7, #4]
 2157 0008 0B46     		mov	r3, r1
 2158 000a FB70     		strb	r3, [r7, #3]
1236:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1237:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1238:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1239:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1240:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 2159              		.loc 1 1240 0
 2160 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2161 000e 6FEA0302 		mvn	r2, r3
 2162 0012 7B68     		ldr	r3, [r7, #4]
 2163 0014 1A60     		str	r2, [r3, #0]
1241:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2164              		.loc 1 1241 0
 2165 0016 07F10C07 		add	r7, r7, #12
 2166 001a BD46     		mov	sp, r7
 2167 001c 80BC     		pop	{r7}
 2168 001e 7047     		bx	lr
 2169              		.cfi_endproc
 2170              	.LFE89:
 2172              		.section	.text.ADC_GetITStatus,"ax",%progbits
 2173              		.align	2
 2174              		.global	ADC_GetITStatus
 2175              		.thumb
 2176              		.thumb_func
 2178              	ADC_GetITStatus:
 2179              	.LFB90:
1242:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1243:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1244:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1245:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1246:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1247:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1248:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1249:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1250:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1251:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1252:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1253:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1254:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2180              		.loc 1 1254 0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 24
 2183              		@ frame_needed = 1, uses_anonymous_args = 0
 2184              		@ link register save eliminated.
 2185 0000 80B4     		push	{r7}
 2186              	.LCFI101:
 2187              		.cfi_def_cfa_offset 4
 2188              		.cfi_offset 7, -4
 2189 0002 87B0     		sub	sp, sp, #28
 2190              	.LCFI102:
 2191              		.cfi_def_cfa_offset 32
 2192 0004 00AF     		add	r7, sp, #0
 2193              	.LCFI103:
 2194              		.cfi_def_cfa_register 7
 2195 0006 7860     		str	r0, [r7, #4]
 2196 0008 0B46     		mov	r3, r1
 2197 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1255:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 2198              		.loc 1 1255 0
 2199 000c 4FF00003 		mov	r3, #0
 2200 0010 FB75     		strb	r3, [r7, #23]
1256:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 2201              		.loc 1 1256 0
 2202 0012 4FF00003 		mov	r3, #0
 2203 0016 3B61     		str	r3, [r7, #16]
 2204 0018 4FF00003 		mov	r3, #0
 2205 001c FB60     		str	r3, [r7, #12]
1257:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1258:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1259:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1260:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1261:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 2206              		.loc 1 1261 0
 2207 001e 7B88     		ldrh	r3, [r7, #2]
 2208 0020 4FEA1323 		lsr	r3, r3, #8
 2209 0024 9BB2     		uxth	r3, r3
 2210 0026 3B61     		str	r3, [r7, #16]
1262:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1263:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 2211              		.loc 1 1263 0
 2212 0028 7B68     		ldr	r3, [r7, #4]
 2213 002a 5A68     		ldr	r2, [r3, #4]
 2214 002c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2215 002e DBB2     		uxtb	r3, r3
 2216 0030 1340     		ands	r3, r3, r2
 2217 0032 FB60     		str	r3, [r7, #12]
1264:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1265:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 2218              		.loc 1 1265 0
 2219 0034 7B68     		ldr	r3, [r7, #4]
 2220 0036 1A68     		ldr	r2, [r3, #0]
 2221 0038 3B69     		ldr	r3, [r7, #16]
 2222 003a 1340     		ands	r3, r3, r2
 2223 003c 002B     		cmp	r3, #0
 2224 003e 06D0     		beq	.L86
 2225              		.loc 1 1265 0 is_stmt 0 discriminator 1
 2226 0040 FB68     		ldr	r3, [r7, #12]
 2227 0042 002B     		cmp	r3, #0
 2228 0044 03D0     		beq	.L86
1266:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1267:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1268:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2229              		.loc 1 1268 0 is_stmt 1
 2230 0046 4FF00103 		mov	r3, #1
 2231 004a FB75     		strb	r3, [r7, #23]
 2232 004c 02E0     		b	.L87
 2233              	.L86:
1269:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1270:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1271:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1272:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1273:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2234              		.loc 1 1273 0
 2235 004e 4FF00003 		mov	r3, #0
 2236 0052 FB75     		strb	r3, [r7, #23]
 2237              	.L87:
1274:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1275:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1276:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2238              		.loc 1 1276 0
 2239 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1277:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2240              		.loc 1 1277 0
 2241 0056 1846     		mov	r0, r3
 2242 0058 07F11C07 		add	r7, r7, #28
 2243 005c BD46     		mov	sp, r7
 2244 005e 80BC     		pop	{r7}
 2245 0060 7047     		bx	lr
 2246              		.cfi_endproc
 2247              	.LFE90:
 2249 0062 00BF     		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 2250              		.align	2
 2251              		.global	ADC_ClearITPendingBit
 2252              		.thumb
 2253              		.thumb_func
 2255              	ADC_ClearITPendingBit:
 2256              	.LFB91:
1278:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1279:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1280:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1281:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1282:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1283:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1284:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1285:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1286:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1287:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1288:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1289:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1290:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2257              		.loc 1 1290 0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 16
 2260              		@ frame_needed = 1, uses_anonymous_args = 0
 2261              		@ link register save eliminated.
 2262 0000 80B4     		push	{r7}
 2263              	.LCFI104:
 2264              		.cfi_def_cfa_offset 4
 2265              		.cfi_offset 7, -4
 2266 0002 85B0     		sub	sp, sp, #20
 2267              	.LCFI105:
 2268              		.cfi_def_cfa_offset 24
 2269 0004 00AF     		add	r7, sp, #0
 2270              	.LCFI106:
 2271              		.cfi_def_cfa_register 7
 2272 0006 7860     		str	r0, [r7, #4]
 2273 0008 0B46     		mov	r3, r1
 2274 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 2275              		.loc 1 1291 0
 2276 000c 4FF00003 		mov	r3, #0
 2277 0010 FB73     		strb	r3, [r7, #15]
1292:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1293:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1294:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1295:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1296:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 2278              		.loc 1 1296 0
 2279 0012 7B88     		ldrh	r3, [r7, #2]
 2280 0014 4FEA1323 		lsr	r3, r3, #8
 2281 0018 9BB2     		uxth	r3, r3
 2282 001a FB73     		strb	r3, [r7, #15]
1297:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1298:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 2283              		.loc 1 1298 0
 2284 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2285 001e 6FEA0302 		mvn	r2, r3
 2286 0022 7B68     		ldr	r3, [r7, #4]
 2287 0024 1A60     		str	r2, [r3, #0]
1299:../libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2288              		.loc 1 1299 0
 2289 0026 07F11407 		add	r7, r7, #20
 2290 002a BD46     		mov	sp, r7
 2291 002c 80BC     		pop	{r7}
 2292 002e 7047     		bx	lr
 2293              		.cfi_endproc
 2294              	.LFE91:
 2296              		.text
 2297              	.Letext0:
 2298              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 2299              		.file 3 "/Users/zac/code/spark/marvin/libraries/CMSIS/Device/ST/STM32F10x/Include/stm32f10x.h"
 2300              		.file 4 "/Users/zac/code/spark/marvin/libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_adc.h"
 2301              		.file 5 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_adc.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:19     .text.ADC_DeInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:24     .text.ADC_DeInit:0000000000000000 ADC_DeInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:98     .text.ADC_Init:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:103    .text.ADC_Init:0000000000000000 ADC_Init
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:215    .text.ADC_StructInit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:220    .text.ADC_StructInit:0000000000000000 ADC_StructInit
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:271    .text.ADC_Cmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:276    .text.ADC_Cmd:0000000000000000 ADC_Cmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:324    .text.ADC_DMACmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:329    .text.ADC_DMACmd:0000000000000000 ADC_DMACmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:377    .text.ADC_ITConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:382    .text.ADC_ITConfig:0000000000000000 ADC_ITConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:441    .text.ADC_ResetCalibration:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:446    .text.ADC_ResetCalibration:0000000000000000 ADC_ResetCalibration
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:479    .text.ADC_GetResetCalibrationStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:484    .text.ADC_GetResetCalibrationStatus:0000000000000000 ADC_GetResetCalibrationStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:532    .text.ADC_StartCalibration:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:537    .text.ADC_StartCalibration:0000000000000000 ADC_StartCalibration
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:570    .text.ADC_GetCalibrationStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:575    .text.ADC_GetCalibrationStatus:0000000000000000 ADC_GetCalibrationStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:623    .text.ADC_SoftwareStartConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:628    .text.ADC_SoftwareStartConvCmd:0000000000000000 ADC_SoftwareStartConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:676    .text.ADC_GetSoftwareStartConvStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:681    .text.ADC_GetSoftwareStartConvStatus:0000000000000000 ADC_GetSoftwareStartConvStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:729    .text.ADC_DiscModeChannelCountConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:734    .text.ADC_DiscModeChannelCountConfig:0000000000000000 ADC_DiscModeChannelCountConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:791    .text.ADC_DiscModeCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:796    .text.ADC_DiscModeCmd:0000000000000000 ADC_DiscModeCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:844    .text.ADC_RegularChannelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:849    .text.ADC_RegularChannelConfig:0000000000000000 ADC_RegularChannelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1087   .text.ADC_ExternalTrigConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1092   .text.ADC_ExternalTrigConvCmd:0000000000000000 ADC_ExternalTrigConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1140   .text.ADC_GetConversionValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1145   .text.ADC_GetConversionValue:0000000000000000 ADC_GetConversionValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1177   .text.ADC_GetDualModeConversionValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1182   .text.ADC_GetDualModeConversionValue:0000000000000000 ADC_GetDualModeConversionValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1209   .text.ADC_AutoInjectedConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1214   .text.ADC_AutoInjectedConvCmd:0000000000000000 ADC_AutoInjectedConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1262   .text.ADC_InjectedDiscModeCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1267   .text.ADC_InjectedDiscModeCmd:0000000000000000 ADC_InjectedDiscModeCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1315   .text.ADC_ExternalTrigInjectedConvConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1320   .text.ADC_ExternalTrigInjectedConvConfig:0000000000000000 ADC_ExternalTrigInjectedConvConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1368   .text.ADC_ExternalTrigInjectedConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1373   .text.ADC_ExternalTrigInjectedConvCmd:0000000000000000 ADC_ExternalTrigInjectedConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1421   .text.ADC_SoftwareStartInjectedConvCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1426   .text.ADC_SoftwareStartInjectedConvCmd:0000000000000000 ADC_SoftwareStartInjectedConvCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1474   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1479   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000000000000000 ADC_GetSoftwareStartInjectedConvCmdStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1527   .text.ADC_InjectedChannelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1532   .text.ADC_InjectedChannelConfig:0000000000000000 ADC_InjectedChannelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1706   .text.ADC_InjectedSequencerLengthConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1711   .text.ADC_InjectedSequencerLengthConfig:0000000000000000 ADC_InjectedSequencerLengthConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1768   .text.ADC_SetInjectedOffset:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1773   .text.ADC_SetInjectedOffset:0000000000000000 ADC_SetInjectedOffset
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1819   .text.ADC_GetInjectedConversionValue:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1824   .text.ADC_GetInjectedConversionValue:0000000000000000 ADC_GetInjectedConversionValue
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1870   .text.ADC_AnalogWatchdogCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1875   .text.ADC_AnalogWatchdogCmd:0000000000000000 ADC_AnalogWatchdogCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1924   .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1929   .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 ADC_AnalogWatchdogThresholdsConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1968   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:1973   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 ADC_AnalogWatchdogSingleChannelConfig
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2022   .text.ADC_TempSensorVrefintCmd:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2027   .text.ADC_TempSensorVrefintCmd:0000000000000000 ADC_TempSensorVrefintCmd
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2078   .text.ADC_GetFlagStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2083   .text.ADC_GetFlagStatus:0000000000000000 ADC_GetFlagStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2134   .text.ADC_ClearFlag:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2139   .text.ADC_ClearFlag:0000000000000000 ADC_ClearFlag
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2173   .text.ADC_GetITStatus:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2178   .text.ADC_GetITStatus:0000000000000000 ADC_GetITStatus
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2250   .text.ADC_ClearITPendingBit:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccU0aTpn.s:2255   .text.ADC_ClearITPendingBit:0000000000000000 ADC_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.64.07c104f22a887098a9ccb01471e84bcc
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
