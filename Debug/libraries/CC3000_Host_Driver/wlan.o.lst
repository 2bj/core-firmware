   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"wlan.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	tSLInformation,68,4
  19              		.comm	key,16,4
  20              		.comm	profileArray,67,4
  21              		.section	.text.SimpleLink_Init_Start,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	SimpleLink_Init_Start:
  27              	.LFB56:
  28              		.file 1 "../libraries/CC3000_Host_Driver/wlan.c"
   1:../libraries/CC3000_Host_Driver/wlan.c **** /*****************************************************************************
   2:../libraries/CC3000_Host_Driver/wlan.c **** *
   3:../libraries/CC3000_Host_Driver/wlan.c **** *  wlan.c  - CC3000 Host Driver Implementation.
   4:../libraries/CC3000_Host_Driver/wlan.c **** *  Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
   5:../libraries/CC3000_Host_Driver/wlan.c **** *
   6:../libraries/CC3000_Host_Driver/wlan.c **** *  Redistribution and use in source and binary forms, with or without
   7:../libraries/CC3000_Host_Driver/wlan.c **** *  modification, are permitted provided that the following conditions
   8:../libraries/CC3000_Host_Driver/wlan.c **** *  are met:
   9:../libraries/CC3000_Host_Driver/wlan.c **** *
  10:../libraries/CC3000_Host_Driver/wlan.c **** *    Redistributions of source code must retain the above copyright
  11:../libraries/CC3000_Host_Driver/wlan.c **** *    notice, this list of conditions and the following disclaimer.
  12:../libraries/CC3000_Host_Driver/wlan.c **** *
  13:../libraries/CC3000_Host_Driver/wlan.c **** *    Redistributions in binary form must reproduce the above copyright
  14:../libraries/CC3000_Host_Driver/wlan.c **** *    notice, this list of conditions and the following disclaimer in the
  15:../libraries/CC3000_Host_Driver/wlan.c **** *    documentation and/or other materials provided with the   
  16:../libraries/CC3000_Host_Driver/wlan.c **** *    distribution.
  17:../libraries/CC3000_Host_Driver/wlan.c **** *
  18:../libraries/CC3000_Host_Driver/wlan.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  19:../libraries/CC3000_Host_Driver/wlan.c **** *    its contributors may be used to endorse or promote products derived
  20:../libraries/CC3000_Host_Driver/wlan.c **** *    from this software without specific prior written permission.
  21:../libraries/CC3000_Host_Driver/wlan.c **** *
  22:../libraries/CC3000_Host_Driver/wlan.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  23:../libraries/CC3000_Host_Driver/wlan.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  24:../libraries/CC3000_Host_Driver/wlan.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  25:../libraries/CC3000_Host_Driver/wlan.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
  26:../libraries/CC3000_Host_Driver/wlan.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  27:../libraries/CC3000_Host_Driver/wlan.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  28:../libraries/CC3000_Host_Driver/wlan.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  29:../libraries/CC3000_Host_Driver/wlan.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  30:../libraries/CC3000_Host_Driver/wlan.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  31:../libraries/CC3000_Host_Driver/wlan.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
  32:../libraries/CC3000_Host_Driver/wlan.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../libraries/CC3000_Host_Driver/wlan.c **** *
  34:../libraries/CC3000_Host_Driver/wlan.c **** *****************************************************************************/
  35:../libraries/CC3000_Host_Driver/wlan.c **** 
  36:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
  37:../libraries/CC3000_Host_Driver/wlan.c **** //
  38:../libraries/CC3000_Host_Driver/wlan.c **** //! \addtogroup wlan_api
  39:../libraries/CC3000_Host_Driver/wlan.c **** //! @{
  40:../libraries/CC3000_Host_Driver/wlan.c **** //
  41:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
  42:../libraries/CC3000_Host_Driver/wlan.c **** #include <string.h>
  43:../libraries/CC3000_Host_Driver/wlan.c **** #include "wlan.h"
  44:../libraries/CC3000_Host_Driver/wlan.c **** #include "hci.h"
  45:../libraries/CC3000_Host_Driver/wlan.c **** #include "spi.h"
  46:../libraries/CC3000_Host_Driver/wlan.c **** #include "socket.h"
  47:../libraries/CC3000_Host_Driver/wlan.c **** #include "nvmem.h"
  48:../libraries/CC3000_Host_Driver/wlan.c **** #include "security.h"
  49:../libraries/CC3000_Host_Driver/wlan.c **** #include "evnt_handler.h"
  50:../libraries/CC3000_Host_Driver/wlan.c **** 
  51:../libraries/CC3000_Host_Driver/wlan.c **** 
  52:../libraries/CC3000_Host_Driver/wlan.c **** volatile sSimplLinkInformation tSLInformation;
  53:../libraries/CC3000_Host_Driver/wlan.c **** 
  54:../libraries/CC3000_Host_Driver/wlan.c **** #define SMART_CONFIG_PROFILE_SIZE		67		// 67 = 32 (max ssid) + 32 (max key) + 1 (SSID length) + 1 (
  55:../libraries/CC3000_Host_Driver/wlan.c **** 
  56:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_UNENCRYPTED_SMART_CONFIG
  57:../libraries/CC3000_Host_Driver/wlan.c **** unsigned char key[AES128_KEY_SIZE];	
  58:../libraries/CC3000_Host_Driver/wlan.c **** unsigned char profileArray[SMART_CONFIG_PROFILE_SIZE];
  59:../libraries/CC3000_Host_Driver/wlan.c **** #endif //CC3000_UNENCRYPTED_SMART_CONFIG
  60:../libraries/CC3000_Host_Driver/wlan.c **** 
  61:../libraries/CC3000_Host_Driver/wlan.c **** /* patches type */
  62:../libraries/CC3000_Host_Driver/wlan.c **** #define PATCHES_HOST_TYPE_WLAN_DRIVER   0x01
  63:../libraries/CC3000_Host_Driver/wlan.c **** #define PATCHES_HOST_TYPE_WLAN_FW       0x02
  64:../libraries/CC3000_Host_Driver/wlan.c **** #define PATCHES_HOST_TYPE_BOOTLOADER    0x03
  65:../libraries/CC3000_Host_Driver/wlan.c **** 
  66:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_SET_SCAN_PARAMS_INTERVAL_LIST_SIZE	(16)
  67:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_SIMPLE_CONFIG_PREFIX_LENGTH (3)
  68:../libraries/CC3000_Host_Driver/wlan.c **** #define ETH_ALEN								(6)
  69:../libraries/CC3000_Host_Driver/wlan.c **** #define MAXIMAL_SSID_LENGTH						(32)
  70:../libraries/CC3000_Host_Driver/wlan.c **** 
  71:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_PATCHES_REQUEST_DEFAULT		(0)
  72:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_PATCHES_REQUEST_FORCE_HOST	(1)
  73:../libraries/CC3000_Host_Driver/wlan.c **** #define SL_PATCHES_REQUEST_FORCE_NONE	(2)
  74:../libraries/CC3000_Host_Driver/wlan.c **** 
  75:../libraries/CC3000_Host_Driver/wlan.c **** 
  76:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_UNSEC (0)
  77:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_WEP	(1)
  78:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_WPA	(2)
  79:../libraries/CC3000_Host_Driver/wlan.c **** #define      WLAN_SEC_WPA2	(3)
  80:../libraries/CC3000_Host_Driver/wlan.c **** 
  81:../libraries/CC3000_Host_Driver/wlan.c **** 
  82:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SL_INIT_START_PARAMS_LEN			(1)
  83:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_PATCH_PARAMS_LENGTH				(8)
  84:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SET_CONNECTION_POLICY_PARAMS_LEN	(12)
  85:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_DEL_PROFILE_PARAMS_LEN				(4)
  86:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SET_MASK_PARAMS_LEN				(4)
  87:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SET_SCAN_PARAMS_LEN				(100)
  88:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_GET_SCAN_RESULTS_PARAMS_LEN		(4)
  89:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_ADD_PROFILE_NOSEC_PARAM_LEN		(24)			
  90:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_ADD_PROFILE_WEP_PARAM_LEN			(36)
  91:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_ADD_PROFILE_WPA_PARAM_LEN			(44)
  92:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_CONNECT_PARAM_LEN					(29)
  93:../libraries/CC3000_Host_Driver/wlan.c **** #define WLAN_SMART_CONFIG_START_PARAMS_LEN		(4)
  94:../libraries/CC3000_Host_Driver/wlan.c **** 
  95:../libraries/CC3000_Host_Driver/wlan.c **** 
  96:../libraries/CC3000_Host_Driver/wlan.c **** 
  97:../libraries/CC3000_Host_Driver/wlan.c **** 
  98:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
  99:../libraries/CC3000_Host_Driver/wlan.c **** //
 100:../libraries/CC3000_Host_Driver/wlan.c **** //!  SimpleLink_Init_Start
 101:../libraries/CC3000_Host_Driver/wlan.c **** //!
 102:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param  usPatchesAvailableAtHost  flag to indicate if patches available
 103:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    from host or from EEPROM. Due to the 
 104:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    fact the patches are burn to the EEPROM
 105:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    using the patch programmer utility, the 
 106:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    patches will be available from the EEPROM
 107:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    and not from the host.
 108:../libraries/CC3000_Host_Driver/wlan.c **** //!
 109:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   none
 110:../libraries/CC3000_Host_Driver/wlan.c **** //!
 111:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Send HCI_CMND_SIMPLE_LINK_START to CC3000
 112:../libraries/CC3000_Host_Driver/wlan.c **** //
 113:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 114:../libraries/CC3000_Host_Driver/wlan.c **** static void SimpleLink_Init_Start(unsigned short usPatchesAvailableAtHost)
 115:../libraries/CC3000_Host_Driver/wlan.c **** {
  29              		.loc 1 115 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 0346     		mov	r3, r0
  45 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 116:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 117:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 118:../libraries/CC3000_Host_Driver/wlan.c **** 	
 119:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
  46              		.loc 1 119 0
  47 000a 40F20003 		movw	r3, #:lower16:tSLInformation
  48 000e C0F20003 		movt	r3, #:upper16:tSLInformation
  49 0012 9B68     		ldr	r3, [r3, #8]
  50 0014 FB60     		str	r3, [r7, #12]
 120:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
  51              		.loc 1 120 0
  52 0016 FB68     		ldr	r3, [r7, #12]
  53 0018 03F10903 		add	r3, r3, #9
  54 001c BB60     		str	r3, [r7, #8]
 121:../libraries/CC3000_Host_Driver/wlan.c **** 	
 122:../libraries/CC3000_Host_Driver/wlan.c **** 	UINT8_TO_STREAM(args, ((usPatchesAvailableAtHost) ? SL_PATCHES_REQUEST_FORCE_HOST : SL_PATCHES_REQ
  55              		.loc 1 122 0
  56 001e FB88     		ldrh	r3, [r7, #6]
  57 0020 002B     		cmp	r3, #0
  58 0022 0CBF     		ite	eq
  59 0024 0023     		moveq	r3, #0
  60 0026 0123     		movne	r3, #1
  61 0028 DBB2     		uxtb	r3, r3
  62 002a 1A46     		mov	r2, r3
  63 002c BB68     		ldr	r3, [r7, #8]
  64 002e 1A70     		strb	r2, [r3, #0]
  65 0030 BB68     		ldr	r3, [r7, #8]
  66 0032 03F10103 		add	r3, r3, #1
  67 0036 BB60     		str	r3, [r7, #8]
 123:../libraries/CC3000_Host_Driver/wlan.c **** 	
 124:../libraries/CC3000_Host_Driver/wlan.c **** 	// IRQ Line asserted - send HCI_CMND_SIMPLE_LINK_START to CC3000
 125:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_SIMPLE_LINK_START, ptr, WLAN_SL_INIT_START_PARAMS_LEN);
  68              		.loc 1 125 0
  69 0038 4FF48040 		mov	r0, #16384
  70 003c F968     		ldr	r1, [r7, #12]
  71 003e 4FF00102 		mov	r2, #1
  72 0042 FFF7FEFF 		bl	hci_command_send
 126:../libraries/CC3000_Host_Driver/wlan.c **** 	
 127:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_SIMPLE_LINK_START, 0);
  73              		.loc 1 127 0
  74 0046 4FF48040 		mov	r0, #16384
  75 004a 4FF00001 		mov	r1, #0
  76 004e FFF7FEFF 		bl	SimpleLinkWaitEvent
 128:../libraries/CC3000_Host_Driver/wlan.c **** }
  77              		.loc 1 128 0
  78 0052 07F11007 		add	r7, r7, #16
  79 0056 BD46     		mov	sp, r7
  80 0058 80BD     		pop	{r7, pc}
  81              		.cfi_endproc
  82              	.LFE56:
  84 005a 00BF     		.section	.text.wlan_init,"ax",%progbits
  85              		.align	2
  86              		.global	wlan_init
  87              		.thumb
  88              		.thumb_func
  90              	wlan_init:
  91              	.LFB57:
 129:../libraries/CC3000_Host_Driver/wlan.c **** 
 130:../libraries/CC3000_Host_Driver/wlan.c **** 
 131:../libraries/CC3000_Host_Driver/wlan.c **** 
 132:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 133:../libraries/CC3000_Host_Driver/wlan.c **** //
 134:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_init
 135:../libraries/CC3000_Host_Driver/wlan.c **** //!
 136:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param  sWlanCB   Asynchronous events callback.  
 137:../libraries/CC3000_Host_Driver/wlan.c **** //!                    0 no event call back.
 138:../libraries/CC3000_Host_Driver/wlan.c **** //!                  -call back parameters:
 139:../libraries/CC3000_Host_Driver/wlan.c **** //!                   1) event_type: HCI_EVNT_WLAN_UNSOL_CONNECT connect event,
 140:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_UNSOL_DISCONNECT disconnect event,
 141:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_ASYNC_SIMPLE_CONFIG_DONE config done,
 142:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_UNSOL_DHCP dhcp report, 
 143:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_ASYNC_PING_REPORT ping report OR 
 144:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_KEEPALIVE keepalive.
 145:../libraries/CC3000_Host_Driver/wlan.c **** //!                   2) data: pointer to extra data that received by the event
 146:../libraries/CC3000_Host_Driver/wlan.c **** //!                     (NULL no data).
 147:../libraries/CC3000_Host_Driver/wlan.c **** //!                   3) length: data length.
 148:../libraries/CC3000_Host_Driver/wlan.c **** //!                  -Events with extra data:
 149:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_UNSOL_DHCP: 4 bytes IP, 4 bytes Mask, 
 150:../libraries/CC3000_Host_Driver/wlan.c **** //!                     4 bytes default gateway, 4 bytes DHCP server and 4 bytes
 151:../libraries/CC3000_Host_Driver/wlan.c **** //!                     for DNS server.
 152:../libraries/CC3000_Host_Driver/wlan.c **** //!                     HCI_EVNT_WLAN_ASYNC_PING_REPORT: 4 bytes Packets sent, 
 153:../libraries/CC3000_Host_Driver/wlan.c **** //!                     4 bytes Packets received, 4 bytes Min round time, 
 154:../libraries/CC3000_Host_Driver/wlan.c **** //!                     4 bytes Max round time and 4 bytes for Avg round time.
 155:../libraries/CC3000_Host_Driver/wlan.c **** //!
 156:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sFWPatches  0 no patch or pointer to FW patches 
 157:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sDriverPatches  0 no patch or pointer to driver patches
 158:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sBootLoaderPatches  0 no patch or pointer to bootloader patches
 159:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sReadWlanInterruptPin    init callback. the callback read wlan 
 160:../libraries/CC3000_Host_Driver/wlan.c **** //!            interrupt status.
 161:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sWlanInterruptEnable   init callback. the callback enable wlan 
 162:../libraries/CC3000_Host_Driver/wlan.c **** //!            interrupt.
 163:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sWlanInterruptDisable   init callback. the callback disable wlan
 164:../libraries/CC3000_Host_Driver/wlan.c **** //!            interrupt.
 165:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sWriteWlanPin      init callback. the callback write value 
 166:../libraries/CC3000_Host_Driver/wlan.c **** //!            to device pin.  
 167:../libraries/CC3000_Host_Driver/wlan.c **** //!
 168:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   none
 169:../libraries/CC3000_Host_Driver/wlan.c **** //!
 170:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa       wlan_set_event_mask , wlan_start , wlan_stop 
 171:../libraries/CC3000_Host_Driver/wlan.c **** //!
 172:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Initialize wlan driver
 173:../libraries/CC3000_Host_Driver/wlan.c **** //!
 174:../libraries/CC3000_Host_Driver/wlan.c **** //!  @warning This function must be called before ANY other wlan driver function
 175:../libraries/CC3000_Host_Driver/wlan.c **** //
 176:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 177:../libraries/CC3000_Host_Driver/wlan.c **** 
 178:../libraries/CC3000_Host_Driver/wlan.c **** void wlan_init(		tWlanCB	 	sWlanCB,
 179:../libraries/CC3000_Host_Driver/wlan.c **** 							 tFWPatches sFWPatches,
 180:../libraries/CC3000_Host_Driver/wlan.c **** 							 tDriverPatches sDriverPatches,
 181:../libraries/CC3000_Host_Driver/wlan.c **** 							 tBootLoaderPatches sBootLoaderPatches,
 182:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWlanReadInteruptPin  sReadWlanInterruptPin,
 183:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWlanInterruptEnable  sWlanInterruptEnable,
 184:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWlanInterruptDisable sWlanInterruptDisable,
 185:../libraries/CC3000_Host_Driver/wlan.c **** 							 tWriteWlanPin         sWriteWlanPin)
 186:../libraries/CC3000_Host_Driver/wlan.c **** {
  92              		.loc 1 186 0
  93              		.cfi_startproc
  94              		@ args = 16, pretend = 0, frame = 16
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              	.LCFI3:
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 7, -4
 101 0002 85B0     		sub	sp, sp, #20
 102              	.LCFI4:
 103              		.cfi_def_cfa_offset 24
 104 0004 00AF     		add	r7, sp, #0
 105              	.LCFI5:
 106              		.cfi_def_cfa_register 7
 107 0006 F860     		str	r0, [r7, #12]
 108 0008 B960     		str	r1, [r7, #8]
 109 000a 7A60     		str	r2, [r7, #4]
 110 000c 3B60     		str	r3, [r7, #0]
 187:../libraries/CC3000_Host_Driver/wlan.c **** 	
 188:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sFWPatches = sFWPatches;
 111              		.loc 1 188 0
 112 000e 40F20003 		movw	r3, #:lower16:tSLInformation
 113 0012 C0F20003 		movt	r3, #:upper16:tSLInformation
 114 0016 BA68     		ldr	r2, [r7, #8]
 115 0018 DA60     		str	r2, [r3, #12]
 189:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sDriverPatches = sDriverPatches;
 116              		.loc 1 189 0
 117 001a 40F20003 		movw	r3, #:lower16:tSLInformation
 118 001e C0F20003 		movt	r3, #:upper16:tSLInformation
 119 0022 7A68     		ldr	r2, [r7, #4]
 120 0024 1A61     		str	r2, [r3, #16]
 190:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sBootLoaderPatches = sBootLoaderPatches;
 121              		.loc 1 190 0
 122 0026 40F20003 		movw	r3, #:lower16:tSLInformation
 123 002a C0F20003 		movt	r3, #:upper16:tSLInformation
 124 002e 3A68     		ldr	r2, [r7, #0]
 125 0030 5A61     		str	r2, [r3, #20]
 191:../libraries/CC3000_Host_Driver/wlan.c **** 	
 192:../libraries/CC3000_Host_Driver/wlan.c **** 	// init io callback
 193:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.ReadWlanInterruptPin = sReadWlanInterruptPin;
 126              		.loc 1 193 0
 127 0032 40F20003 		movw	r3, #:lower16:tSLInformation
 128 0036 C0F20003 		movt	r3, #:upper16:tSLInformation
 129 003a BA69     		ldr	r2, [r7, #24]
 130 003c DA61     		str	r2, [r3, #28]
 194:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptEnable  = sWlanInterruptEnable;
 131              		.loc 1 194 0
 132 003e 40F20003 		movw	r3, #:lower16:tSLInformation
 133 0042 C0F20003 		movt	r3, #:upper16:tSLInformation
 134 0046 FA69     		ldr	r2, [r7, #28]
 135 0048 1A62     		str	r2, [r3, #32]
 195:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WlanInterruptDisable = sWlanInterruptDisable;
 136              		.loc 1 195 0
 137 004a 40F20003 		movw	r3, #:lower16:tSLInformation
 138 004e C0F20003 		movt	r3, #:upper16:tSLInformation
 139 0052 3A6A     		ldr	r2, [r7, #32]
 140 0054 5A62     		str	r2, [r3, #36]
 196:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin = sWriteWlanPin;
 141              		.loc 1 196 0
 142 0056 40F20003 		movw	r3, #:lower16:tSLInformation
 143 005a C0F20003 		movt	r3, #:upper16:tSLInformation
 144 005e 7A6A     		ldr	r2, [r7, #36]
 145 0060 9A62     		str	r2, [r3, #40]
 197:../libraries/CC3000_Host_Driver/wlan.c **** 	
 198:../libraries/CC3000_Host_Driver/wlan.c **** 	//init asynchronous events callback
 199:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.sWlanCB= sWlanCB;
 146              		.loc 1 199 0
 147 0062 40F20003 		movw	r3, #:lower16:tSLInformation
 148 0066 C0F20003 		movt	r3, #:upper16:tSLInformation
 149 006a FA68     		ldr	r2, [r7, #12]
 150 006c 9A61     		str	r2, [r3, #24]
 200:../libraries/CC3000_Host_Driver/wlan.c **** 	
 201:../libraries/CC3000_Host_Driver/wlan.c **** 	// By default TX Complete events are routed to host too
 202:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.InformHostOnTxComplete = 1;
 151              		.loc 1 202 0
 152 006e 40F20003 		movw	r3, #:lower16:tSLInformation
 153 0072 C0F20003 		movt	r3, #:upper16:tSLInformation
 154 0076 4FF00102 		mov	r2, #1
 155 007a 83F84020 		strb	r2, [r3, #64]
 203:../libraries/CC3000_Host_Driver/wlan.c **** }
 156              		.loc 1 203 0
 157 007e 07F11407 		add	r7, r7, #20
 158 0082 BD46     		mov	sp, r7
 159 0084 80BC     		pop	{r7}
 160 0086 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE57:
 164              		.section	.text.SpiReceiveHandler,"ax",%progbits
 165              		.align	2
 166              		.global	SpiReceiveHandler
 167              		.thumb
 168              		.thumb_func
 170              	SpiReceiveHandler:
 171              	.LFB58:
 204:../libraries/CC3000_Host_Driver/wlan.c **** 
 205:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 206:../libraries/CC3000_Host_Driver/wlan.c **** //
 207:../libraries/CC3000_Host_Driver/wlan.c **** //!  SpiReceiveHandler
 208:../libraries/CC3000_Host_Driver/wlan.c **** //!
 209:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param         pvBuffer - pointer to the received data buffer
 210:../libraries/CC3000_Host_Driver/wlan.c **** //!                      The function triggers Received event/data processing
 211:../libraries/CC3000_Host_Driver/wlan.c **** //!                 
 212:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param         Pointer to the received data
 213:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return        none
 214:../libraries/CC3000_Host_Driver/wlan.c **** //!
 215:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief         The function triggers Received event/data processing. It is 
 216:../libraries/CC3000_Host_Driver/wlan.c **** //! 			          called from the SPI library to receive the data
 217:../libraries/CC3000_Host_Driver/wlan.c **** //
 218:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 219:../libraries/CC3000_Host_Driver/wlan.c **** void SpiReceiveHandler(void *pvBuffer)
 220:../libraries/CC3000_Host_Driver/wlan.c **** {	
 172              		.loc 1 220 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              	.LCFI6:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 82B0     		sub	sp, sp, #8
 182              	.LCFI7:
 183              		.cfi_def_cfa_offset 16
 184 0004 00AF     		add	r7, sp, #0
 185              	.LCFI8:
 186              		.cfi_def_cfa_register 7
 187 0006 7860     		str	r0, [r7, #4]
 221:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usEventOrDataReceived = 1;
 188              		.loc 1 221 0
 189 0008 40F20003 		movw	r3, #:lower16:tSLInformation
 190 000c C0F20003 		movt	r3, #:upper16:tSLInformation
 191 0010 4FF00102 		mov	r2, #1
 192 0014 5A80     		strh	r2, [r3, #2]	@ movhi
 222:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucReceivedData = (unsigned char 	*)pvBuffer;
 193              		.loc 1 222 0
 194 0016 40F20003 		movw	r3, #:lower16:tSLInformation
 195 001a C0F20003 		movt	r3, #:upper16:tSLInformation
 196 001e 7A68     		ldr	r2, [r7, #4]
 197 0020 5A60     		str	r2, [r3, #4]
 223:../libraries/CC3000_Host_Driver/wlan.c **** 	
 224:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_unsolicited_event_handler();
 198              		.loc 1 224 0
 199 0022 FFF7FEFF 		bl	hci_unsolicited_event_handler
 225:../libraries/CC3000_Host_Driver/wlan.c **** }
 200              		.loc 1 225 0
 201 0026 07F10807 		add	r7, r7, #8
 202 002a BD46     		mov	sp, r7
 203 002c 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE58:
 207 002e 00BF     		.section	.text.wlan_start,"ax",%progbits
 208              		.align	2
 209              		.global	wlan_start
 210              		.thumb
 211              		.thumb_func
 213              	wlan_start:
 214              	.LFB59:
 226:../libraries/CC3000_Host_Driver/wlan.c **** 
 227:../libraries/CC3000_Host_Driver/wlan.c **** 
 228:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 229:../libraries/CC3000_Host_Driver/wlan.c **** //
 230:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_start
 231:../libraries/CC3000_Host_Driver/wlan.c **** //!
 232:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   usPatchesAvailableAtHost -  flag to indicate if patches available
 233:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    from host or from EEPROM. Due to the 
 234:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    fact the patches are burn to the EEPROM
 235:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    using the patch programmer utility, the 
 236:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    patches will be available from the EEPROM
 237:../libraries/CC3000_Host_Driver/wlan.c **** //!                                    and not from the host.
 238:../libraries/CC3000_Host_Driver/wlan.c **** //!
 239:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return        none
 240:../libraries/CC3000_Host_Driver/wlan.c **** //!
 241:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief        Start WLAN device. This function asserts the enable pin of 
 242:../libraries/CC3000_Host_Driver/wlan.c **** //!                the device (WLAN_EN), starting the HW initialization process.
 243:../libraries/CC3000_Host_Driver/wlan.c **** //!                The function blocked until device Initialization is completed.
 244:../libraries/CC3000_Host_Driver/wlan.c **** //!                Function also configure patches (FW, driver or bootloader) 
 245:../libraries/CC3000_Host_Driver/wlan.c **** //!                and calls appropriate device callbacks.
 246:../libraries/CC3000_Host_Driver/wlan.c **** //!
 247:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note          Prior calling the function wlan_init shall be called.
 248:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Warning       This function must be called after wlan_init and before any 
 249:../libraries/CC3000_Host_Driver/wlan.c **** //!                 other wlan API
 250:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa            wlan_init , wlan_stop
 251:../libraries/CC3000_Host_Driver/wlan.c **** //!
 252:../libraries/CC3000_Host_Driver/wlan.c **** //
 253:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 254:../libraries/CC3000_Host_Driver/wlan.c **** 
 255:../libraries/CC3000_Host_Driver/wlan.c **** void
 256:../libraries/CC3000_Host_Driver/wlan.c **** wlan_start(unsigned short usPatchesAvailableAtHost)
 257:../libraries/CC3000_Host_Driver/wlan.c **** {
 215              		.loc 1 257 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 16
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219 0000 80B5     		push	{r7, lr}
 220              	.LCFI9:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 84B0     		sub	sp, sp, #16
 225              	.LCFI10:
 226              		.cfi_def_cfa_offset 24
 227 0004 00AF     		add	r7, sp, #0
 228              	.LCFI11:
 229              		.cfi_def_cfa_register 7
 230 0006 0346     		mov	r3, r0
 231 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 258:../libraries/CC3000_Host_Driver/wlan.c **** 	
 259:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned long ulSpiIRQState;
 260:../libraries/CC3000_Host_Driver/wlan.c **** 	
 261:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.NumberOfSentPackets = 0;
 232              		.loc 1 261 0
 233 000a 40F20003 		movw	r3, #:lower16:tSLInformation
 234 000e C0F20003 		movt	r3, #:upper16:tSLInformation
 235 0012 4FF00002 		mov	r2, #0
 236 0016 9A63     		str	r2, [r3, #56]
 262:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.NumberOfReleasedPackets = 0;
 237              		.loc 1 262 0
 238 0018 40F20003 		movw	r3, #:lower16:tSLInformation
 239 001c C0F20003 		movt	r3, #:upper16:tSLInformation
 240 0020 4FF00002 		mov	r2, #0
 241 0024 DA63     		str	r2, [r3, #60]
 263:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usRxEventOpcode = 0;
 242              		.loc 1 263 0
 243 0026 40F20003 		movw	r3, #:lower16:tSLInformation
 244 002a C0F20003 		movt	r3, #:upper16:tSLInformation
 245 002e 4FF00002 		mov	r2, #0
 246 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 264:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usNumberOfFreeBuffers = 0;
 247              		.loc 1 264 0
 248 0034 40F20003 		movw	r3, #:lower16:tSLInformation
 249 0038 C0F20003 		movt	r3, #:upper16:tSLInformation
 250 003c 4FF00002 		mov	r2, #0
 251 0040 1A86     		strh	r2, [r3, #48]	@ movhi
 265:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usSlBufferLength = 0;
 252              		.loc 1 265 0
 253 0042 40F20003 		movw	r3, #:lower16:tSLInformation
 254 0046 C0F20003 		movt	r3, #:upper16:tSLInformation
 255 004a 4FF00002 		mov	r2, #0
 256 004e 5A86     		strh	r2, [r3, #50]	@ movhi
 266:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usBufferSize = 0;
 257              		.loc 1 266 0
 258 0050 40F20003 		movw	r3, #:lower16:tSLInformation
 259 0054 C0F20003 		movt	r3, #:upper16:tSLInformation
 260 0058 4FF00002 		mov	r2, #0
 261 005c 9A86     		strh	r2, [r3, #52]	@ movhi
 267:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usRxDataPending = 0;
 262              		.loc 1 267 0
 263 005e 40F20003 		movw	r3, #:lower16:tSLInformation
 264 0062 C0F20003 		movt	r3, #:upper16:tSLInformation
 265 0066 4FF00002 		mov	r2, #0
 266 006a DA86     		strh	r2, [r3, #54]	@ movhi
 268:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.slTransmitDataError = 0;
 267              		.loc 1 268 0
 268 006c 40F20003 		movw	r3, #:lower16:tSLInformation
 269 0070 C0F20003 		movt	r3, #:upper16:tSLInformation
 270 0074 4FF00002 		mov	r2, #0
 271 0078 DA62     		str	r2, [r3, #44]
 269:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.usEventOrDataReceived = 0;
 272              		.loc 1 269 0
 273 007a 40F20003 		movw	r3, #:lower16:tSLInformation
 274 007e C0F20003 		movt	r3, #:upper16:tSLInformation
 275 0082 4FF00002 		mov	r2, #0
 276 0086 5A80     		strh	r2, [r3, #2]	@ movhi
 270:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucReceivedData = 0;
 277              		.loc 1 270 0
 278 0088 40F20003 		movw	r3, #:lower16:tSLInformation
 279 008c C0F20003 		movt	r3, #:upper16:tSLInformation
 280 0090 4FF00002 		mov	r2, #0
 281 0094 5A60     		str	r2, [r3, #4]
 271:../libraries/CC3000_Host_Driver/wlan.c **** 	
 272:../libraries/CC3000_Host_Driver/wlan.c **** 	// Allocate the memory for the RX/TX data transactions
 273:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.pucTxCommandBuffer = (unsigned char *)wlan_tx_buffer;
 282              		.loc 1 273 0
 283 0096 40F20003 		movw	r3, #:lower16:tSLInformation
 284 009a C0F20003 		movt	r3, #:upper16:tSLInformation
 285 009e 40F20002 		movw	r2, #:lower16:wlan_tx_buffer
 286 00a2 C0F20002 		movt	r2, #:upper16:wlan_tx_buffer
 287 00a6 9A60     		str	r2, [r3, #8]
 274:../libraries/CC3000_Host_Driver/wlan.c **** 	
 275:../libraries/CC3000_Host_Driver/wlan.c **** 	// init spi
 276:../libraries/CC3000_Host_Driver/wlan.c **** 	SpiOpen(SpiReceiveHandler);
 288              		.loc 1 276 0
 289 00a8 40F20000 		movw	r0, #:lower16:SpiReceiveHandler
 290 00ac C0F20000 		movt	r0, #:upper16:SpiReceiveHandler
 291 00b0 FFF7FEFF 		bl	SpiOpen
 277:../libraries/CC3000_Host_Driver/wlan.c **** 	
 278:../libraries/CC3000_Host_Driver/wlan.c **** 	// Check the IRQ line
 279:../libraries/CC3000_Host_Driver/wlan.c **** 	ulSpiIRQState = tSLInformation.ReadWlanInterruptPin();
 292              		.loc 1 279 0
 293 00b4 40F20003 		movw	r3, #:lower16:tSLInformation
 294 00b8 C0F20003 		movt	r3, #:upper16:tSLInformation
 295 00bc DB69     		ldr	r3, [r3, #28]
 296 00be 9847     		blx	r3
 297 00c0 0346     		mov	r3, r0
 298 00c2 FB60     		str	r3, [r7, #12]
 280:../libraries/CC3000_Host_Driver/wlan.c **** 	
 281:../libraries/CC3000_Host_Driver/wlan.c **** 	// ASIC 1273 chip enable: toggle WLAN EN line
 282:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin( WLAN_ENABLE );
 299              		.loc 1 282 0
 300 00c4 40F20003 		movw	r3, #:lower16:tSLInformation
 301 00c8 C0F20003 		movt	r3, #:upper16:tSLInformation
 302 00cc 9B6A     		ldr	r3, [r3, #40]
 303 00ce 4FF00100 		mov	r0, #1
 304 00d2 9847     		blx	r3
 283:../libraries/CC3000_Host_Driver/wlan.c **** 	
 284:../libraries/CC3000_Host_Driver/wlan.c **** 	if (ulSpiIRQState)
 305              		.loc 1 284 0
 306 00d4 FB68     		ldr	r3, [r7, #12]
 307 00d6 002B     		cmp	r3, #0
 308 00d8 0AD0     		beq	.L10
 285:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 286:../libraries/CC3000_Host_Driver/wlan.c **** 		// wait till the IRQ line goes low
 287:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() != 0)
 309              		.loc 1 287 0
 310 00da 00BF     		nop
 311              	.L6:
 312              		.loc 1 287 0 is_stmt 0 discriminator 1
 313 00dc 40F20003 		movw	r3, #:lower16:tSLInformation
 314 00e0 C0F20003 		movt	r3, #:upper16:tSLInformation
 315 00e4 DB69     		ldr	r3, [r3, #28]
 316 00e6 9847     		blx	r3
 317 00e8 0346     		mov	r3, r0
 318 00ea 002B     		cmp	r3, #0
 319 00ec F6D1     		bne	.L6
 320              		.loc 1 287 0
 321 00ee 13E0     		b	.L7
 322              	.L10:
 288:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 289:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 290:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 291:../libraries/CC3000_Host_Driver/wlan.c **** 	else
 292:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 293:../libraries/CC3000_Host_Driver/wlan.c **** 		// wait till the IRQ line goes high and than low
 294:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() == 0)
 323              		.loc 1 294 0 is_stmt 1
 324 00f0 00BF     		nop
 325              	.L8:
 326              		.loc 1 294 0 is_stmt 0 discriminator 1
 327 00f2 40F20003 		movw	r3, #:lower16:tSLInformation
 328 00f6 C0F20003 		movt	r3, #:upper16:tSLInformation
 329 00fa DB69     		ldr	r3, [r3, #28]
 330 00fc 9847     		blx	r3
 331 00fe 0346     		mov	r3, r0
 332 0100 002B     		cmp	r3, #0
 333 0102 F6D0     		beq	.L8
 295:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 296:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 297:../libraries/CC3000_Host_Driver/wlan.c **** 		
 298:../libraries/CC3000_Host_Driver/wlan.c **** 		while(tSLInformation.ReadWlanInterruptPin() != 0)
 334              		.loc 1 298 0 is_stmt 1
 335 0104 00BF     		nop
 336              	.L9:
 337              		.loc 1 298 0 is_stmt 0 discriminator 1
 338 0106 40F20003 		movw	r3, #:lower16:tSLInformation
 339 010a C0F20003 		movt	r3, #:upper16:tSLInformation
 340 010e DB69     		ldr	r3, [r3, #28]
 341 0110 9847     		blx	r3
 342 0112 0346     		mov	r3, r0
 343 0114 002B     		cmp	r3, #0
 344 0116 F6D1     		bne	.L9
 345              	.L7:
 299:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 300:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 301:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 302:../libraries/CC3000_Host_Driver/wlan.c **** 	
 303:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLink_Init_Start(usPatchesAvailableAtHost);
 346              		.loc 1 303 0 is_stmt 1
 347 0118 FB88     		ldrh	r3, [r7, #6]
 348 011a 1846     		mov	r0, r3
 349 011c FFF7FEFF 		bl	SimpleLink_Init_Start
 304:../libraries/CC3000_Host_Driver/wlan.c **** 	
 305:../libraries/CC3000_Host_Driver/wlan.c **** 	// Read Buffer's size and finish
 306:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_READ_BUFFER_SIZE, tSLInformation.pucTxCommandBuffer, 0);
 350              		.loc 1 306 0
 351 0120 40F20003 		movw	r3, #:lower16:tSLInformation
 352 0124 C0F20003 		movt	r3, #:upper16:tSLInformation
 353 0128 9B68     		ldr	r3, [r3, #8]
 354 012a 44F20B00 		movw	r0, #16395
 355 012e 1946     		mov	r1, r3
 356 0130 4FF00002 		mov	r2, #0
 357 0134 FFF7FEFF 		bl	hci_command_send
 307:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_READ_BUFFER_SIZE, 0);
 358              		.loc 1 307 0
 359 0138 44F20B00 		movw	r0, #16395
 360 013c 4FF00001 		mov	r1, #0
 361 0140 FFF7FEFF 		bl	SimpleLinkWaitEvent
 308:../libraries/CC3000_Host_Driver/wlan.c **** }
 362              		.loc 1 308 0
 363 0144 07F11007 		add	r7, r7, #16
 364 0148 BD46     		mov	sp, r7
 365 014a 80BD     		pop	{r7, pc}
 366              		.cfi_endproc
 367              	.LFE59:
 369              		.section	.text.wlan_stop,"ax",%progbits
 370              		.align	2
 371              		.global	wlan_stop
 372              		.thumb
 373              		.thumb_func
 375              	wlan_stop:
 376              	.LFB60:
 309:../libraries/CC3000_Host_Driver/wlan.c **** 
 310:../libraries/CC3000_Host_Driver/wlan.c **** 
 311:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 312:../libraries/CC3000_Host_Driver/wlan.c **** //
 313:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_stop
 314:../libraries/CC3000_Host_Driver/wlan.c **** //!
 315:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param         none
 316:../libraries/CC3000_Host_Driver/wlan.c **** //!
 317:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return        none
 318:../libraries/CC3000_Host_Driver/wlan.c **** //!
 319:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief         Stop WLAN device by putting it into reset state.
 320:../libraries/CC3000_Host_Driver/wlan.c **** //!
 321:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa            wlan_start
 322:../libraries/CC3000_Host_Driver/wlan.c **** //
 323:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 324:../libraries/CC3000_Host_Driver/wlan.c **** 
 325:../libraries/CC3000_Host_Driver/wlan.c **** void
 326:../libraries/CC3000_Host_Driver/wlan.c **** wlan_stop(void)
 327:../libraries/CC3000_Host_Driver/wlan.c **** {
 377              		.loc 1 327 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              	.LCFI12:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 00AF     		add	r7, sp, #0
 387              	.LCFI13:
 388              		.cfi_def_cfa_register 7
 328:../libraries/CC3000_Host_Driver/wlan.c **** 	// ASIC 1273 chip disable
 329:../libraries/CC3000_Host_Driver/wlan.c **** 	tSLInformation.WriteWlanPin( WLAN_DISABLE );
 389              		.loc 1 329 0
 390 0004 40F20003 		movw	r3, #:lower16:tSLInformation
 391 0008 C0F20003 		movt	r3, #:upper16:tSLInformation
 392 000c 9B6A     		ldr	r3, [r3, #40]
 393 000e 4FF00000 		mov	r0, #0
 394 0012 9847     		blx	r3
 330:../libraries/CC3000_Host_Driver/wlan.c **** 	
 331:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait till IRQ line goes high...
 332:../libraries/CC3000_Host_Driver/wlan.c **** 	while(tSLInformation.ReadWlanInterruptPin() == 0)
 395              		.loc 1 332 0
 396 0014 00BF     		nop
 397              	.L12:
 398              		.loc 1 332 0 is_stmt 0 discriminator 1
 399 0016 40F20003 		movw	r3, #:lower16:tSLInformation
 400 001a C0F20003 		movt	r3, #:upper16:tSLInformation
 401 001e DB69     		ldr	r3, [r3, #28]
 402 0020 9847     		blx	r3
 403 0022 0346     		mov	r3, r0
 404 0024 002B     		cmp	r3, #0
 405 0026 F6D0     		beq	.L12
 333:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 334:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 335:../libraries/CC3000_Host_Driver/wlan.c **** 	
 336:../libraries/CC3000_Host_Driver/wlan.c **** 	// Free the used by WLAN Driver memory
 337:../libraries/CC3000_Host_Driver/wlan.c **** 	if (tSLInformation.pucTxCommandBuffer)
 406              		.loc 1 337 0 is_stmt 1
 407 0028 40F20003 		movw	r3, #:lower16:tSLInformation
 408 002c C0F20003 		movt	r3, #:upper16:tSLInformation
 409 0030 9B68     		ldr	r3, [r3, #8]
 410 0032 002B     		cmp	r3, #0
 411 0034 06D0     		beq	.L13
 338:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 339:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.pucTxCommandBuffer = 0;
 412              		.loc 1 339 0
 413 0036 40F20003 		movw	r3, #:lower16:tSLInformation
 414 003a C0F20003 		movt	r3, #:upper16:tSLInformation
 415 003e 4FF00002 		mov	r2, #0
 416 0042 9A60     		str	r2, [r3, #8]
 417              	.L13:
 340:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 341:../libraries/CC3000_Host_Driver/wlan.c **** 	
 342:../libraries/CC3000_Host_Driver/wlan.c **** 	SpiClose();
 418              		.loc 1 342 0
 419 0044 FFF7FEFF 		bl	SpiClose
 343:../libraries/CC3000_Host_Driver/wlan.c **** }
 420              		.loc 1 343 0
 421 0048 80BD     		pop	{r7, pc}
 422              		.cfi_endproc
 423              	.LFE60:
 425 004a 00BF     		.section	.text.wlan_connect,"ax",%progbits
 426              		.align	2
 427              		.global	wlan_connect
 428              		.thumb
 429              		.thumb_func
 431              	wlan_connect:
 432              	.LFB61:
 344:../libraries/CC3000_Host_Driver/wlan.c **** 
 345:../libraries/CC3000_Host_Driver/wlan.c **** 
 346:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 347:../libraries/CC3000_Host_Driver/wlan.c **** //
 348:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_connect
 349:../libraries/CC3000_Host_Driver/wlan.c **** //!
 350:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    sec_type   security options:
 351:../libraries/CC3000_Host_Driver/wlan.c **** //!               WLAN_SEC_UNSEC, 
 352:../libraries/CC3000_Host_Driver/wlan.c **** //!               WLAN_SEC_WEP (ASCII support only),
 353:../libraries/CC3000_Host_Driver/wlan.c **** //!               WLAN_SEC_WPA or WLAN_SEC_WPA2
 354:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ssid       up to 32 bytes and is ASCII SSID of the AP
 355:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ssid_len   length of the SSID
 356:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    bssid      6 bytes specified the AP bssid
 357:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    key        up to 16 bytes specified the AP security key
 358:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    key_len    key length 
 359:../libraries/CC3000_Host_Driver/wlan.c **** //!
 360:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return     On success, zero is returned. On error, negative is returned. 
 361:../libraries/CC3000_Host_Driver/wlan.c **** //!              Note that even though a zero is returned on success to trigger
 362:../libraries/CC3000_Host_Driver/wlan.c **** //!              connection operation, it does not mean that CCC3000 is already
 363:../libraries/CC3000_Host_Driver/wlan.c **** //!              connected. An asynchronous "Connected" event is generated when 
 364:../libraries/CC3000_Host_Driver/wlan.c **** //!              actual association process finishes and CC3000 is connected to
 365:../libraries/CC3000_Host_Driver/wlan.c **** //!              the AP. If DHCP is set, An asynchronous "DHCP" event is 
 366:../libraries/CC3000_Host_Driver/wlan.c **** //!              generated when DHCP process is finish.
 367:../libraries/CC3000_Host_Driver/wlan.c **** //!              
 368:../libraries/CC3000_Host_Driver/wlan.c **** //!
 369:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief      Connect to AP
 370:../libraries/CC3000_Host_Driver/wlan.c **** //!  @warning    Please Note that when connection to AP configured with security
 371:../libraries/CC3000_Host_Driver/wlan.c **** //!              type WEP, please confirm that the key is set as ASCII and not
 372:../libraries/CC3000_Host_Driver/wlan.c **** //!              as HEX.
 373:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa         wlan_disconnect
 374:../libraries/CC3000_Host_Driver/wlan.c **** //
 375:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 376:../libraries/CC3000_Host_Driver/wlan.c ****   
 377:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 378:../libraries/CC3000_Host_Driver/wlan.c **** long
 379:../libraries/CC3000_Host_Driver/wlan.c **** wlan_connect(unsigned long ulSecType, char *ssid, long ssid_len,
 380:../libraries/CC3000_Host_Driver/wlan.c ****              unsigned char *bssid, unsigned char *key, long key_len)
 381:../libraries/CC3000_Host_Driver/wlan.c **** {
 433              		.loc 1 381 0
 434              		.cfi_startproc
 435              		@ args = 8, pretend = 0, frame = 40
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437 0000 90B5     		push	{r4, r7, lr}
 438              	.LCFI14:
 439              		.cfi_def_cfa_offset 12
 440              		.cfi_offset 4, -12
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 8BB0     		sub	sp, sp, #44
 444              	.LCFI15:
 445              		.cfi_def_cfa_offset 56
 446 0004 00AF     		add	r7, sp, #0
 447              	.LCFI16:
 448              		.cfi_def_cfa_register 7
 449 0006 F860     		str	r0, [r7, #12]
 450 0008 B960     		str	r1, [r7, #8]
 451 000a 7A60     		str	r2, [r7, #4]
 452 000c 3B60     		str	r3, [r7, #0]
 382:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 383:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 384:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 385:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 453              		.loc 1 385 0
 454 000e 4FF00003 		mov	r3, #0
 455 0012 3B75     		strb	r3, [r7, #20]
 456 0014 4FF00003 		mov	r3, #0
 457 0018 7B75     		strb	r3, [r7, #21]
 458 001a 4FF00003 		mov	r3, #0
 459 001e BB75     		strb	r3, [r7, #22]
 460 0020 4FF00003 		mov	r3, #0
 461 0024 FB75     		strb	r3, [r7, #23]
 462 0026 4FF00003 		mov	r3, #0
 463 002a 3B76     		strb	r3, [r7, #24]
 464 002c 4FF00003 		mov	r3, #0
 465 0030 7B76     		strb	r3, [r7, #25]
 386:../libraries/CC3000_Host_Driver/wlan.c **** 	
 387:../libraries/CC3000_Host_Driver/wlan.c **** 	ret  	= EFAIL;
 466              		.loc 1 387 0
 467 0032 4FF0FF33 		mov	r3, #-1
 468 0036 FB61     		str	r3, [r7, #28]
 388:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr  	= tSLInformation.pucTxCommandBuffer;
 469              		.loc 1 388 0
 470 0038 40F20003 		movw	r3, #:lower16:tSLInformation
 471 003c C0F20003 		movt	r3, #:upper16:tSLInformation
 472 0040 9B68     		ldr	r3, [r3, #8]
 473 0042 3B62     		str	r3, [r7, #32]
 389:../libraries/CC3000_Host_Driver/wlan.c **** 	args 	= (ptr + HEADERS_SIZE_CMD);
 474              		.loc 1 389 0
 475 0044 3B6A     		ldr	r3, [r7, #32]
 476 0046 03F10903 		add	r3, r3, #9
 477 004a 7B62     		str	r3, [r7, #36]
 390:../libraries/CC3000_Host_Driver/wlan.c **** 	
 391:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in command buffer
 392:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x0000001c);
 478              		.loc 1 392 0
 479 004c 786A     		ldr	r0, [r7, #36]
 480 004e 4FF01C01 		mov	r1, #28
 481 0052 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 482 0056 7862     		str	r0, [r7, #36]
 393:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ssid_len);
 483              		.loc 1 393 0
 484 0058 7B68     		ldr	r3, [r7, #4]
 485 005a 786A     		ldr	r0, [r7, #36]
 486 005c 1946     		mov	r1, r3
 487 005e FFF7FEFF 		bl	UINT32_TO_STREAM_f
 488 0062 7862     		str	r0, [r7, #36]
 394:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulSecType);
 489              		.loc 1 394 0
 490 0064 786A     		ldr	r0, [r7, #36]
 491 0066 F968     		ldr	r1, [r7, #12]
 492 0068 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 493 006c 7862     		str	r0, [r7, #36]
 395:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x00000010 + ssid_len);
 494              		.loc 1 395 0
 495 006e 7B68     		ldr	r3, [r7, #4]
 496 0070 03F11003 		add	r3, r3, #16
 497 0074 786A     		ldr	r0, [r7, #36]
 498 0076 1946     		mov	r1, r3
 499 0078 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 500 007c 7862     		str	r0, [r7, #36]
 396:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, key_len);
 501              		.loc 1 396 0
 502 007e FB6B     		ldr	r3, [r7, #60]
 503 0080 786A     		ldr	r0, [r7, #36]
 504 0082 1946     		mov	r1, r3
 505 0084 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 506 0088 7862     		str	r0, [r7, #36]
 397:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT16_TO_STREAM(args, 0);
 507              		.loc 1 397 0
 508 008a 786A     		ldr	r0, [r7, #36]
 509 008c 4FF00001 		mov	r1, #0
 510 0090 FFF7FEFF 		bl	UINT16_TO_STREAM_f
 511 0094 7862     		str	r0, [r7, #36]
 398:../libraries/CC3000_Host_Driver/wlan.c **** 	
 399:../libraries/CC3000_Host_Driver/wlan.c **** 	// padding shall be zeroed
 400:../libraries/CC3000_Host_Driver/wlan.c **** 	if(bssid)
 512              		.loc 1 400 0
 513 0096 3B68     		ldr	r3, [r7, #0]
 514 0098 002B     		cmp	r3, #0
 515 009a 14D0     		beq	.L15
 516              	.LBB2:
 401:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 402:../libraries/CC3000_Host_Driver/wlan.c **** 		ARRAY_TO_STREAM(args, bssid, ETH_ALEN);
 517              		.loc 1 402 0
 518 009c 4FF00004 		mov	r4, #0
 519 00a0 0DE0     		b	.L16
 520              	.L17:
 521              		.loc 1 402 0 is_stmt 0 discriminator 2
 522 00a2 23B2     		sxth	r3, r4
 523 00a4 3A68     		ldr	r2, [r7, #0]
 524 00a6 D318     		adds	r3, r2, r3
 525 00a8 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 526 00aa 7B6A     		ldr	r3, [r7, #36]
 527 00ac 1A70     		strb	r2, [r3, #0]
 528 00ae 7B6A     		ldr	r3, [r7, #36]
 529 00b0 03F10103 		add	r3, r3, #1
 530 00b4 7B62     		str	r3, [r7, #36]
 531 00b6 2346     		mov	r3, r4	@ movhi
 532 00b8 03F10103 		add	r3, r3, #1
 533 00bc 9CB2     		uxth	r4, r3
 534              	.L16:
 535              		.loc 1 402 0 discriminator 1
 536 00be 23B2     		sxth	r3, r4
 537 00c0 052B     		cmp	r3, #5
 538 00c2 EEDD     		ble	.L17
 539              		.loc 1 402 0
 540 00c4 14E0     		b	.L18
 541              	.L15:
 542              	.LBE2:
 543              	.LBB3:
 403:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 404:../libraries/CC3000_Host_Driver/wlan.c **** 	else
 405:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 406:../libraries/CC3000_Host_Driver/wlan.c **** 		ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 544              		.loc 1 406 0 is_stmt 1
 545 00c6 4FF00004 		mov	r4, #0
 546 00ca 0EE0     		b	.L19
 547              	.L20:
 548              		.loc 1 406 0 is_stmt 0 discriminator 2
 549 00cc 23B2     		sxth	r3, r4
 550 00ce 07F11402 		add	r2, r7, #20
 551 00d2 D318     		adds	r3, r2, r3
 552 00d4 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 553 00d6 7B6A     		ldr	r3, [r7, #36]
 554 00d8 1A70     		strb	r2, [r3, #0]
 555 00da 7B6A     		ldr	r3, [r7, #36]
 556 00dc 03F10103 		add	r3, r3, #1
 557 00e0 7B62     		str	r3, [r7, #36]
 558 00e2 2346     		mov	r3, r4	@ movhi
 559 00e4 03F10103 		add	r3, r3, #1
 560 00e8 9CB2     		uxth	r4, r3
 561              	.L19:
 562              		.loc 1 406 0 discriminator 1
 563 00ea 23B2     		sxth	r3, r4
 564 00ec 052B     		cmp	r3, #5
 565 00ee EDDD     		ble	.L20
 566              	.L18:
 567              	.LBE3:
 568              	.LBB4:
 407:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 408:../libraries/CC3000_Host_Driver/wlan.c **** 	
 409:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, ssid, ssid_len);
 569              		.loc 1 409 0 is_stmt 1
 570 00f0 4FF00004 		mov	r4, #0
 571 00f4 0DE0     		b	.L21
 572              	.L22:
 573              		.loc 1 409 0 is_stmt 0 discriminator 2
 574 00f6 23B2     		sxth	r3, r4
 575 00f8 BA68     		ldr	r2, [r7, #8]
 576 00fa D318     		adds	r3, r2, r3
 577 00fc 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 578 00fe 7B6A     		ldr	r3, [r7, #36]
 579 0100 1A70     		strb	r2, [r3, #0]
 580 0102 7B6A     		ldr	r3, [r7, #36]
 581 0104 03F10103 		add	r3, r3, #1
 582 0108 7B62     		str	r3, [r7, #36]
 583 010a 2346     		mov	r3, r4	@ movhi
 584 010c 03F10103 		add	r3, r3, #1
 585 0110 9CB2     		uxth	r4, r3
 586              	.L21:
 587              		.loc 1 409 0 discriminator 1
 588 0112 22B2     		sxth	r2, r4
 589 0114 7B68     		ldr	r3, [r7, #4]
 590 0116 9A42     		cmp	r2, r3
 591 0118 EDDB     		blt	.L22
 592              	.LBE4:
 410:../libraries/CC3000_Host_Driver/wlan.c **** 	
 411:../libraries/CC3000_Host_Driver/wlan.c **** 	if(key_len && key)
 593              		.loc 1 411 0 is_stmt 1
 594 011a FB6B     		ldr	r3, [r7, #60]
 595 011c 002B     		cmp	r3, #0
 596 011e 17D0     		beq	.L23
 597              		.loc 1 411 0 is_stmt 0 discriminator 1
 598 0120 BB6B     		ldr	r3, [r7, #56]
 599 0122 002B     		cmp	r3, #0
 600 0124 14D0     		beq	.L23
 601              	.LBB5:
 412:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 413:../libraries/CC3000_Host_Driver/wlan.c **** 		ARRAY_TO_STREAM(args, key, key_len);
 602              		.loc 1 413 0 is_stmt 1
 603 0126 4FF00004 		mov	r4, #0
 604 012a 0DE0     		b	.L24
 605              	.L25:
 606              		.loc 1 413 0 is_stmt 0 discriminator 2
 607 012c 23B2     		sxth	r3, r4
 608 012e BA6B     		ldr	r2, [r7, #56]
 609 0130 D318     		adds	r3, r2, r3
 610 0132 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 611 0134 7B6A     		ldr	r3, [r7, #36]
 612 0136 1A70     		strb	r2, [r3, #0]
 613 0138 7B6A     		ldr	r3, [r7, #36]
 614 013a 03F10103 		add	r3, r3, #1
 615 013e 7B62     		str	r3, [r7, #36]
 616 0140 2346     		mov	r3, r4	@ movhi
 617 0142 03F10103 		add	r3, r3, #1
 618 0146 9CB2     		uxth	r4, r3
 619              	.L24:
 620              		.loc 1 413 0 discriminator 1
 621 0148 22B2     		sxth	r2, r4
 622 014a FB6B     		ldr	r3, [r7, #60]
 623 014c 9A42     		cmp	r2, r3
 624 014e EDDB     		blt	.L25
 625              	.L23:
 626              	.LBE5:
 414:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 415:../libraries/CC3000_Host_Driver/wlan.c **** 	
 416:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 417:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_CONNECT, ptr, WLAN_CONNECT_PARAM_LEN + 
 627              		.loc 1 417 0 is_stmt 1
 628 0150 7B68     		ldr	r3, [r7, #4]
 629 0152 DAB2     		uxtb	r2, r3
 630 0154 FB6B     		ldr	r3, [r7, #60]
 631 0156 DBB2     		uxtb	r3, r3
 632 0158 D318     		adds	r3, r2, r3
 633 015a DBB2     		uxtb	r3, r3
 634 015c 03F11C03 		add	r3, r3, #28
 635 0160 DBB2     		uxtb	r3, r3
 636 0162 4FF00100 		mov	r0, #1
 637 0166 396A     		ldr	r1, [r7, #32]
 638 0168 1A46     		mov	r2, r3
 639 016a FFF7FEFF 		bl	hci_command_send
 418:../libraries/CC3000_Host_Driver/wlan.c **** 									 ssid_len + key_len - 1);
 419:../libraries/CC3000_Host_Driver/wlan.c **** 	
 420:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 421:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_CONNECT, &ret);
 640              		.loc 1 421 0
 641 016e 07F11C03 		add	r3, r7, #28
 642 0172 4FF00100 		mov	r0, #1
 643 0176 1946     		mov	r1, r3
 644 0178 FFF7FEFF 		bl	SimpleLinkWaitEvent
 422:../libraries/CC3000_Host_Driver/wlan.c **** 	errno = ret;
 645              		.loc 1 422 0
 646 017c FFF7FEFF 		bl	__errno
 647 0180 0346     		mov	r3, r0
 648 0182 FA69     		ldr	r2, [r7, #28]
 649 0184 1A60     		str	r2, [r3, #0]
 423:../libraries/CC3000_Host_Driver/wlan.c **** 	
 424:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 650              		.loc 1 424 0
 651 0186 FB69     		ldr	r3, [r7, #28]
 425:../libraries/CC3000_Host_Driver/wlan.c **** }
 652              		.loc 1 425 0
 653 0188 1846     		mov	r0, r3
 654 018a 07F12C07 		add	r7, r7, #44
 655 018e BD46     		mov	sp, r7
 656 0190 90BD     		pop	{r4, r7, pc}
 657              		.cfi_endproc
 658              	.LFE61:
 660              		.section	.text.wlan_disconnect,"ax",%progbits
 661              		.align	2
 662              		.global	wlan_disconnect
 663              		.thumb
 664              		.thumb_func
 666              	wlan_disconnect:
 667              	.LFB62:
 426:../libraries/CC3000_Host_Driver/wlan.c **** #else
 427:../libraries/CC3000_Host_Driver/wlan.c **** long
 428:../libraries/CC3000_Host_Driver/wlan.c **** wlan_connect(char *ssid, long ssid_len)
 429:../libraries/CC3000_Host_Driver/wlan.c **** {
 430:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 431:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 432:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 433:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 434:../libraries/CC3000_Host_Driver/wlan.c **** 	
 435:../libraries/CC3000_Host_Driver/wlan.c **** 	ret  	= EFAIL;
 436:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr  	= tSLInformation.pucTxCommandBuffer;
 437:../libraries/CC3000_Host_Driver/wlan.c **** 	args 	= (ptr + HEADERS_SIZE_CMD);
 438:../libraries/CC3000_Host_Driver/wlan.c **** 	
 439:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in command buffer
 440:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x0000001c);
 441:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ssid_len);
 442:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0);
 443:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0x00000010 + ssid_len);
 444:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 0);
 445:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT16_TO_STREAM(args, 0);
 446:../libraries/CC3000_Host_Driver/wlan.c **** 	
 447:../libraries/CC3000_Host_Driver/wlan.c **** 	// padding shall be zeroed
 448:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 449:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, ssid, ssid_len);
 450:../libraries/CC3000_Host_Driver/wlan.c **** 	
 451:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 452:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_CONNECT, ptr, WLAN_CONNECT_PARAM_LEN + 
 453:../libraries/CC3000_Host_Driver/wlan.c **** 									 ssid_len  - 1);
 454:../libraries/CC3000_Host_Driver/wlan.c **** 	
 455:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 456:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_CONNECT, &ret);
 457:../libraries/CC3000_Host_Driver/wlan.c **** 	errno = ret;
 458:../libraries/CC3000_Host_Driver/wlan.c **** 	
 459:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 460:../libraries/CC3000_Host_Driver/wlan.c **** }
 461:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 462:../libraries/CC3000_Host_Driver/wlan.c **** 
 463:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 464:../libraries/CC3000_Host_Driver/wlan.c **** //
 465:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_disconnect
 466:../libraries/CC3000_Host_Driver/wlan.c **** //!
 467:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    0 disconnected done, other CC3000 already disconnected            
 468:../libraries/CC3000_Host_Driver/wlan.c **** //!
 469:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief      Disconnect connection from AP. 
 470:../libraries/CC3000_Host_Driver/wlan.c **** //!
 471:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa         wlan_connect
 472:../libraries/CC3000_Host_Driver/wlan.c **** //
 473:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 474:../libraries/CC3000_Host_Driver/wlan.c **** 
 475:../libraries/CC3000_Host_Driver/wlan.c **** long
 476:../libraries/CC3000_Host_Driver/wlan.c **** wlan_disconnect()
 477:../libraries/CC3000_Host_Driver/wlan.c **** {
 668              		.loc 1 477 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 8
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672 0000 80B5     		push	{r7, lr}
 673              	.LCFI17:
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 82B0     		sub	sp, sp, #8
 678              	.LCFI18:
 679              		.cfi_def_cfa_offset 16
 680 0004 00AF     		add	r7, sp, #0
 681              	.LCFI19:
 682              		.cfi_def_cfa_register 7
 478:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 479:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 480:../libraries/CC3000_Host_Driver/wlan.c **** 	
 481:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 683              		.loc 1 481 0
 684 0006 4FF0FF33 		mov	r3, #-1
 685 000a 3B60     		str	r3, [r7, #0]
 482:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 686              		.loc 1 482 0
 687 000c 40F20003 		movw	r3, #:lower16:tSLInformation
 688 0010 C0F20003 		movt	r3, #:upper16:tSLInformation
 689 0014 9B68     		ldr	r3, [r3, #8]
 690 0016 7B60     		str	r3, [r7, #4]
 483:../libraries/CC3000_Host_Driver/wlan.c **** 	
 484:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_DISCONNECT, ptr, 0);
 691              		.loc 1 484 0
 692 0018 4FF00200 		mov	r0, #2
 693 001c 7968     		ldr	r1, [r7, #4]
 694 001e 4FF00002 		mov	r2, #0
 695 0022 FFF7FEFF 		bl	hci_command_send
 485:../libraries/CC3000_Host_Driver/wlan.c **** 	
 486:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 487:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_DISCONNECT, &ret);
 696              		.loc 1 487 0
 697 0026 3B46     		mov	r3, r7
 698 0028 4FF00200 		mov	r0, #2
 699 002c 1946     		mov	r1, r3
 700 002e FFF7FEFF 		bl	SimpleLinkWaitEvent
 488:../libraries/CC3000_Host_Driver/wlan.c **** 	errno = ret;
 701              		.loc 1 488 0
 702 0032 FFF7FEFF 		bl	__errno
 703 0036 0346     		mov	r3, r0
 704 0038 3A68     		ldr	r2, [r7, #0]
 705 003a 1A60     		str	r2, [r3, #0]
 489:../libraries/CC3000_Host_Driver/wlan.c **** 	
 490:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 706              		.loc 1 490 0
 707 003c 3B68     		ldr	r3, [r7, #0]
 491:../libraries/CC3000_Host_Driver/wlan.c **** }
 708              		.loc 1 491 0
 709 003e 1846     		mov	r0, r3
 710 0040 07F10807 		add	r7, r7, #8
 711 0044 BD46     		mov	sp, r7
 712 0046 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE62:
 716              		.section	.text.wlan_ioctl_set_connection_policy,"ax",%progbits
 717              		.align	2
 718              		.global	wlan_ioctl_set_connection_policy
 719              		.thumb
 720              		.thumb_func
 722              	wlan_ioctl_set_connection_policy:
 723              	.LFB63:
 492:../libraries/CC3000_Host_Driver/wlan.c **** 
 493:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 494:../libraries/CC3000_Host_Driver/wlan.c **** //
 495:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_set_connection_policy
 496:../libraries/CC3000_Host_Driver/wlan.c **** //!
 497:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    should_connect_to_open_ap  enable(1), disable(0) connect to any 
 498:../libraries/CC3000_Host_Driver/wlan.c **** //!            available AP. This parameter corresponds to the configuration of 
 499:../libraries/CC3000_Host_Driver/wlan.c **** //!            item # 3 in the brief description.
 500:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    should_use_fast_connect enable(1), disable(0). if enabled, tries 
 501:../libraries/CC3000_Host_Driver/wlan.c **** //!            to connect to the last connected AP. This parameter corresponds 
 502:../libraries/CC3000_Host_Driver/wlan.c **** //!            to the configuration of item # 1 in the brief description.
 503:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    auto_start enable(1), disable(0) auto connect 
 504:../libraries/CC3000_Host_Driver/wlan.c **** //!            after reset and periodically reconnect if needed. This 
 505:../libraries/CC3000_Host_Driver/wlan.c **** //!       	   configuration configures option 2 in the above description.
 506:../libraries/CC3000_Host_Driver/wlan.c **** //!
 507:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return     On success, zero is returned. On error, -1 is returned        
 508:../libraries/CC3000_Host_Driver/wlan.c **** //!
 509:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief      When auto is enabled, the device tries to connect according 
 510:../libraries/CC3000_Host_Driver/wlan.c **** //!              the following policy:
 511:../libraries/CC3000_Host_Driver/wlan.c **** //!              1) If fast connect is enabled and last connection is valid, 
 512:../libraries/CC3000_Host_Driver/wlan.c **** //!                 the device will try to connect to it without the scanning 
 513:../libraries/CC3000_Host_Driver/wlan.c **** //!                 procedure (fast). The last connection will be marked as
 514:../libraries/CC3000_Host_Driver/wlan.c **** //!                 invalid, due to adding/removing profile. 
 515:../libraries/CC3000_Host_Driver/wlan.c **** //!              2) If profile exists, the device will try to connect it 
 516:../libraries/CC3000_Host_Driver/wlan.c **** //!                 (Up to seven profiles).
 517:../libraries/CC3000_Host_Driver/wlan.c **** //!              3) If fast and profiles are not found, and open mode is
 518:../libraries/CC3000_Host_Driver/wlan.c **** //!                 enabled, the device will try to connect to any AP.
 519:../libraries/CC3000_Host_Driver/wlan.c **** //!              * Note that the policy settings are stored in the CC3000 NVMEM.
 520:../libraries/CC3000_Host_Driver/wlan.c **** //!
 521:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa         wlan_add_profile , wlan_ioctl_del_profile 
 522:../libraries/CC3000_Host_Driver/wlan.c **** //
 523:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 524:../libraries/CC3000_Host_Driver/wlan.c **** 
 525:../libraries/CC3000_Host_Driver/wlan.c **** long
 526:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_set_connection_policy(unsigned long should_connect_to_open_ap, 
 527:../libraries/CC3000_Host_Driver/wlan.c ****                                  unsigned long ulShouldUseFastConnect,
 528:../libraries/CC3000_Host_Driver/wlan.c ****                                  unsigned long ulUseProfiles)
 529:../libraries/CC3000_Host_Driver/wlan.c **** {
 724              		.loc 1 529 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 32
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              	.LCFI20:
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 88B0     		sub	sp, sp, #32
 734              	.LCFI21:
 735              		.cfi_def_cfa_offset 40
 736 0004 00AF     		add	r7, sp, #0
 737              	.LCFI22:
 738              		.cfi_def_cfa_register 7
 739 0006 F860     		str	r0, [r7, #12]
 740 0008 B960     		str	r1, [r7, #8]
 741 000a 7A60     		str	r2, [r7, #4]
 530:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 531:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 532:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 533:../libraries/CC3000_Host_Driver/wlan.c **** 	
 534:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 742              		.loc 1 534 0
 743 000c 4FF0FF33 		mov	r3, #-1
 744 0010 7B61     		str	r3, [r7, #20]
 535:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 745              		.loc 1 535 0
 746 0012 40F20003 		movw	r3, #:lower16:tSLInformation
 747 0016 C0F20003 		movt	r3, #:upper16:tSLInformation
 748 001a 9B68     		ldr	r3, [r3, #8]
 749 001c FB61     		str	r3, [r7, #28]
 536:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 750              		.loc 1 536 0
 751 001e FB69     		ldr	r3, [r7, #28]
 752 0020 03F10903 		add	r3, r3, #9
 753 0024 BB61     		str	r3, [r7, #24]
 537:../libraries/CC3000_Host_Driver/wlan.c **** 	
 538:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
 539:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, should_connect_to_open_ap);
 754              		.loc 1 539 0
 755 0026 B869     		ldr	r0, [r7, #24]
 756 0028 F968     		ldr	r1, [r7, #12]
 757 002a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 758 002e B861     		str	r0, [r7, #24]
 540:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulShouldUseFastConnect);
 759              		.loc 1 540 0
 760 0030 B869     		ldr	r0, [r7, #24]
 761 0032 B968     		ldr	r1, [r7, #8]
 762 0034 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 763 0038 B861     		str	r0, [r7, #24]
 541:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulUseProfiles);
 764              		.loc 1 541 0
 765 003a B869     		ldr	r0, [r7, #24]
 766 003c 7968     		ldr	r1, [r7, #4]
 767 003e FFF7FEFF 		bl	UINT32_TO_STREAM_f
 768 0042 B861     		str	r0, [r7, #24]
 542:../libraries/CC3000_Host_Driver/wlan.c **** 	
 543:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 544:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SET_CONNECTION_POLICY,
 769              		.loc 1 544 0
 770 0044 4FF00400 		mov	r0, #4
 771 0048 F969     		ldr	r1, [r7, #28]
 772 004a 4FF00C02 		mov	r2, #12
 773 004e FFF7FEFF 		bl	hci_command_send
 545:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_SET_CONNECTION_POLICY_PARAMS_LEN);
 546:../libraries/CC3000_Host_Driver/wlan.c **** 	
 547:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 548:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SET_CONNECTION_POLICY, &ret);
 774              		.loc 1 548 0
 775 0052 07F11403 		add	r3, r7, #20
 776 0056 4FF00400 		mov	r0, #4
 777 005a 1946     		mov	r1, r3
 778 005c FFF7FEFF 		bl	SimpleLinkWaitEvent
 549:../libraries/CC3000_Host_Driver/wlan.c **** 	
 550:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 779              		.loc 1 550 0
 780 0060 7B69     		ldr	r3, [r7, #20]
 551:../libraries/CC3000_Host_Driver/wlan.c **** }
 781              		.loc 1 551 0
 782 0062 1846     		mov	r0, r3
 783 0064 07F12007 		add	r7, r7, #32
 784 0068 BD46     		mov	sp, r7
 785 006a 80BD     		pop	{r7, pc}
 786              		.cfi_endproc
 787              	.LFE63:
 789              		.section	.text.wlan_add_profile,"ax",%progbits
 790              		.align	2
 791              		.global	wlan_add_profile
 792              		.thumb
 793              		.thumb_func
 795              	wlan_add_profile:
 796              	.LFB64:
 552:../libraries/CC3000_Host_Driver/wlan.c **** 
 553:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 554:../libraries/CC3000_Host_Driver/wlan.c **** //
 555:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_add_profile
 556:../libraries/CC3000_Host_Driver/wlan.c **** //!
 557:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulSecType  WLAN_SEC_UNSEC,WLAN_SEC_WEP,WLAN_SEC_WPA,WLAN_SEC_WPA2
 558:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ucSsid    ssid  SSID up to 32 bytes
 559:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulSsidLen ssid length
 560:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ucBssid   bssid  6 bytes
 561:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulPriority ulPriority profile priority. Lowest priority:0.
 562:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulPairwiseCipher_Or_TxKeyLen  key length for WEP security
 563:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulGroupCipher_TxKeyIndex  key index
 564:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulKeyMgmt        KEY management 
 565:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ucPf_OrKey       security key
 566:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    ulPassPhraseLen  security key length for WPA\WPA2
 567:../libraries/CC3000_Host_Driver/wlan.c **** //!
 568:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 569:../libraries/CC3000_Host_Driver/wlan.c **** //!
 570:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief     When auto start is enabled, the device connects to
 571:../libraries/CC3000_Host_Driver/wlan.c **** //!             station from the profiles table. Up to 7 profiles are supported. 
 572:../libraries/CC3000_Host_Driver/wlan.c **** //!             If several profiles configured the device choose the highest 
 573:../libraries/CC3000_Host_Driver/wlan.c **** //!             priority profile, within each priority group, device will choose 
 574:../libraries/CC3000_Host_Driver/wlan.c **** //!             profile based on security policy, signal strength, etc 
 575:../libraries/CC3000_Host_Driver/wlan.c **** //!             parameters. All the profiles are stored in CC3000 NVMEM.
 576:../libraries/CC3000_Host_Driver/wlan.c **** //!
 577:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_ioctl_del_profile 
 578:../libraries/CC3000_Host_Driver/wlan.c **** //
 579:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 580:../libraries/CC3000_Host_Driver/wlan.c **** 
 581:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 582:../libraries/CC3000_Host_Driver/wlan.c **** long
 583:../libraries/CC3000_Host_Driver/wlan.c **** wlan_add_profile(unsigned long ulSecType, 
 584:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucSsid,
 585:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulSsidLen, 
 586:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char *ucBssid,
 587:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPriority,
 588:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPairwiseCipher_Or_TxKeyLen,
 589:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulGroupCipher_TxKeyIndex,
 590:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulKeyMgmt,
 591:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucPf_OrKey,
 592:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPassPhraseLen)
 593:../libraries/CC3000_Host_Driver/wlan.c **** {
 797              		.loc 1 593 0
 798              		.cfi_startproc
 799              		@ args = 24, pretend = 0, frame = 48
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 90B5     		push	{r4, r7, lr}
 802              	.LCFI23:
 803              		.cfi_def_cfa_offset 12
 804              		.cfi_offset 4, -12
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 8DB0     		sub	sp, sp, #52
 808              	.LCFI24:
 809              		.cfi_def_cfa_offset 64
 810 0004 00AF     		add	r7, sp, #0
 811              	.LCFI25:
 812              		.cfi_def_cfa_register 7
 813 0006 F860     		str	r0, [r7, #12]
 814 0008 B960     		str	r1, [r7, #8]
 815 000a 7A60     		str	r2, [r7, #4]
 816 000c 3B60     		str	r3, [r7, #0]
 594:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned short arg_len;
 595:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 596:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 597:../libraries/CC3000_Host_Driver/wlan.c **** 	long i = 0;
 817              		.loc 1 597 0
 818 000e 4FF00003 		mov	r3, #0
 819 0012 BB62     		str	r3, [r7, #40]
 598:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 599:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char bssid_zero[] = {0, 0, 0, 0, 0, 0};
 820              		.loc 1 599 0
 821 0014 4FF00003 		mov	r3, #0
 822 0018 3B74     		strb	r3, [r7, #16]
 823 001a 4FF00003 		mov	r3, #0
 824 001e 7B74     		strb	r3, [r7, #17]
 825 0020 4FF00003 		mov	r3, #0
 826 0024 BB74     		strb	r3, [r7, #18]
 827 0026 4FF00003 		mov	r3, #0
 828 002a FB74     		strb	r3, [r7, #19]
 829 002c 4FF00003 		mov	r3, #0
 830 0030 3B75     		strb	r3, [r7, #20]
 831 0032 4FF00003 		mov	r3, #0
 832 0036 7B75     		strb	r3, [r7, #21]
 600:../libraries/CC3000_Host_Driver/wlan.c **** 	
 601:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 833              		.loc 1 601 0
 834 0038 40F20003 		movw	r3, #:lower16:tSLInformation
 835 003c C0F20003 		movt	r3, #:upper16:tSLInformation
 836 0040 9B68     		ldr	r3, [r3, #8]
 837 0042 3B62     		str	r3, [r7, #32]
 602:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 838              		.loc 1 602 0
 839 0044 3B6A     		ldr	r3, [r7, #32]
 840 0046 03F10903 		add	r3, r3, #9
 841 004a 7B62     		str	r3, [r7, #36]
 603:../libraries/CC3000_Host_Driver/wlan.c **** 	
 604:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulSecType);
 842              		.loc 1 604 0
 843 004c 786A     		ldr	r0, [r7, #36]
 844 004e F968     		ldr	r1, [r7, #12]
 845 0050 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 846 0054 7862     		str	r0, [r7, #36]
 605:../libraries/CC3000_Host_Driver/wlan.c **** 	
 606:../libraries/CC3000_Host_Driver/wlan.c **** 	// Setup arguments in accordance with the security type
 607:../libraries/CC3000_Host_Driver/wlan.c **** 	switch (ulSecType)
 847              		.loc 1 607 0
 848 0056 FB68     		ldr	r3, [r7, #12]
 849 0058 032B     		cmp	r3, #3
 850 005a 00F29A81 		bhi	.L32
 851 005e 01A2     		adr	r2, .L36
 852 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 853              		.align	2
 854              	.L36:
 855 0064 75000000 		.word	.L33+1
 856 0068 31010000 		.word	.L34+1
 857 006c 6D020000 		.word	.L35+1
 858 0070 6D020000 		.word	.L35+1
 859              	.L33:
 608:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 609:../libraries/CC3000_Host_Driver/wlan.c **** 		//OPEN
 610:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_UNSEC:
 611:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 612:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000014);
 860              		.loc 1 612 0
 861 0074 786A     		ldr	r0, [r7, #36]
 862 0076 4FF01401 		mov	r1, #20
 863 007a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 864 007e 7862     		str	r0, [r7, #36]
 613:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulSsidLen);
 865              		.loc 1 613 0
 866 0080 786A     		ldr	r0, [r7, #36]
 867 0082 7968     		ldr	r1, [r7, #4]
 868 0084 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 869 0088 7862     		str	r0, [r7, #36]
 614:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT16_TO_STREAM(args, 0);
 870              		.loc 1 614 0
 871 008a 786A     		ldr	r0, [r7, #36]
 872 008c 4FF00001 		mov	r1, #0
 873 0090 FFF7FEFF 		bl	UINT16_TO_STREAM_f
 874 0094 7862     		str	r0, [r7, #36]
 615:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 875              		.loc 1 615 0
 876 0096 3B68     		ldr	r3, [r7, #0]
 877 0098 002B     		cmp	r3, #0
 878 009a 14D0     		beq	.L37
 879              	.LBB6:
 616:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 617:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, ucBssid, ETH_ALEN);
 880              		.loc 1 617 0
 881 009c 4FF00004 		mov	r4, #0
 882 00a0 0DE0     		b	.L38
 883              	.L39:
 884              		.loc 1 617 0 is_stmt 0 discriminator 2
 885 00a2 23B2     		sxth	r3, r4
 886 00a4 3A68     		ldr	r2, [r7, #0]
 887 00a6 D318     		adds	r3, r2, r3
 888 00a8 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 889 00aa 7B6A     		ldr	r3, [r7, #36]
 890 00ac 1A70     		strb	r2, [r3, #0]
 891 00ae 7B6A     		ldr	r3, [r7, #36]
 892 00b0 03F10103 		add	r3, r3, #1
 893 00b4 7B62     		str	r3, [r7, #36]
 894 00b6 2346     		mov	r3, r4	@ movhi
 895 00b8 03F10103 		add	r3, r3, #1
 896 00bc 9CB2     		uxth	r4, r3
 897              	.L38:
 898              		.loc 1 617 0 discriminator 1
 899 00be 23B2     		sxth	r3, r4
 900 00c0 052B     		cmp	r3, #5
 901 00c2 EEDD     		ble	.L39
 902              		.loc 1 617 0
 903 00c4 14E0     		b	.L40
 904              	.L37:
 905              	.LBE6:
 906              	.LBB7:
 618:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 619:../libraries/CC3000_Host_Driver/wlan.c **** 			else
 620:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 621:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 907              		.loc 1 621 0 is_stmt 1
 908 00c6 4FF00004 		mov	r4, #0
 909 00ca 0EE0     		b	.L41
 910              	.L42:
 911              		.loc 1 621 0 is_stmt 0 discriminator 2
 912 00cc 23B2     		sxth	r3, r4
 913 00ce 07F11002 		add	r2, r7, #16
 914 00d2 D318     		adds	r3, r2, r3
 915 00d4 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 916 00d6 7B6A     		ldr	r3, [r7, #36]
 917 00d8 1A70     		strb	r2, [r3, #0]
 918 00da 7B6A     		ldr	r3, [r7, #36]
 919 00dc 03F10103 		add	r3, r3, #1
 920 00e0 7B62     		str	r3, [r7, #36]
 921 00e2 2346     		mov	r3, r4	@ movhi
 922 00e4 03F10103 		add	r3, r3, #1
 923 00e8 9CB2     		uxth	r4, r3
 924              	.L41:
 925              		.loc 1 621 0 discriminator 1
 926 00ea 23B2     		sxth	r3, r4
 927 00ec 052B     		cmp	r3, #5
 928 00ee EDDD     		ble	.L42
 929              	.L40:
 930              	.LBE7:
 622:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 623:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPriority);
 931              		.loc 1 623 0 is_stmt 1
 932 00f0 786A     		ldr	r0, [r7, #36]
 933 00f2 396C     		ldr	r1, [r7, #64]
 934 00f4 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 935 00f8 7862     		str	r0, [r7, #36]
 936              	.LBB8:
 624:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucSsid, ulSsidLen);
 937              		.loc 1 624 0
 938 00fa 4FF00004 		mov	r4, #0
 939 00fe 0DE0     		b	.L43
 940              	.L44:
 941              		.loc 1 624 0 is_stmt 0 discriminator 2
 942 0100 23B2     		sxth	r3, r4
 943 0102 BA68     		ldr	r2, [r7, #8]
 944 0104 D318     		adds	r3, r2, r3
 945 0106 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 946 0108 7B6A     		ldr	r3, [r7, #36]
 947 010a 1A70     		strb	r2, [r3, #0]
 948 010c 7B6A     		ldr	r3, [r7, #36]
 949 010e 03F10103 		add	r3, r3, #1
 950 0112 7B62     		str	r3, [r7, #36]
 951 0114 2346     		mov	r3, r4	@ movhi
 952 0116 03F10103 		add	r3, r3, #1
 953 011a 9CB2     		uxth	r4, r3
 954              	.L43:
 955              		.loc 1 624 0 discriminator 1
 956 011c 22B2     		sxth	r2, r4
 957 011e 7B68     		ldr	r3, [r7, #4]
 958 0120 9A42     		cmp	r2, r3
 959 0122 EDD3     		bcc	.L44
 960              	.LBE8:
 625:../libraries/CC3000_Host_Driver/wlan.c **** 			
 626:../libraries/CC3000_Host_Driver/wlan.c **** 			arg_len = WLAN_ADD_PROFILE_NOSEC_PARAM_LEN + ulSsidLen;
 961              		.loc 1 626 0 is_stmt 1
 962 0124 7B68     		ldr	r3, [r7, #4]
 963 0126 9BB2     		uxth	r3, r3
 964 0128 03F11803 		add	r3, r3, #24
 965 012c FB85     		strh	r3, [r7, #46]	@ movhi
 627:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 628:../libraries/CC3000_Host_Driver/wlan.c **** 		break;
 966              		.loc 1 628 0
 967 012e 30E1     		b	.L32
 968              	.L34:
 629:../libraries/CC3000_Host_Driver/wlan.c **** 		
 630:../libraries/CC3000_Host_Driver/wlan.c **** 		//WEP
 631:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WEP:
 632:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 633:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000020);
 969              		.loc 1 633 0
 970 0130 786A     		ldr	r0, [r7, #36]
 971 0132 4FF02001 		mov	r1, #32
 972 0136 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 973 013a 7862     		str	r0, [r7, #36]
 634:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulSsidLen);
 974              		.loc 1 634 0
 975 013c 786A     		ldr	r0, [r7, #36]
 976 013e 7968     		ldr	r1, [r7, #4]
 977 0140 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 978 0144 7862     		str	r0, [r7, #36]
 635:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT16_TO_STREAM(args, 0);
 979              		.loc 1 635 0
 980 0146 786A     		ldr	r0, [r7, #36]
 981 0148 4FF00001 		mov	r1, #0
 982 014c FFF7FEFF 		bl	UINT16_TO_STREAM_f
 983 0150 7862     		str	r0, [r7, #36]
 636:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 984              		.loc 1 636 0
 985 0152 3B68     		ldr	r3, [r7, #0]
 986 0154 002B     		cmp	r3, #0
 987 0156 14D0     		beq	.L45
 988              	.LBB9:
 637:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 638:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, ucBssid, ETH_ALEN);
 989              		.loc 1 638 0
 990 0158 4FF00004 		mov	r4, #0
 991 015c 0DE0     		b	.L46
 992              	.L47:
 993              		.loc 1 638 0 is_stmt 0 discriminator 2
 994 015e 23B2     		sxth	r3, r4
 995 0160 3A68     		ldr	r2, [r7, #0]
 996 0162 D318     		adds	r3, r2, r3
 997 0164 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 998 0166 7B6A     		ldr	r3, [r7, #36]
 999 0168 1A70     		strb	r2, [r3, #0]
 1000 016a 7B6A     		ldr	r3, [r7, #36]
 1001 016c 03F10103 		add	r3, r3, #1
 1002 0170 7B62     		str	r3, [r7, #36]
 1003 0172 2346     		mov	r3, r4	@ movhi
 1004 0174 03F10103 		add	r3, r3, #1
 1005 0178 9CB2     		uxth	r4, r3
 1006              	.L46:
 1007              		.loc 1 638 0 discriminator 1
 1008 017a 23B2     		sxth	r3, r4
 1009 017c 052B     		cmp	r3, #5
 1010 017e EEDD     		ble	.L47
 1011              		.loc 1 638 0
 1012 0180 14E0     		b	.L48
 1013              	.L45:
 1014              	.LBE9:
 1015              	.LBB10:
 639:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 640:../libraries/CC3000_Host_Driver/wlan.c **** 			else
 641:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 642:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 1016              		.loc 1 642 0 is_stmt 1
 1017 0182 4FF00004 		mov	r4, #0
 1018 0186 0EE0     		b	.L49
 1019              	.L50:
 1020              		.loc 1 642 0 is_stmt 0 discriminator 2
 1021 0188 23B2     		sxth	r3, r4
 1022 018a 07F11002 		add	r2, r7, #16
 1023 018e D318     		adds	r3, r2, r3
 1024 0190 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1025 0192 7B6A     		ldr	r3, [r7, #36]
 1026 0194 1A70     		strb	r2, [r3, #0]
 1027 0196 7B6A     		ldr	r3, [r7, #36]
 1028 0198 03F10103 		add	r3, r3, #1
 1029 019c 7B62     		str	r3, [r7, #36]
 1030 019e 2346     		mov	r3, r4	@ movhi
 1031 01a0 03F10103 		add	r3, r3, #1
 1032 01a4 9CB2     		uxth	r4, r3
 1033              	.L49:
 1034              		.loc 1 642 0 discriminator 1
 1035 01a6 23B2     		sxth	r3, r4
 1036 01a8 052B     		cmp	r3, #5
 1037 01aa EDDD     		ble	.L50
 1038              	.L48:
 1039              	.LBE10:
 643:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 644:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPriority);
 1040              		.loc 1 644 0 is_stmt 1
 1041 01ac 786A     		ldr	r0, [r7, #36]
 1042 01ae 396C     		ldr	r1, [r7, #64]
 1043 01b0 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1044 01b4 7862     		str	r0, [r7, #36]
 645:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x0000000C + ulSsidLen);
 1045              		.loc 1 645 0
 1046 01b6 7B68     		ldr	r3, [r7, #4]
 1047 01b8 03F10C03 		add	r3, r3, #12
 1048 01bc 786A     		ldr	r0, [r7, #36]
 1049 01be 1946     		mov	r1, r3
 1050 01c0 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1051 01c4 7862     		str	r0, [r7, #36]
 646:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPairwiseCipher_Or_TxKeyLen);
 1052              		.loc 1 646 0
 1053 01c6 786A     		ldr	r0, [r7, #36]
 1054 01c8 796C     		ldr	r1, [r7, #68]
 1055 01ca FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1056 01ce 7862     		str	r0, [r7, #36]
 647:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulGroupCipher_TxKeyIndex);
 1057              		.loc 1 647 0
 1058 01d0 786A     		ldr	r0, [r7, #36]
 1059 01d2 B96C     		ldr	r1, [r7, #72]
 1060 01d4 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1061 01d8 7862     		str	r0, [r7, #36]
 1062              	.LBB11:
 648:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucSsid, ulSsidLen);
 1063              		.loc 1 648 0
 1064 01da 4FF00004 		mov	r4, #0
 1065 01de 0DE0     		b	.L51
 1066              	.L52:
 1067              		.loc 1 648 0 is_stmt 0 discriminator 2
 1068 01e0 23B2     		sxth	r3, r4
 1069 01e2 BA68     		ldr	r2, [r7, #8]
 1070 01e4 D318     		adds	r3, r2, r3
 1071 01e6 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1072 01e8 7B6A     		ldr	r3, [r7, #36]
 1073 01ea 1A70     		strb	r2, [r3, #0]
 1074 01ec 7B6A     		ldr	r3, [r7, #36]
 1075 01ee 03F10103 		add	r3, r3, #1
 1076 01f2 7B62     		str	r3, [r7, #36]
 1077 01f4 2346     		mov	r3, r4	@ movhi
 1078 01f6 03F10103 		add	r3, r3, #1
 1079 01fa 9CB2     		uxth	r4, r3
 1080              	.L51:
 1081              		.loc 1 648 0 discriminator 1
 1082 01fc 22B2     		sxth	r2, r4
 1083 01fe 7B68     		ldr	r3, [r7, #4]
 1084 0200 9A42     		cmp	r2, r3
 1085 0202 EDD3     		bcc	.L52
 1086              	.LBE11:
 649:../libraries/CC3000_Host_Driver/wlan.c **** 			
 650:../libraries/CC3000_Host_Driver/wlan.c **** 			for(i = 0; i < 4; i++)
 1087              		.loc 1 650 0 is_stmt 1
 1088 0204 4FF00003 		mov	r3, #0
 1089 0208 BB62     		str	r3, [r7, #40]
 1090 020a 1FE0     		b	.L53
 1091              	.L56:
 1092              	.LBB12:
 651:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 652:../libraries/CC3000_Host_Driver/wlan.c **** 				unsigned char *p = &ucPf_OrKey[i * ulPairwiseCipher_Or_TxKeyLen];
 1093              		.loc 1 652 0
 1094 020c BB6A     		ldr	r3, [r7, #40]
 1095 020e 7A6C     		ldr	r2, [r7, #68]
 1096 0210 02FB03F3 		mul	r3, r2, r3
 1097 0214 3A6D     		ldr	r2, [r7, #80]
 1098 0216 D318     		adds	r3, r2, r3
 1099 0218 FB61     		str	r3, [r7, #28]
 1100              	.LBB13:
 653:../libraries/CC3000_Host_Driver/wlan.c **** 				
 654:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, p, ulPairwiseCipher_Or_TxKeyLen);
 1101              		.loc 1 654 0
 1102 021a 4FF00004 		mov	r4, #0
 1103 021e 0DE0     		b	.L54
 1104              	.L55:
 1105              		.loc 1 654 0 is_stmt 0 discriminator 2
 1106 0220 23B2     		sxth	r3, r4
 1107 0222 FA69     		ldr	r2, [r7, #28]
 1108 0224 D318     		adds	r3, r2, r3
 1109 0226 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1110 0228 7B6A     		ldr	r3, [r7, #36]
 1111 022a 1A70     		strb	r2, [r3, #0]
 1112 022c 7B6A     		ldr	r3, [r7, #36]
 1113 022e 03F10103 		add	r3, r3, #1
 1114 0232 7B62     		str	r3, [r7, #36]
 1115 0234 2346     		mov	r3, r4	@ movhi
 1116 0236 03F10103 		add	r3, r3, #1
 1117 023a 9CB2     		uxth	r4, r3
 1118              	.L54:
 1119              		.loc 1 654 0 discriminator 1
 1120 023c 22B2     		sxth	r2, r4
 1121 023e 7B6C     		ldr	r3, [r7, #68]
 1122 0240 9A42     		cmp	r2, r3
 1123 0242 EDD3     		bcc	.L55
 1124              	.LBE13:
 1125              	.LBE12:
 650:../libraries/CC3000_Host_Driver/wlan.c **** 			for(i = 0; i < 4; i++)
 1126              		.loc 1 650 0 is_stmt 1
 1127 0244 BB6A     		ldr	r3, [r7, #40]
 1128 0246 03F10103 		add	r3, r3, #1
 1129 024a BB62     		str	r3, [r7, #40]
 1130              	.L53:
 650:../libraries/CC3000_Host_Driver/wlan.c **** 			for(i = 0; i < 4; i++)
 1131              		.loc 1 650 0 is_stmt 0 discriminator 1
 1132 024c BB6A     		ldr	r3, [r7, #40]
 1133 024e 032B     		cmp	r3, #3
 1134 0250 DCDD     		ble	.L56
 655:../libraries/CC3000_Host_Driver/wlan.c **** 			}		
 656:../libraries/CC3000_Host_Driver/wlan.c **** 			
 657:../libraries/CC3000_Host_Driver/wlan.c **** 			arg_len = WLAN_ADD_PROFILE_WEP_PARAM_LEN + ulSsidLen + 
 1135              		.loc 1 657 0 is_stmt 1
 1136 0252 7B6C     		ldr	r3, [r7, #68]
 1137 0254 9BB2     		uxth	r3, r3
 1138 0256 4FEA8303 		lsl	r3, r3, #2
 1139 025a 9AB2     		uxth	r2, r3
 1140 025c 7B68     		ldr	r3, [r7, #4]
 1141 025e 9BB2     		uxth	r3, r3
 1142 0260 D318     		adds	r3, r2, r3
 1143 0262 9BB2     		uxth	r3, r3
 1144 0264 03F12403 		add	r3, r3, #36
 1145 0268 FB85     		strh	r3, [r7, #46]	@ movhi
 658:../libraries/CC3000_Host_Driver/wlan.c **** 				ulPairwiseCipher_Or_TxKeyLen * 4;
 659:../libraries/CC3000_Host_Driver/wlan.c **** 			
 660:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 661:../libraries/CC3000_Host_Driver/wlan.c **** 		break;
 1146              		.loc 1 661 0
 1147 026a 92E0     		b	.L32
 1148              	.L35:
 662:../libraries/CC3000_Host_Driver/wlan.c **** 		
 663:../libraries/CC3000_Host_Driver/wlan.c **** 		//WPA
 664:../libraries/CC3000_Host_Driver/wlan.c **** 		//WPA2
 665:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA:
 666:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA2:
 667:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 668:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000028);
 1149              		.loc 1 668 0
 1150 026c 786A     		ldr	r0, [r7, #36]
 1151 026e 4FF02801 		mov	r1, #40
 1152 0272 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1153 0276 7862     		str	r0, [r7, #36]
 669:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulSsidLen);
 1154              		.loc 1 669 0
 1155 0278 786A     		ldr	r0, [r7, #36]
 1156 027a 7968     		ldr	r1, [r7, #4]
 1157 027c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1158 0280 7862     		str	r0, [r7, #36]
 670:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT16_TO_STREAM(args, 0);
 1159              		.loc 1 670 0
 1160 0282 786A     		ldr	r0, [r7, #36]
 1161 0284 4FF00001 		mov	r1, #0
 1162 0288 FFF7FEFF 		bl	UINT16_TO_STREAM_f
 1163 028c 7862     		str	r0, [r7, #36]
 671:../libraries/CC3000_Host_Driver/wlan.c **** 			if(ucBssid)
 1164              		.loc 1 671 0
 1165 028e 3B68     		ldr	r3, [r7, #0]
 1166 0290 002B     		cmp	r3, #0
 1167 0292 14D0     		beq	.L57
 1168              	.LBB14:
 672:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 673:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, ucBssid, ETH_ALEN);
 1169              		.loc 1 673 0
 1170 0294 4FF00004 		mov	r4, #0
 1171 0298 0DE0     		b	.L58
 1172              	.L59:
 1173              		.loc 1 673 0 is_stmt 0 discriminator 2
 1174 029a 23B2     		sxth	r3, r4
 1175 029c 3A68     		ldr	r2, [r7, #0]
 1176 029e D318     		adds	r3, r2, r3
 1177 02a0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1178 02a2 7B6A     		ldr	r3, [r7, #36]
 1179 02a4 1A70     		strb	r2, [r3, #0]
 1180 02a6 7B6A     		ldr	r3, [r7, #36]
 1181 02a8 03F10103 		add	r3, r3, #1
 1182 02ac 7B62     		str	r3, [r7, #36]
 1183 02ae 2346     		mov	r3, r4	@ movhi
 1184 02b0 03F10103 		add	r3, r3, #1
 1185 02b4 9CB2     		uxth	r4, r3
 1186              	.L58:
 1187              		.loc 1 673 0 discriminator 1
 1188 02b6 23B2     		sxth	r3, r4
 1189 02b8 052B     		cmp	r3, #5
 1190 02ba EEDD     		ble	.L59
 1191              		.loc 1 673 0
 1192 02bc 14E0     		b	.L60
 1193              	.L57:
 1194              	.LBE14:
 1195              	.LBB15:
 674:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 675:../libraries/CC3000_Host_Driver/wlan.c **** 			else
 676:../libraries/CC3000_Host_Driver/wlan.c **** 			{
 677:../libraries/CC3000_Host_Driver/wlan.c **** 				ARRAY_TO_STREAM(args, bssid_zero, ETH_ALEN);
 1196              		.loc 1 677 0 is_stmt 1
 1197 02be 4FF00004 		mov	r4, #0
 1198 02c2 0EE0     		b	.L61
 1199              	.L62:
 1200              		.loc 1 677 0 is_stmt 0 discriminator 2
 1201 02c4 23B2     		sxth	r3, r4
 1202 02c6 07F11002 		add	r2, r7, #16
 1203 02ca D318     		adds	r3, r2, r3
 1204 02cc 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1205 02ce 7B6A     		ldr	r3, [r7, #36]
 1206 02d0 1A70     		strb	r2, [r3, #0]
 1207 02d2 7B6A     		ldr	r3, [r7, #36]
 1208 02d4 03F10103 		add	r3, r3, #1
 1209 02d8 7B62     		str	r3, [r7, #36]
 1210 02da 2346     		mov	r3, r4	@ movhi
 1211 02dc 03F10103 		add	r3, r3, #1
 1212 02e0 9CB2     		uxth	r4, r3
 1213              	.L61:
 1214              		.loc 1 677 0 discriminator 1
 1215 02e2 23B2     		sxth	r3, r4
 1216 02e4 052B     		cmp	r3, #5
 1217 02e6 EDDD     		ble	.L62
 1218              	.L60:
 1219              	.LBE15:
 678:../libraries/CC3000_Host_Driver/wlan.c **** 			}
 679:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPriority);
 1220              		.loc 1 679 0 is_stmt 1
 1221 02e8 786A     		ldr	r0, [r7, #36]
 1222 02ea 396C     		ldr	r1, [r7, #64]
 1223 02ec FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1224 02f0 7862     		str	r0, [r7, #36]
 680:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPairwiseCipher_Or_TxKeyLen);
 1225              		.loc 1 680 0
 1226 02f2 786A     		ldr	r0, [r7, #36]
 1227 02f4 796C     		ldr	r1, [r7, #68]
 1228 02f6 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1229 02fa 7862     		str	r0, [r7, #36]
 681:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulGroupCipher_TxKeyIndex);
 1230              		.loc 1 681 0
 1231 02fc 786A     		ldr	r0, [r7, #36]
 1232 02fe B96C     		ldr	r1, [r7, #72]
 1233 0300 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1234 0304 7862     		str	r0, [r7, #36]
 682:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulKeyMgmt);
 1235              		.loc 1 682 0
 1236 0306 786A     		ldr	r0, [r7, #36]
 1237 0308 F96C     		ldr	r1, [r7, #76]
 1238 030a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1239 030e 7862     		str	r0, [r7, #36]
 683:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, 0x00000008 + ulSsidLen);
 1240              		.loc 1 683 0
 1241 0310 7B68     		ldr	r3, [r7, #4]
 1242 0312 03F10803 		add	r3, r3, #8
 1243 0316 786A     		ldr	r0, [r7, #36]
 1244 0318 1946     		mov	r1, r3
 1245 031a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1246 031e 7862     		str	r0, [r7, #36]
 684:../libraries/CC3000_Host_Driver/wlan.c **** 			args = UINT32_TO_STREAM(args, ulPassPhraseLen);
 1247              		.loc 1 684 0
 1248 0320 786A     		ldr	r0, [r7, #36]
 1249 0322 796D     		ldr	r1, [r7, #84]
 1250 0324 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1251 0328 7862     		str	r0, [r7, #36]
 1252              	.LBB16:
 685:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucSsid, ulSsidLen);
 1253              		.loc 1 685 0
 1254 032a 4FF00004 		mov	r4, #0
 1255 032e 0DE0     		b	.L63
 1256              	.L64:
 1257              		.loc 1 685 0 is_stmt 0 discriminator 2
 1258 0330 23B2     		sxth	r3, r4
 1259 0332 BA68     		ldr	r2, [r7, #8]
 1260 0334 D318     		adds	r3, r2, r3
 1261 0336 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1262 0338 7B6A     		ldr	r3, [r7, #36]
 1263 033a 1A70     		strb	r2, [r3, #0]
 1264 033c 7B6A     		ldr	r3, [r7, #36]
 1265 033e 03F10103 		add	r3, r3, #1
 1266 0342 7B62     		str	r3, [r7, #36]
 1267 0344 2346     		mov	r3, r4	@ movhi
 1268 0346 03F10103 		add	r3, r3, #1
 1269 034a 9CB2     		uxth	r4, r3
 1270              	.L63:
 1271              		.loc 1 685 0 discriminator 1
 1272 034c 22B2     		sxth	r2, r4
 1273 034e 7B68     		ldr	r3, [r7, #4]
 1274 0350 9A42     		cmp	r2, r3
 1275 0352 EDD3     		bcc	.L64
 1276              	.LBE16:
 1277              	.LBB17:
 686:../libraries/CC3000_Host_Driver/wlan.c **** 			ARRAY_TO_STREAM(args, ucPf_OrKey, ulPassPhraseLen);
 1278              		.loc 1 686 0 is_stmt 1
 1279 0354 4FF00004 		mov	r4, #0
 1280 0358 0DE0     		b	.L65
 1281              	.L66:
 1282              		.loc 1 686 0 is_stmt 0 discriminator 2
 1283 035a 23B2     		sxth	r3, r4
 1284 035c 3A6D     		ldr	r2, [r7, #80]
 1285 035e D318     		adds	r3, r2, r3
 1286 0360 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1287 0362 7B6A     		ldr	r3, [r7, #36]
 1288 0364 1A70     		strb	r2, [r3, #0]
 1289 0366 7B6A     		ldr	r3, [r7, #36]
 1290 0368 03F10103 		add	r3, r3, #1
 1291 036c 7B62     		str	r3, [r7, #36]
 1292 036e 2346     		mov	r3, r4	@ movhi
 1293 0370 03F10103 		add	r3, r3, #1
 1294 0374 9CB2     		uxth	r4, r3
 1295              	.L65:
 1296              		.loc 1 686 0 discriminator 1
 1297 0376 22B2     		sxth	r2, r4
 1298 0378 7B6D     		ldr	r3, [r7, #84]
 1299 037a 9A42     		cmp	r2, r3
 1300 037c EDD3     		bcc	.L66
 1301              	.LBE17:
 687:../libraries/CC3000_Host_Driver/wlan.c **** 			
 688:../libraries/CC3000_Host_Driver/wlan.c **** 			arg_len = WLAN_ADD_PROFILE_WPA_PARAM_LEN + ulSsidLen + ulPassPhraseLen;
 1302              		.loc 1 688 0 is_stmt 1
 1303 037e 7B68     		ldr	r3, [r7, #4]
 1304 0380 9AB2     		uxth	r2, r3
 1305 0382 7B6D     		ldr	r3, [r7, #84]
 1306 0384 9BB2     		uxth	r3, r3
 1307 0386 D318     		adds	r3, r2, r3
 1308 0388 9BB2     		uxth	r3, r3
 1309 038a 03F12C03 		add	r3, r3, #44
 1310 038e FB85     		strh	r3, [r7, #46]	@ movhi
 689:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 690:../libraries/CC3000_Host_Driver/wlan.c **** 		
 691:../libraries/CC3000_Host_Driver/wlan.c **** 		break;
 1311              		.loc 1 691 0
 1312 0390 00BF     		nop
 1313              	.L32:
 692:../libraries/CC3000_Host_Driver/wlan.c **** 	}    
 693:../libraries/CC3000_Host_Driver/wlan.c **** 	
 694:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 695:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_ADD_PROFILE,
 1314              		.loc 1 695 0
 1315 0392 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 1316 0394 DBB2     		uxtb	r3, r3
 1317 0396 4FF00500 		mov	r0, #5
 1318 039a 396A     		ldr	r1, [r7, #32]
 1319 039c 1A46     		mov	r2, r3
 1320 039e FFF7FEFF 		bl	hci_command_send
 696:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, arg_len);
 697:../libraries/CC3000_Host_Driver/wlan.c **** 	
 698:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 699:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_ADD_PROFILE, &ret);
 1321              		.loc 1 699 0
 1322 03a2 07F11803 		add	r3, r7, #24
 1323 03a6 4FF00500 		mov	r0, #5
 1324 03aa 1946     		mov	r1, r3
 1325 03ac FFF7FEFF 		bl	SimpleLinkWaitEvent
 700:../libraries/CC3000_Host_Driver/wlan.c **** 	
 701:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 1326              		.loc 1 701 0
 1327 03b0 BB69     		ldr	r3, [r7, #24]
 702:../libraries/CC3000_Host_Driver/wlan.c **** }
 1328              		.loc 1 702 0
 1329 03b2 1846     		mov	r0, r3
 1330 03b4 07F13407 		add	r7, r7, #52
 1331 03b8 BD46     		mov	sp, r7
 1332 03ba 90BD     		pop	{r4, r7, pc}
 1333              		.cfi_endproc
 1334              	.LFE64:
 1336              		.section	.text.wlan_ioctl_del_profile,"ax",%progbits
 1337              		.align	2
 1338              		.global	wlan_ioctl_del_profile
 1339              		.thumb
 1340              		.thumb_func
 1342              	wlan_ioctl_del_profile:
 1343              	.LFB65:
 703:../libraries/CC3000_Host_Driver/wlan.c **** #else
 704:../libraries/CC3000_Host_Driver/wlan.c **** long
 705:../libraries/CC3000_Host_Driver/wlan.c **** wlan_add_profile(unsigned long ulSecType, 
 706:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucSsid,
 707:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulSsidLen, 
 708:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char *ucBssid,
 709:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPriority,
 710:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPairwiseCipher_Or_TxKeyLen,
 711:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulGroupCipher_TxKeyIndex,
 712:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulKeyMgmt,
 713:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned char* ucPf_OrKey,
 714:../libraries/CC3000_Host_Driver/wlan.c **** 								 unsigned long ulPassPhraseLen)
 715:../libraries/CC3000_Host_Driver/wlan.c **** {
 716:../libraries/CC3000_Host_Driver/wlan.c **** 	return -1;
 717:../libraries/CC3000_Host_Driver/wlan.c **** }
 718:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 719:../libraries/CC3000_Host_Driver/wlan.c **** 
 720:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 721:../libraries/CC3000_Host_Driver/wlan.c **** //
 722:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_del_profile
 723:../libraries/CC3000_Host_Driver/wlan.c **** //!
 724:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    index   number of profile to delete
 725:../libraries/CC3000_Host_Driver/wlan.c **** //!
 726:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 727:../libraries/CC3000_Host_Driver/wlan.c **** //!
 728:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief     Delete WLAN profile 
 729:../libraries/CC3000_Host_Driver/wlan.c **** //!
 730:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note      In order to delete all stored profile, set index to 255.
 731:../libraries/CC3000_Host_Driver/wlan.c **** //!
 732:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_add_profile 
 733:../libraries/CC3000_Host_Driver/wlan.c **** //
 734:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 735:../libraries/CC3000_Host_Driver/wlan.c **** 
 736:../libraries/CC3000_Host_Driver/wlan.c **** long
 737:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_del_profile(unsigned long ulIndex)
 738:../libraries/CC3000_Host_Driver/wlan.c **** {
 1344              		.loc 1 738 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 24
 1347              		@ frame_needed = 1, uses_anonymous_args = 0
 1348 0000 80B5     		push	{r7, lr}
 1349              	.LCFI26:
 1350              		.cfi_def_cfa_offset 8
 1351              		.cfi_offset 7, -8
 1352              		.cfi_offset 14, -4
 1353 0002 86B0     		sub	sp, sp, #24
 1354              	.LCFI27:
 1355              		.cfi_def_cfa_offset 32
 1356 0004 00AF     		add	r7, sp, #0
 1357              	.LCFI28:
 1358              		.cfi_def_cfa_register 7
 1359 0006 7860     		str	r0, [r7, #4]
 739:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 740:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 741:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 742:../libraries/CC3000_Host_Driver/wlan.c **** 	
 743:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1360              		.loc 1 743 0
 1361 0008 40F20003 		movw	r3, #:lower16:tSLInformation
 1362 000c C0F20003 		movt	r3, #:upper16:tSLInformation
 1363 0010 9B68     		ldr	r3, [r3, #8]
 1364 0012 7B61     		str	r3, [r7, #20]
 744:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 1365              		.loc 1 744 0
 1366 0014 7B69     		ldr	r3, [r7, #20]
 1367 0016 03F10903 		add	r3, r3, #9
 1368 001a 3B61     		str	r3, [r7, #16]
 745:../libraries/CC3000_Host_Driver/wlan.c **** 	
 746:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
 747:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulIndex);
 1369              		.loc 1 747 0
 1370 001c 3869     		ldr	r0, [r7, #16]
 1371 001e 7968     		ldr	r1, [r7, #4]
 1372 0020 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1373 0024 3861     		str	r0, [r7, #16]
 748:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1374              		.loc 1 748 0
 1375 0026 4FF0FF33 		mov	r3, #-1
 1376 002a FB60     		str	r3, [r7, #12]
 749:../libraries/CC3000_Host_Driver/wlan.c **** 	
 750:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 751:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_DEL_PROFILE,
 1377              		.loc 1 751 0
 1378 002c 4FF00600 		mov	r0, #6
 1379 0030 7969     		ldr	r1, [r7, #20]
 1380 0032 4FF00402 		mov	r2, #4
 1381 0036 FFF7FEFF 		bl	hci_command_send
 752:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_DEL_PROFILE_PARAMS_LEN);
 753:../libraries/CC3000_Host_Driver/wlan.c **** 	
 754:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 755:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_DEL_PROFILE, &ret);
 1382              		.loc 1 755 0
 1383 003a 07F10C03 		add	r3, r7, #12
 1384 003e 4FF00600 		mov	r0, #6
 1385 0042 1946     		mov	r1, r3
 1386 0044 FFF7FEFF 		bl	SimpleLinkWaitEvent
 756:../libraries/CC3000_Host_Driver/wlan.c **** 	
 757:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 1387              		.loc 1 757 0
 1388 0048 FB68     		ldr	r3, [r7, #12]
 758:../libraries/CC3000_Host_Driver/wlan.c **** }
 1389              		.loc 1 758 0
 1390 004a 1846     		mov	r0, r3
 1391 004c 07F11807 		add	r7, r7, #24
 1392 0050 BD46     		mov	sp, r7
 1393 0052 80BD     		pop	{r7, pc}
 1394              		.cfi_endproc
 1395              	.LFE65:
 1397              		.section	.text.wlan_ioctl_get_scan_results,"ax",%progbits
 1398              		.align	2
 1399              		.global	wlan_ioctl_get_scan_results
 1400              		.thumb
 1401              		.thumb_func
 1403              	wlan_ioctl_get_scan_results:
 1404              	.LFB66:
 759:../libraries/CC3000_Host_Driver/wlan.c **** 
 760:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 761:../libraries/CC3000_Host_Driver/wlan.c **** //
 762:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_get_scan_results
 763:../libraries/CC3000_Host_Driver/wlan.c **** //!
 764:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param[in]    scan_timeout   parameter not supported
 765:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param[out]   ucResults  scan results (_wlan_full_scan_results_args_t)
 766:../libraries/CC3000_Host_Driver/wlan.c **** //!
 767:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 768:../libraries/CC3000_Host_Driver/wlan.c **** //!
 769:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Gets entry from scan result table.
 770:../libraries/CC3000_Host_Driver/wlan.c **** //!            The scan results are returned one by one, and each entry 
 771:../libraries/CC3000_Host_Driver/wlan.c **** //!            represents a single AP found in the area. The following is a 
 772:../libraries/CC3000_Host_Driver/wlan.c **** //!            format of the scan result: 
 773:../libraries/CC3000_Host_Driver/wlan.c **** //!        	 - 4 Bytes: number of networks found
 774:../libraries/CC3000_Host_Driver/wlan.c **** //!          - 4 Bytes: The status of the scan: 0 - aged results,
 775:../libraries/CC3000_Host_Driver/wlan.c **** //!                     1 - results valid, 2 - no results
 776:../libraries/CC3000_Host_Driver/wlan.c **** //!          - 42 bytes: Result entry, where the bytes are arranged as  follows:
 777:../libraries/CC3000_Host_Driver/wlan.c **** //!              
 778:../libraries/CC3000_Host_Driver/wlan.c **** //!          				- 1 bit isValid - is result valid or not
 779:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 7 bits rssi - RSSI value;	 
 780:../libraries/CC3000_Host_Driver/wlan.c **** //!                 - 2 bits: securityMode - security mode of the AP:
 781:../libraries/CC3000_Host_Driver/wlan.c **** //!                           0 - Open, 1 - WEP, 2 WPA, 3 WPA2
 782:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 6 bits: SSID name length
 783:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 2 bytes: the time at which the entry has entered into 
 784:../libraries/CC3000_Host_Driver/wlan.c **** //!                            scans result table
 785:../libraries/CC3000_Host_Driver/wlan.c **** //!         				- 32 bytes: SSID name
 786:../libraries/CC3000_Host_Driver/wlan.c **** //!                 - 6 bytes:	BSSID 
 787:../libraries/CC3000_Host_Driver/wlan.c **** //!
 788:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note      scan_timeout, is not supported on this version.
 789:../libraries/CC3000_Host_Driver/wlan.c **** //!
 790:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_ioctl_set_scan_params 
 791:../libraries/CC3000_Host_Driver/wlan.c **** //
 792:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 793:../libraries/CC3000_Host_Driver/wlan.c **** 
 794:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 795:../libraries/CC3000_Host_Driver/wlan.c **** long
 796:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_get_scan_results(unsigned long ulScanTimeout,
 797:../libraries/CC3000_Host_Driver/wlan.c ****                             unsigned char *ucResults)
 798:../libraries/CC3000_Host_Driver/wlan.c **** {
 1405              		.loc 1 798 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 16
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              	.LCFI29:
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 84B0     		sub	sp, sp, #16
 1415              	.LCFI30:
 1416              		.cfi_def_cfa_offset 24
 1417 0004 00AF     		add	r7, sp, #0
 1418              	.LCFI31:
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 1421 0008 3960     		str	r1, [r7, #0]
 799:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 800:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 801:../libraries/CC3000_Host_Driver/wlan.c **** 	
 802:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1422              		.loc 1 802 0
 1423 000a 40F20003 		movw	r3, #:lower16:tSLInformation
 1424 000e C0F20003 		movt	r3, #:upper16:tSLInformation
 1425 0012 9B68     		ldr	r3, [r3, #8]
 1426 0014 FB60     		str	r3, [r7, #12]
 803:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 1427              		.loc 1 803 0
 1428 0016 FB68     		ldr	r3, [r7, #12]
 1429 0018 03F10903 		add	r3, r3, #9
 1430 001c BB60     		str	r3, [r7, #8]
 804:../libraries/CC3000_Host_Driver/wlan.c **** 	
 805:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in temporary command buffer
 806:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulScanTimeout);
 1431              		.loc 1 806 0
 1432 001e B868     		ldr	r0, [r7, #8]
 1433 0020 7968     		ldr	r1, [r7, #4]
 1434 0022 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1435 0026 B860     		str	r0, [r7, #8]
 807:../libraries/CC3000_Host_Driver/wlan.c **** 	
 808:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 809:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_GET_SCAN_RESULTS,
 1436              		.loc 1 809 0
 1437 0028 4FF00700 		mov	r0, #7
 1438 002c F968     		ldr	r1, [r7, #12]
 1439 002e 4FF00402 		mov	r2, #4
 1440 0032 FFF7FEFF 		bl	hci_command_send
 810:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_GET_SCAN_RESULTS_PARAMS_LEN);
 811:../libraries/CC3000_Host_Driver/wlan.c **** 	
 812:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 813:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_GET_SCAN_RESULTS, ucResults);
 1441              		.loc 1 813 0
 1442 0036 4FF00700 		mov	r0, #7
 1443 003a 3968     		ldr	r1, [r7, #0]
 1444 003c FFF7FEFF 		bl	SimpleLinkWaitEvent
 814:../libraries/CC3000_Host_Driver/wlan.c **** 	
 815:../libraries/CC3000_Host_Driver/wlan.c **** 	return(0);
 1445              		.loc 1 815 0
 1446 0040 4FF00003 		mov	r3, #0
 816:../libraries/CC3000_Host_Driver/wlan.c **** }
 1447              		.loc 1 816 0
 1448 0044 1846     		mov	r0, r3
 1449 0046 07F11007 		add	r7, r7, #16
 1450 004a BD46     		mov	sp, r7
 1451 004c 80BD     		pop	{r7, pc}
 1452              		.cfi_endproc
 1453              	.LFE66:
 1455 004e 00BF     		.section	.text.wlan_ioctl_set_scan_params,"ax",%progbits
 1456              		.align	2
 1457              		.global	wlan_ioctl_set_scan_params
 1458              		.thumb
 1459              		.thumb_func
 1461              	wlan_ioctl_set_scan_params:
 1462              	.LFB67:
 817:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 818:../libraries/CC3000_Host_Driver/wlan.c **** 
 819:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 820:../libraries/CC3000_Host_Driver/wlan.c **** //
 821:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_set_scan_params
 822:../libraries/CC3000_Host_Driver/wlan.c **** //!
 823:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    uiEnable - start/stop application scan: 
 824:../libraries/CC3000_Host_Driver/wlan.c **** //!            1 = start scan with default interval value of 10 min. 
 825:../libraries/CC3000_Host_Driver/wlan.c **** //!            in order to set a different scan interval value apply the value 
 826:../libraries/CC3000_Host_Driver/wlan.c **** //!            in milliseconds. minimum 1 second. 0=stop). Wlan reset
 827:../libraries/CC3000_Host_Driver/wlan.c **** //!           (wlan_stop() wlan_start()) is needed when changing scan interval
 828:../libraries/CC3000_Host_Driver/wlan.c **** //!            value. Saved: No
 829:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiMinDwellTime   minimum dwell time value to be used for each 
 830:../libraries/CC3000_Host_Driver/wlan.c **** //!           channel, in milliseconds. Saved: yes
 831:../libraries/CC3000_Host_Driver/wlan.c **** //!           Recommended Value: 100 (Default: 20)
 832:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiMaxDwellTime    maximum dwell time value to be used for each
 833:../libraries/CC3000_Host_Driver/wlan.c **** //!           channel, in milliseconds. Saved: yes
 834:../libraries/CC3000_Host_Driver/wlan.c **** //!           Recommended Value: 100 (Default: 30)
 835:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiNumOfProbeRequests  max probe request between dwell time. 
 836:../libraries/CC3000_Host_Driver/wlan.c **** //!           Saved: yes. Recommended Value: 5 (Default:2)
 837:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiChannelMask  bitwise, up to 13 channels (0x1fff). 
 838:../libraries/CC3000_Host_Driver/wlan.c **** //!           Saved: yes. Default: 0x7ff
 839:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiRSSIThreshold   RSSI threshold. Saved: yes (Default: -80)
 840:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiSNRThreshold    NSR threshold. Saved: yes (Default: 0)
 841:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   uiDefaultTxPower  probe Tx power. Saved: yes (Default: 205)
 842:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   aiIntervalList    pointer to array with 16 entries (16 channels) 
 843:../libraries/CC3000_Host_Driver/wlan.c **** //!           each entry (unsigned long) holds timeout between periodic scan 
 844:../libraries/CC3000_Host_Driver/wlan.c **** //!           (connection scan) - in millisecond. Saved: yes. Default 2000ms.
 845:../libraries/CC3000_Host_Driver/wlan.c **** //!
 846:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 847:../libraries/CC3000_Host_Driver/wlan.c **** //!
 848:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    start and stop scan procedure. Set scan parameters. 
 849:../libraries/CC3000_Host_Driver/wlan.c **** //!
 850:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note     uiDefaultTxPower, is not supported on this version.
 851:../libraries/CC3000_Host_Driver/wlan.c **** //!
 852:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa        wlan_ioctl_get_scan_results 
 853:../libraries/CC3000_Host_Driver/wlan.c **** //
 854:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 855:../libraries/CC3000_Host_Driver/wlan.c **** 
 856:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 857:../libraries/CC3000_Host_Driver/wlan.c **** long
 858:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_set_scan_params(unsigned long uiEnable, unsigned long uiMinDwellTime,
 859:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiMaxDwellTime,
 860:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiNumOfProbeRequests,
 861:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiChannelMask,long iRSSIThreshold,
 862:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiSNRThreshold,
 863:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long uiDefaultTxPower,
 864:../libraries/CC3000_Host_Driver/wlan.c **** 													 unsigned long *aiIntervalList)
 865:../libraries/CC3000_Host_Driver/wlan.c **** {
 1463              		.loc 1 865 0
 1464              		.cfi_startproc
 1465              		@ args = 20, pretend = 0, frame = 32
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467 0000 90B5     		push	{r4, r7, lr}
 1468              	.LCFI32:
 1469              		.cfi_def_cfa_offset 12
 1470              		.cfi_offset 4, -12
 1471              		.cfi_offset 7, -8
 1472              		.cfi_offset 14, -4
 1473 0002 89B0     		sub	sp, sp, #36
 1474              	.LCFI33:
 1475              		.cfi_def_cfa_offset 48
 1476 0004 00AF     		add	r7, sp, #0
 1477              	.LCFI34:
 1478              		.cfi_def_cfa_register 7
 1479 0006 F860     		str	r0, [r7, #12]
 1480 0008 B960     		str	r1, [r7, #8]
 1481 000a 7A60     		str	r2, [r7, #4]
 1482 000c 3B60     		str	r3, [r7, #0]
 866:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned long  uiRes;
 867:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 868:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 869:../libraries/CC3000_Host_Driver/wlan.c **** 	
 870:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1483              		.loc 1 870 0
 1484 000e 40F20003 		movw	r3, #:lower16:tSLInformation
 1485 0012 C0F20003 		movt	r3, #:upper16:tSLInformation
 1486 0016 9B68     		ldr	r3, [r3, #8]
 1487 0018 BB61     		str	r3, [r7, #24]
 871:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 1488              		.loc 1 871 0
 1489 001a BB69     		ldr	r3, [r7, #24]
 1490 001c 03F10903 		add	r3, r3, #9
 1491 0020 FB61     		str	r3, [r7, #28]
 872:../libraries/CC3000_Host_Driver/wlan.c **** 	
 873:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in temporary command buffer
 874:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, 36);
 1492              		.loc 1 874 0
 1493 0022 F869     		ldr	r0, [r7, #28]
 1494 0024 4FF02401 		mov	r1, #36
 1495 0028 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1496 002c F861     		str	r0, [r7, #28]
 875:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiEnable);
 1497              		.loc 1 875 0
 1498 002e F869     		ldr	r0, [r7, #28]
 1499 0030 F968     		ldr	r1, [r7, #12]
 1500 0032 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1501 0036 F861     		str	r0, [r7, #28]
 876:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiMinDwellTime);
 1502              		.loc 1 876 0
 1503 0038 F869     		ldr	r0, [r7, #28]
 1504 003a B968     		ldr	r1, [r7, #8]
 1505 003c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1506 0040 F861     		str	r0, [r7, #28]
 877:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiMaxDwellTime);
 1507              		.loc 1 877 0
 1508 0042 F869     		ldr	r0, [r7, #28]
 1509 0044 7968     		ldr	r1, [r7, #4]
 1510 0046 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1511 004a F861     		str	r0, [r7, #28]
 878:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiNumOfProbeRequests);
 1512              		.loc 1 878 0
 1513 004c F869     		ldr	r0, [r7, #28]
 1514 004e 3968     		ldr	r1, [r7, #0]
 1515 0050 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1516 0054 F861     		str	r0, [r7, #28]
 879:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiChannelMask);
 1517              		.loc 1 879 0
 1518 0056 F869     		ldr	r0, [r7, #28]
 1519 0058 396B     		ldr	r1, [r7, #48]
 1520 005a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1521 005e F861     		str	r0, [r7, #28]
 880:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, iRSSIThreshold);
 1522              		.loc 1 880 0
 1523 0060 7B6B     		ldr	r3, [r7, #52]
 1524 0062 F869     		ldr	r0, [r7, #28]
 1525 0064 1946     		mov	r1, r3
 1526 0066 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1527 006a F861     		str	r0, [r7, #28]
 881:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiSNRThreshold);
 1528              		.loc 1 881 0
 1529 006c F869     		ldr	r0, [r7, #28]
 1530 006e B96B     		ldr	r1, [r7, #56]
 1531 0070 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1532 0074 F861     		str	r0, [r7, #28]
 882:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, uiDefaultTxPower);
 1533              		.loc 1 882 0
 1534 0076 F869     		ldr	r0, [r7, #28]
 1535 0078 F96B     		ldr	r1, [r7, #60]
 1536 007a FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1537 007e F861     		str	r0, [r7, #28]
 1538              	.LBB18:
 883:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, aiIntervalList, sizeof(unsigned long) * 
 1539              		.loc 1 883 0
 1540 0080 4FF00004 		mov	r4, #0
 1541 0084 0DE0     		b	.L73
 1542              	.L74:
 1543              		.loc 1 883 0 is_stmt 0 discriminator 2
 1544 0086 23B2     		sxth	r3, r4
 1545 0088 3A6C     		ldr	r2, [r7, #64]
 1546 008a D318     		adds	r3, r2, r3
 1547 008c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1548 008e FB69     		ldr	r3, [r7, #28]
 1549 0090 1A70     		strb	r2, [r3, #0]
 1550 0092 FB69     		ldr	r3, [r7, #28]
 1551 0094 03F10103 		add	r3, r3, #1
 1552 0098 FB61     		str	r3, [r7, #28]
 1553 009a 2346     		mov	r3, r4	@ movhi
 1554 009c 03F10103 		add	r3, r3, #1
 1555 00a0 9CB2     		uxth	r4, r3
 1556              	.L73:
 1557              		.loc 1 883 0 discriminator 1
 1558 00a2 A3B2     		uxth	r3, r4
 1559 00a4 3F2B     		cmp	r3, #63
 1560 00a6 EED9     		bls	.L74
 1561              	.LBE18:
 884:../libraries/CC3000_Host_Driver/wlan.c **** 									SL_SET_SCAN_PARAMS_INTERVAL_LIST_SIZE);
 885:../libraries/CC3000_Host_Driver/wlan.c **** 	
 886:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 887:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SET_SCANPARAM,
 1562              		.loc 1 887 0 is_stmt 1
 1563 00a8 4FF00300 		mov	r0, #3
 1564 00ac B969     		ldr	r1, [r7, #24]
 1565 00ae 4FF06402 		mov	r2, #100
 1566 00b2 FFF7FEFF 		bl	hci_command_send
 888:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_SET_SCAN_PARAMS_LEN);
 889:../libraries/CC3000_Host_Driver/wlan.c **** 	
 890:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 891:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SET_SCANPARAM, &uiRes);
 1567              		.loc 1 891 0
 1568 00b6 07F11403 		add	r3, r7, #20
 1569 00ba 4FF00300 		mov	r0, #3
 1570 00be 1946     		mov	r1, r3
 1571 00c0 FFF7FEFF 		bl	SimpleLinkWaitEvent
 892:../libraries/CC3000_Host_Driver/wlan.c **** 	
 893:../libraries/CC3000_Host_Driver/wlan.c **** 	return(uiRes);
 1572              		.loc 1 893 0
 1573 00c4 7B69     		ldr	r3, [r7, #20]
 894:../libraries/CC3000_Host_Driver/wlan.c **** }
 1574              		.loc 1 894 0
 1575 00c6 1846     		mov	r0, r3
 1576 00c8 07F12407 		add	r7, r7, #36
 1577 00cc BD46     		mov	sp, r7
 1578 00ce 90BD     		pop	{r4, r7, pc}
 1579              		.cfi_endproc
 1580              	.LFE67:
 1582              		.section	.text.wlan_set_event_mask,"ax",%progbits
 1583              		.align	2
 1584              		.global	wlan_set_event_mask
 1585              		.thumb
 1586              		.thumb_func
 1588              	wlan_set_event_mask:
 1589              	.LFB68:
 895:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 896:../libraries/CC3000_Host_Driver/wlan.c **** 
 897:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 898:../libraries/CC3000_Host_Driver/wlan.c **** //
 899:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_set_event_mask
 900:../libraries/CC3000_Host_Driver/wlan.c **** //!
 901:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    mask   mask option:
 902:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_CONNECT connect event
 903:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_DISCONNECT disconnect event
 904:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_ASYNC_SIMPLE_CONFIG_DONE  smart config done
 905:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_INIT init done
 906:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_UNSOL_DHCP dhcp event report
 907:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_ASYNC_PING_REPORT ping report
 908:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_KEEPALIVE keepalive
 909:../libraries/CC3000_Host_Driver/wlan.c **** //!       HCI_EVNT_WLAN_TX_COMPLETE - disable information on end of transmission
 910:../libraries/CC3000_Host_Driver/wlan.c **** //!   	  Saved: no.
 911:../libraries/CC3000_Host_Driver/wlan.c **** //!
 912:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    On success, zero is returned. On error, -1 is returned        
 913:../libraries/CC3000_Host_Driver/wlan.c **** //!
 914:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    Mask event according to bit mask. In case that event is 
 915:../libraries/CC3000_Host_Driver/wlan.c **** //!            masked (1), the device will not send the masked event to host. 
 916:../libraries/CC3000_Host_Driver/wlan.c **** //
 917:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 918:../libraries/CC3000_Host_Driver/wlan.c **** 
 919:../libraries/CC3000_Host_Driver/wlan.c **** long
 920:../libraries/CC3000_Host_Driver/wlan.c **** wlan_set_event_mask(unsigned long ulMask)
 921:../libraries/CC3000_Host_Driver/wlan.c **** {
 1590              		.loc 1 921 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 24
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594 0000 80B5     		push	{r7, lr}
 1595              	.LCFI35:
 1596              		.cfi_def_cfa_offset 8
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
 1599 0002 86B0     		sub	sp, sp, #24
 1600              	.LCFI36:
 1601              		.cfi_def_cfa_offset 32
 1602 0004 00AF     		add	r7, sp, #0
 1603              	.LCFI37:
 1604              		.cfi_def_cfa_register 7
 1605 0006 7860     		str	r0, [r7, #4]
 922:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 923:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 924:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
 925:../libraries/CC3000_Host_Driver/wlan.c **** 	
 926:../libraries/CC3000_Host_Driver/wlan.c **** 	
 927:../libraries/CC3000_Host_Driver/wlan.c **** 	if ((ulMask & HCI_EVNT_WLAN_TX_COMPLETE) == HCI_EVNT_WLAN_TX_COMPLETE)
 1606              		.loc 1 927 0
 1607 0008 7A68     		ldr	r2, [r7, #4]
 1608 000a 48F20803 		movw	r3, #32776
 1609 000e 1340     		ands	r3, r3, r2
 1610 0010 48F20802 		movw	r2, #32776
 1611 0014 9342     		cmp	r3, r2
 1612 0016 1AD1     		bne	.L77
 928:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 929:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.InformHostOnTxComplete = 0;
 1613              		.loc 1 929 0
 1614 0018 40F20003 		movw	r3, #:lower16:tSLInformation
 1615 001c C0F20003 		movt	r3, #:upper16:tSLInformation
 1616 0020 4FF00002 		mov	r2, #0
 1617 0024 83F84020 		strb	r2, [r3, #64]
 930:../libraries/CC3000_Host_Driver/wlan.c **** 		
 931:../libraries/CC3000_Host_Driver/wlan.c **** 		// Since an event is a virtual event - i.e. it is not coming from CC3000
 932:../libraries/CC3000_Host_Driver/wlan.c **** 		// there is no need to send anything to the device if it was an only event
 933:../libraries/CC3000_Host_Driver/wlan.c **** 		if (ulMask == HCI_EVNT_WLAN_TX_COMPLETE)
 1618              		.loc 1 933 0
 1619 0028 7A68     		ldr	r2, [r7, #4]
 1620 002a 48F20803 		movw	r3, #32776
 1621 002e 9A42     		cmp	r2, r3
 1622 0030 02D1     		bne	.L78
 934:../libraries/CC3000_Host_Driver/wlan.c **** 		{
 935:../libraries/CC3000_Host_Driver/wlan.c **** 			return 0;
 1623              		.loc 1 935 0
 1624 0032 4FF00003 		mov	r3, #0
 1625 0036 33E0     		b	.L81
 1626              	.L78:
 936:../libraries/CC3000_Host_Driver/wlan.c **** 		}
 937:../libraries/CC3000_Host_Driver/wlan.c **** 		
 938:../libraries/CC3000_Host_Driver/wlan.c **** 		ulMask &= ~HCI_EVNT_WLAN_TX_COMPLETE;
 1627              		.loc 1 938 0
 1628 0038 7B68     		ldr	r3, [r7, #4]
 1629 003a 23F40043 		bic	r3, r3, #32768
 1630 003e 23F00803 		bic	r3, r3, #8
 1631 0042 7B60     		str	r3, [r7, #4]
 939:../libraries/CC3000_Host_Driver/wlan.c **** 		ulMask |= HCI_EVNT_WLAN_UNSOL_BASE;
 1632              		.loc 1 939 0
 1633 0044 7B68     		ldr	r3, [r7, #4]
 1634 0046 43F40043 		orr	r3, r3, #32768
 1635 004a 7B60     		str	r3, [r7, #4]
 1636 004c 07E0     		b	.L80
 1637              	.L77:
 940:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 941:../libraries/CC3000_Host_Driver/wlan.c **** 	else
 942:../libraries/CC3000_Host_Driver/wlan.c **** 	{
 943:../libraries/CC3000_Host_Driver/wlan.c **** 		tSLInformation.InformHostOnTxComplete = 1;
 1638              		.loc 1 943 0
 1639 004e 40F20003 		movw	r3, #:lower16:tSLInformation
 1640 0052 C0F20003 		movt	r3, #:upper16:tSLInformation
 1641 0056 4FF00102 		mov	r2, #1
 1642 005a 83F84020 		strb	r2, [r3, #64]
 1643              	.L80:
 944:../libraries/CC3000_Host_Driver/wlan.c **** 	}
 945:../libraries/CC3000_Host_Driver/wlan.c **** 	
 946:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1644              		.loc 1 946 0
 1645 005e 4FF0FF33 		mov	r3, #-1
 1646 0062 FB60     		str	r3, [r7, #12]
 947:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1647              		.loc 1 947 0
 1648 0064 40F20003 		movw	r3, #:lower16:tSLInformation
 1649 0068 C0F20003 		movt	r3, #:upper16:tSLInformation
 1650 006c 9B68     		ldr	r3, [r3, #8]
 1651 006e 7B61     		str	r3, [r7, #20]
 948:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 1652              		.loc 1 948 0
 1653 0070 7B69     		ldr	r3, [r7, #20]
 1654 0072 03F10903 		add	r3, r3, #9
 1655 0076 3B61     		str	r3, [r7, #16]
 949:../libraries/CC3000_Host_Driver/wlan.c **** 	
 950:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
 951:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, ulMask);
 1656              		.loc 1 951 0
 1657 0078 3869     		ldr	r0, [r7, #16]
 1658 007a 7968     		ldr	r1, [r7, #4]
 1659 007c FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1660 0080 3861     		str	r0, [r7, #16]
 952:../libraries/CC3000_Host_Driver/wlan.c **** 	
 953:../libraries/CC3000_Host_Driver/wlan.c **** 	// Initiate a HCI command
 954:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_EVENT_MASK,
 1661              		.loc 1 954 0
 1662 0082 4FF00800 		mov	r0, #8
 1663 0086 7969     		ldr	r1, [r7, #20]
 1664 0088 4FF00402 		mov	r2, #4
 1665 008c FFF7FEFF 		bl	hci_command_send
 955:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, WLAN_SET_MASK_PARAMS_LEN);
 956:../libraries/CC3000_Host_Driver/wlan.c **** 	
 957:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 958:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_EVENT_MASK, &ret);
 1666              		.loc 1 958 0
 1667 0090 07F10C03 		add	r3, r7, #12
 1668 0094 4FF00800 		mov	r0, #8
 1669 0098 1946     		mov	r1, r3
 1670 009a FFF7FEFF 		bl	SimpleLinkWaitEvent
 959:../libraries/CC3000_Host_Driver/wlan.c **** 	
 960:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);
 1671              		.loc 1 960 0
 1672 009e FB68     		ldr	r3, [r7, #12]
 1673              	.L81:
 961:../libraries/CC3000_Host_Driver/wlan.c **** }
 1674              		.loc 1 961 0
 1675 00a0 1846     		mov	r0, r3
 1676 00a2 07F11807 		add	r7, r7, #24
 1677 00a6 BD46     		mov	sp, r7
 1678 00a8 80BD     		pop	{r7, pc}
 1679              		.cfi_endproc
 1680              	.LFE68:
 1682 00aa 00BF     		.section	.text.wlan_ioctl_statusget,"ax",%progbits
 1683              		.align	2
 1684              		.global	wlan_ioctl_statusget
 1685              		.thumb
 1686              		.thumb_func
 1688              	wlan_ioctl_statusget:
 1689              	.LFB69:
 962:../libraries/CC3000_Host_Driver/wlan.c **** 
 963:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 964:../libraries/CC3000_Host_Driver/wlan.c **** //
 965:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_ioctl_statusget
 966:../libraries/CC3000_Host_Driver/wlan.c **** //!
 967:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param none 
 968:../libraries/CC3000_Host_Driver/wlan.c **** //!
 969:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return    WLAN_STATUS_DISCONNECTED, WLAN_STATUS_SCANING, 
 970:../libraries/CC3000_Host_Driver/wlan.c **** //!             STATUS_CONNECTING or WLAN_STATUS_CONNECTED      
 971:../libraries/CC3000_Host_Driver/wlan.c **** //!
 972:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief    get wlan status: disconnected, scanning, connecting or connected
 973:../libraries/CC3000_Host_Driver/wlan.c **** //
 974:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 975:../libraries/CC3000_Host_Driver/wlan.c **** 
 976:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_TINY_DRIVER
 977:../libraries/CC3000_Host_Driver/wlan.c **** long
 978:../libraries/CC3000_Host_Driver/wlan.c **** wlan_ioctl_statusget(void)
 979:../libraries/CC3000_Host_Driver/wlan.c **** {
 1690              		.loc 1 979 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 8
 1693              		@ frame_needed = 1, uses_anonymous_args = 0
 1694 0000 80B5     		push	{r7, lr}
 1695              	.LCFI38:
 1696              		.cfi_def_cfa_offset 8
 1697              		.cfi_offset 7, -8
 1698              		.cfi_offset 14, -4
 1699 0002 82B0     		sub	sp, sp, #8
 1700              	.LCFI39:
 1701              		.cfi_def_cfa_offset 16
 1702 0004 00AF     		add	r7, sp, #0
 1703              	.LCFI40:
 1704              		.cfi_def_cfa_register 7
 980:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
 981:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
 982:../libraries/CC3000_Host_Driver/wlan.c **** 	
 983:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1705              		.loc 1 983 0
 1706 0006 4FF0FF33 		mov	r3, #-1
 1707 000a 3B60     		str	r3, [r7, #0]
 984:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1708              		.loc 1 984 0
 1709 000c 40F20003 		movw	r3, #:lower16:tSLInformation
 1710 0010 C0F20003 		movt	r3, #:upper16:tSLInformation
 1711 0014 9B68     		ldr	r3, [r3, #8]
 1712 0016 7B60     		str	r3, [r7, #4]
 985:../libraries/CC3000_Host_Driver/wlan.c **** 	
 986:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_STATUSGET,
 1713              		.loc 1 986 0
 1714 0018 4FF00900 		mov	r0, #9
 1715 001c 7968     		ldr	r1, [r7, #4]
 1716 001e 4FF00002 		mov	r2, #0
 1717 0022 FFF7FEFF 		bl	hci_command_send
 987:../libraries/CC3000_Host_Driver/wlan.c **** 									 ptr, 0);
 988:../libraries/CC3000_Host_Driver/wlan.c **** 	
 989:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
 990:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_STATUSGET, &ret);
 1718              		.loc 1 990 0
 1719 0026 3B46     		mov	r3, r7
 1720 0028 4FF00900 		mov	r0, #9
 1721 002c 1946     		mov	r1, r3
 1722 002e FFF7FEFF 		bl	SimpleLinkWaitEvent
 991:../libraries/CC3000_Host_Driver/wlan.c **** 	
 992:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
 1723              		.loc 1 992 0
 1724 0032 3B68     		ldr	r3, [r7, #0]
 993:../libraries/CC3000_Host_Driver/wlan.c **** }
 1725              		.loc 1 993 0
 1726 0034 1846     		mov	r0, r3
 1727 0036 07F10807 		add	r7, r7, #8
 1728 003a BD46     		mov	sp, r7
 1729 003c 80BD     		pop	{r7, pc}
 1730              		.cfi_endproc
 1731              	.LFE69:
 1733 003e 00BF     		.section	.text.wlan_smart_config_start,"ax",%progbits
 1734              		.align	2
 1735              		.global	wlan_smart_config_start
 1736              		.thumb
 1737              		.thumb_func
 1739              	wlan_smart_config_start:
 1740              	.LFB70:
 994:../libraries/CC3000_Host_Driver/wlan.c **** #endif
 995:../libraries/CC3000_Host_Driver/wlan.c **** 
 996:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
 997:../libraries/CC3000_Host_Driver/wlan.c **** //
 998:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_start
 999:../libraries/CC3000_Host_Driver/wlan.c **** //!
1000:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    algoEncryptedFlag indicates whether the information is encrypted
1001:../libraries/CC3000_Host_Driver/wlan.c **** //!
1002:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1003:../libraries/CC3000_Host_Driver/wlan.c **** //!
1004:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   Start to acquire device profile. The device acquire its own 
1005:../libraries/CC3000_Host_Driver/wlan.c **** //!           profile, if profile message is found. The acquired AP information
1006:../libraries/CC3000_Host_Driver/wlan.c **** //!           is stored in CC3000 EEPROM only in case AES128 encryption is used.
1007:../libraries/CC3000_Host_Driver/wlan.c **** //!           In case AES128 encryption is not used, a profile is created by 
1008:../libraries/CC3000_Host_Driver/wlan.c **** //!           CC3000 internally.
1009:../libraries/CC3000_Host_Driver/wlan.c **** //!
1010:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note    An asynchronous event - Smart Config Done will be generated as soon
1011:../libraries/CC3000_Host_Driver/wlan.c **** //!           as the process finishes successfully.
1012:../libraries/CC3000_Host_Driver/wlan.c **** //!
1013:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa      wlan_smart_config_set_prefix , wlan_smart_config_stop
1014:../libraries/CC3000_Host_Driver/wlan.c **** //
1015:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1016:../libraries/CC3000_Host_Driver/wlan.c **** 
1017:../libraries/CC3000_Host_Driver/wlan.c **** long
1018:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_start(unsigned long algoEncryptedFlag)
1019:../libraries/CC3000_Host_Driver/wlan.c **** {
 1741              		.loc 1 1019 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 24
 1744              		@ frame_needed = 1, uses_anonymous_args = 0
 1745 0000 80B5     		push	{r7, lr}
 1746              	.LCFI41:
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 86B0     		sub	sp, sp, #24
 1751              	.LCFI42:
 1752              		.cfi_def_cfa_offset 32
 1753 0004 00AF     		add	r7, sp, #0
 1754              	.LCFI43:
 1755              		.cfi_def_cfa_register 7
 1756 0006 7860     		str	r0, [r7, #4]
1020:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
1021:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
1022:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
1023:../libraries/CC3000_Host_Driver/wlan.c **** 	
1024:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1757              		.loc 1 1024 0
 1758 0008 4FF0FF33 		mov	r3, #-1
 1759 000c FB60     		str	r3, [r7, #12]
1025:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1760              		.loc 1 1025 0
 1761 000e 40F20003 		movw	r3, #:lower16:tSLInformation
 1762 0012 C0F20003 		movt	r3, #:upper16:tSLInformation
 1763 0016 9B68     		ldr	r3, [r3, #8]
 1764 0018 7B61     		str	r3, [r7, #20]
1026:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (unsigned char *)(ptr + HEADERS_SIZE_CMD);
 1765              		.loc 1 1026 0
 1766 001a 7B69     		ldr	r3, [r7, #20]
 1767 001c 03F10903 		add	r3, r3, #9
 1768 0020 3B61     		str	r3, [r7, #16]
1027:../libraries/CC3000_Host_Driver/wlan.c **** 	
1028:../libraries/CC3000_Host_Driver/wlan.c **** 	// Fill in HCI packet structure
1029:../libraries/CC3000_Host_Driver/wlan.c **** 	args = UINT32_TO_STREAM(args, algoEncryptedFlag);
 1769              		.loc 1 1029 0
 1770 0022 3869     		ldr	r0, [r7, #16]
 1771 0024 7968     		ldr	r1, [r7, #4]
 1772 0026 FFF7FEFF 		bl	UINT32_TO_STREAM_f
 1773 002a 3861     		str	r0, [r7, #16]
1030:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1774              		.loc 1 1030 0
 1775 002c 4FF0FF33 		mov	r3, #-1
 1776 0030 FB60     		str	r3, [r7, #12]
1031:../libraries/CC3000_Host_Driver/wlan.c **** 	
1032:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_START, ptr, 
 1777              		.loc 1 1032 0
 1778 0032 4FF00A00 		mov	r0, #10
 1779 0036 7969     		ldr	r1, [r7, #20]
 1780 0038 4FF00402 		mov	r2, #4
 1781 003c FFF7FEFF 		bl	hci_command_send
1033:../libraries/CC3000_Host_Driver/wlan.c **** 									 WLAN_SMART_CONFIG_START_PARAMS_LEN);
1034:../libraries/CC3000_Host_Driver/wlan.c **** 	
1035:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
1036:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_START, &ret);
 1782              		.loc 1 1036 0
 1783 0040 07F10C03 		add	r3, r7, #12
 1784 0044 4FF00A00 		mov	r0, #10
 1785 0048 1946     		mov	r1, r3
 1786 004a FFF7FEFF 		bl	SimpleLinkWaitEvent
1037:../libraries/CC3000_Host_Driver/wlan.c **** 	
1038:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
 1787              		.loc 1 1038 0
 1788 004e FB68     		ldr	r3, [r7, #12]
1039:../libraries/CC3000_Host_Driver/wlan.c **** }
 1789              		.loc 1 1039 0
 1790 0050 1846     		mov	r0, r3
 1791 0052 07F11807 		add	r7, r7, #24
 1792 0056 BD46     		mov	sp, r7
 1793 0058 80BD     		pop	{r7, pc}
 1794              		.cfi_endproc
 1795              	.LFE70:
 1797 005a 00BF     		.section	.text.wlan_smart_config_stop,"ax",%progbits
 1798              		.align	2
 1799              		.global	wlan_smart_config_stop
 1800              		.thumb
 1801              		.thumb_func
 1803              	wlan_smart_config_stop:
 1804              	.LFB71:
1040:../libraries/CC3000_Host_Driver/wlan.c **** 
1041:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1042:../libraries/CC3000_Host_Driver/wlan.c **** //
1043:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_stop
1044:../libraries/CC3000_Host_Driver/wlan.c **** //!
1045:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param    algoEncryptedFlag indicates whether the information is encrypted
1046:../libraries/CC3000_Host_Driver/wlan.c **** //!
1047:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1048:../libraries/CC3000_Host_Driver/wlan.c **** //!
1049:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   Stop the acquire profile procedure 
1050:../libraries/CC3000_Host_Driver/wlan.c **** //!
1051:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa      wlan_smart_config_start , wlan_smart_config_set_prefix
1052:../libraries/CC3000_Host_Driver/wlan.c **** //
1053:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1054:../libraries/CC3000_Host_Driver/wlan.c **** 
1055:../libraries/CC3000_Host_Driver/wlan.c **** long
1056:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_stop(void)
1057:../libraries/CC3000_Host_Driver/wlan.c **** {
 1805              		.loc 1 1057 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 8
 1808              		@ frame_needed = 1, uses_anonymous_args = 0
 1809 0000 80B5     		push	{r7, lr}
 1810              	.LCFI44:
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 7, -8
 1813              		.cfi_offset 14, -4
 1814 0002 82B0     		sub	sp, sp, #8
 1815              	.LCFI45:
 1816              		.cfi_def_cfa_offset 16
 1817 0004 00AF     		add	r7, sp, #0
 1818              	.LCFI46:
 1819              		.cfi_def_cfa_register 7
1058:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
1059:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
1060:../libraries/CC3000_Host_Driver/wlan.c **** 	
1061:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1820              		.loc 1 1061 0
 1821 0006 4FF0FF33 		mov	r3, #-1
 1822 000a 3B60     		str	r3, [r7, #0]
1062:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1823              		.loc 1 1062 0
 1824 000c 40F20003 		movw	r3, #:lower16:tSLInformation
 1825 0010 C0F20003 		movt	r3, #:upper16:tSLInformation
 1826 0014 9B68     		ldr	r3, [r3, #8]
 1827 0016 7B60     		str	r3, [r7, #4]
1063:../libraries/CC3000_Host_Driver/wlan.c **** 	
1064:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_STOP, ptr, 0);
 1828              		.loc 1 1064 0
 1829 0018 4FF00B00 		mov	r0, #11
 1830 001c 7968     		ldr	r1, [r7, #4]
 1831 001e 4FF00002 		mov	r2, #0
 1832 0022 FFF7FEFF 		bl	hci_command_send
1065:../libraries/CC3000_Host_Driver/wlan.c **** 	
1066:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
1067:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_STOP, &ret);
 1833              		.loc 1 1067 0
 1834 0026 3B46     		mov	r3, r7
 1835 0028 4FF00B00 		mov	r0, #11
 1836 002c 1946     		mov	r1, r3
 1837 002e FFF7FEFF 		bl	SimpleLinkWaitEvent
1068:../libraries/CC3000_Host_Driver/wlan.c **** 	
1069:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
 1838              		.loc 1 1069 0
 1839 0032 3B68     		ldr	r3, [r7, #0]
1070:../libraries/CC3000_Host_Driver/wlan.c **** }
 1840              		.loc 1 1070 0
 1841 0034 1846     		mov	r0, r3
 1842 0036 07F10807 		add	r7, r7, #8
 1843 003a BD46     		mov	sp, r7
 1844 003c 80BD     		pop	{r7, pc}
 1845              		.cfi_endproc
 1846              	.LFE71:
 1848 003e 00BF     		.section	.text.wlan_smart_config_set_prefix,"ax",%progbits
 1849              		.align	2
 1850              		.global	wlan_smart_config_set_prefix
 1851              		.thumb
 1852              		.thumb_func
 1854              	wlan_smart_config_set_prefix:
 1855              	.LFB72:
1071:../libraries/CC3000_Host_Driver/wlan.c **** 
1072:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1073:../libraries/CC3000_Host_Driver/wlan.c **** //
1074:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_set_prefix
1075:../libraries/CC3000_Host_Driver/wlan.c **** //!
1076:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   newPrefix  3 bytes identify the SSID prefix for the Smart Config. 
1077:../libraries/CC3000_Host_Driver/wlan.c **** //!
1078:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1079:../libraries/CC3000_Host_Driver/wlan.c **** //!
1080:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   Configure station ssid prefix. The prefix is used internally 
1081:../libraries/CC3000_Host_Driver/wlan.c **** //!           in CC3000. It should always be TTT.
1082:../libraries/CC3000_Host_Driver/wlan.c **** //!
1083:../libraries/CC3000_Host_Driver/wlan.c **** //!  @Note    The prefix is stored in CC3000 NVMEM
1084:../libraries/CC3000_Host_Driver/wlan.c **** //!
1085:../libraries/CC3000_Host_Driver/wlan.c **** //!  @sa      wlan_smart_config_start , wlan_smart_config_stop
1086:../libraries/CC3000_Host_Driver/wlan.c **** //
1087:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1088:../libraries/CC3000_Host_Driver/wlan.c **** 
1089:../libraries/CC3000_Host_Driver/wlan.c **** long
1090:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_set_prefix(char* cNewPrefix)
1091:../libraries/CC3000_Host_Driver/wlan.c **** {
 1856              		.loc 1 1091 0
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 24
 1859              		@ frame_needed = 1, uses_anonymous_args = 0
 1860 0000 90B5     		push	{r4, r7, lr}
 1861              	.LCFI47:
 1862              		.cfi_def_cfa_offset 12
 1863              		.cfi_offset 4, -12
 1864              		.cfi_offset 7, -8
 1865              		.cfi_offset 14, -4
 1866 0002 87B0     		sub	sp, sp, #28
 1867              	.LCFI48:
 1868              		.cfi_def_cfa_offset 40
 1869 0004 00AF     		add	r7, sp, #0
 1870              	.LCFI49:
 1871              		.cfi_def_cfa_register 7
 1872 0006 7860     		str	r0, [r7, #4]
1092:../libraries/CC3000_Host_Driver/wlan.c **** 	long ret;
1093:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ptr;
1094:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *args;
1095:../libraries/CC3000_Host_Driver/wlan.c **** 	
1096:../libraries/CC3000_Host_Driver/wlan.c **** 	ret = EFAIL;
 1873              		.loc 1 1096 0
 1874 0008 4FF0FF33 		mov	r3, #-1
 1875 000c FB60     		str	r3, [r7, #12]
1097:../libraries/CC3000_Host_Driver/wlan.c **** 	ptr = tSLInformation.pucTxCommandBuffer;
 1876              		.loc 1 1097 0
 1877 000e 40F20003 		movw	r3, #:lower16:tSLInformation
 1878 0012 C0F20003 		movt	r3, #:upper16:tSLInformation
 1879 0016 9B68     		ldr	r3, [r3, #8]
 1880 0018 3B61     		str	r3, [r7, #16]
1098:../libraries/CC3000_Host_Driver/wlan.c **** 	args = (ptr + HEADERS_SIZE_CMD);
 1881              		.loc 1 1098 0
 1882 001a 3B69     		ldr	r3, [r7, #16]
 1883 001c 03F10903 		add	r3, r3, #9
 1884 0020 7B61     		str	r3, [r7, #20]
1099:../libraries/CC3000_Host_Driver/wlan.c **** 	
1100:../libraries/CC3000_Host_Driver/wlan.c **** 	if (cNewPrefix == NULL)
 1885              		.loc 1 1100 0
 1886 0022 7B68     		ldr	r3, [r7, #4]
 1887 0024 002B     		cmp	r3, #0
 1888 0026 01D1     		bne	.L89
1101:../libraries/CC3000_Host_Driver/wlan.c **** 		return ret;
 1889              		.loc 1 1101 0
 1890 0028 FB68     		ldr	r3, [r7, #12]
 1891 002a 32E0     		b	.L93
 1892              	.L89:
1102:../libraries/CC3000_Host_Driver/wlan.c **** 	else	// with the new Smart Config, prefix must be TTT
1103:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1104:../libraries/CC3000_Host_Driver/wlan.c **** 		*cNewPrefix = 'T';
 1893              		.loc 1 1104 0
 1894 002c 7B68     		ldr	r3, [r7, #4]
 1895 002e 4FF05402 		mov	r2, #84
 1896 0032 1A70     		strb	r2, [r3, #0]
1105:../libraries/CC3000_Host_Driver/wlan.c **** 		*(cNewPrefix + 1) = 'T';
 1897              		.loc 1 1105 0
 1898 0034 7B68     		ldr	r3, [r7, #4]
 1899 0036 03F10103 		add	r3, r3, #1
 1900 003a 4FF05402 		mov	r2, #84
 1901 003e 1A70     		strb	r2, [r3, #0]
1106:../libraries/CC3000_Host_Driver/wlan.c **** 		*(cNewPrefix + 2) = 'T';
 1902              		.loc 1 1106 0
 1903 0040 7B68     		ldr	r3, [r7, #4]
 1904 0042 03F10203 		add	r3, r3, #2
 1905 0046 4FF05402 		mov	r2, #84
 1906 004a 1A70     		strb	r2, [r3, #0]
 1907              	.LBB19:
1107:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1108:../libraries/CC3000_Host_Driver/wlan.c **** 	
1109:../libraries/CC3000_Host_Driver/wlan.c **** 	ARRAY_TO_STREAM(args, cNewPrefix, SL_SIMPLE_CONFIG_PREFIX_LENGTH);
 1908              		.loc 1 1109 0
 1909 004c 4FF00004 		mov	r4, #0
 1910 0050 0DE0     		b	.L91
 1911              	.L92:
 1912              		.loc 1 1109 0 is_stmt 0 discriminator 2
 1913 0052 23B2     		sxth	r3, r4
 1914 0054 7A68     		ldr	r2, [r7, #4]
 1915 0056 D318     		adds	r3, r2, r3
 1916 0058 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1917 005a 7B69     		ldr	r3, [r7, #20]
 1918 005c 1A70     		strb	r2, [r3, #0]
 1919 005e 7B69     		ldr	r3, [r7, #20]
 1920 0060 03F10103 		add	r3, r3, #1
 1921 0064 7B61     		str	r3, [r7, #20]
 1922 0066 2346     		mov	r3, r4	@ movhi
 1923 0068 03F10103 		add	r3, r3, #1
 1924 006c 9CB2     		uxth	r4, r3
 1925              	.L91:
 1926              		.loc 1 1109 0 discriminator 1
 1927 006e 23B2     		sxth	r3, r4
 1928 0070 022B     		cmp	r3, #2
 1929 0072 EEDD     		ble	.L92
 1930              	.LBE19:
1110:../libraries/CC3000_Host_Driver/wlan.c **** 	
1111:../libraries/CC3000_Host_Driver/wlan.c **** 	hci_command_send(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_SET_PREFIX, ptr, 
 1931              		.loc 1 1111 0 is_stmt 1
 1932 0074 4FF00C00 		mov	r0, #12
 1933 0078 3969     		ldr	r1, [r7, #16]
 1934 007a 4FF00302 		mov	r2, #3
 1935 007e FFF7FEFF 		bl	hci_command_send
1112:../libraries/CC3000_Host_Driver/wlan.c **** 									 SL_SIMPLE_CONFIG_PREFIX_LENGTH);
1113:../libraries/CC3000_Host_Driver/wlan.c **** 	
1114:../libraries/CC3000_Host_Driver/wlan.c **** 	// Wait for command complete event
1115:../libraries/CC3000_Host_Driver/wlan.c **** 	SimpleLinkWaitEvent(HCI_CMND_WLAN_IOCTL_SIMPLE_CONFIG_SET_PREFIX, &ret);
 1936              		.loc 1 1115 0
 1937 0082 07F10C03 		add	r3, r7, #12
 1938 0086 4FF00C00 		mov	r0, #12
 1939 008a 1946     		mov	r1, r3
 1940 008c FFF7FEFF 		bl	SimpleLinkWaitEvent
1116:../libraries/CC3000_Host_Driver/wlan.c **** 	
1117:../libraries/CC3000_Host_Driver/wlan.c **** 	return(ret);    
 1941              		.loc 1 1117 0
 1942 0090 FB68     		ldr	r3, [r7, #12]
 1943              	.L93:
1118:../libraries/CC3000_Host_Driver/wlan.c **** }
 1944              		.loc 1 1118 0
 1945 0092 1846     		mov	r0, r3
 1946 0094 07F11C07 		add	r7, r7, #28
 1947 0098 BD46     		mov	sp, r7
 1948 009a 90BD     		pop	{r4, r7, pc}
 1949              		.cfi_endproc
 1950              	.LFE72:
 1952              		.section	.text.wlan_smart_config_process,"ax",%progbits
 1953              		.align	2
 1954              		.global	wlan_smart_config_process
 1955              		.thumb
 1956              		.thumb_func
 1958              	wlan_smart_config_process:
 1959              	.LFB73:
1119:../libraries/CC3000_Host_Driver/wlan.c **** 
1120:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1121:../libraries/CC3000_Host_Driver/wlan.c **** //
1122:../libraries/CC3000_Host_Driver/wlan.c **** //!  wlan_smart_config_process
1123:../libraries/CC3000_Host_Driver/wlan.c **** //!
1124:../libraries/CC3000_Host_Driver/wlan.c **** //!  @param   none 
1125:../libraries/CC3000_Host_Driver/wlan.c **** //!
1126:../libraries/CC3000_Host_Driver/wlan.c **** //!  @return   On success, zero is returned. On error, -1 is returned        
1127:../libraries/CC3000_Host_Driver/wlan.c **** //!
1128:../libraries/CC3000_Host_Driver/wlan.c **** //!  @brief   process the acquired data and store it as a profile. The acquired 
1129:../libraries/CC3000_Host_Driver/wlan.c **** //!           AP information is stored in CC3000 EEPROM encrypted.
1130:../libraries/CC3000_Host_Driver/wlan.c **** //!           The encrypted data is decrypted and stored as a profile.
1131:../libraries/CC3000_Host_Driver/wlan.c **** //!           behavior is as defined by connection policy.
1132:../libraries/CC3000_Host_Driver/wlan.c **** //
1133:../libraries/CC3000_Host_Driver/wlan.c **** //*****************************************************************************
1134:../libraries/CC3000_Host_Driver/wlan.c **** 
1135:../libraries/CC3000_Host_Driver/wlan.c **** 
1136:../libraries/CC3000_Host_Driver/wlan.c **** #ifndef CC3000_UNENCRYPTED_SMART_CONFIG
1137:../libraries/CC3000_Host_Driver/wlan.c **** long
1138:../libraries/CC3000_Host_Driver/wlan.c **** wlan_smart_config_process()
1139:../libraries/CC3000_Host_Driver/wlan.c **** {
 1960              		.loc 1 1139 0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 24
 1963              		@ frame_needed = 1, uses_anonymous_args = 0
 1964 0000 80B5     		push	{r7, lr}
 1965              	.LCFI50:
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 7, -8
 1968              		.cfi_offset 14, -4
 1969 0002 8CB0     		sub	sp, sp, #48
 1970              	.LCFI51:
 1971              		.cfi_def_cfa_offset 56
 1972 0004 06AF     		add	r7, sp, #24
 1973              	.LCFI52:
 1974              		.cfi_def_cfa 7, 32
1140:../libraries/CC3000_Host_Driver/wlan.c **** 	signed long	returnValue;
1141:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned long ssidLen, keyLen;
1142:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *decKeyPtr;
1143:../libraries/CC3000_Host_Driver/wlan.c **** 	unsigned char *ssidPtr;
1144:../libraries/CC3000_Host_Driver/wlan.c **** 	
1145:../libraries/CC3000_Host_Driver/wlan.c **** 	// read the key from EEPROM - fileID 12
1146:../libraries/CC3000_Host_Driver/wlan.c **** 	returnValue = aes_read_key(key);
 1975              		.loc 1 1146 0
 1976 0006 40F20000 		movw	r0, #:lower16:key
 1977 000a C0F20000 		movt	r0, #:upper16:key
 1978 000e FFF7FEFF 		bl	aes_read_key
 1979 0012 7861     		str	r0, [r7, #20]
1147:../libraries/CC3000_Host_Driver/wlan.c **** 	
1148:../libraries/CC3000_Host_Driver/wlan.c **** 	if (returnValue != 0)
 1980              		.loc 1 1148 0
 1981 0014 7B69     		ldr	r3, [r7, #20]
 1982 0016 002B     		cmp	r3, #0
 1983 0018 01D0     		beq	.L95
1149:../libraries/CC3000_Host_Driver/wlan.c **** 		return returnValue;
 1984              		.loc 1 1149 0
 1985 001a 7B69     		ldr	r3, [r7, #20]
 1986 001c E3E0     		b	.L96
 1987              	.L95:
1150:../libraries/CC3000_Host_Driver/wlan.c **** 	
1151:../libraries/CC3000_Host_Driver/wlan.c **** 	// read the received data from fileID #13 and parse it according to the followings:
1152:../libraries/CC3000_Host_Driver/wlan.c **** 	// 1) SSID LEN - not encrypted
1153:../libraries/CC3000_Host_Driver/wlan.c **** 	// 2) SSID - not encrypted
1154:../libraries/CC3000_Host_Driver/wlan.c **** 	// 3) KEY LEN - not encrypted. always 32 bytes long
1155:../libraries/CC3000_Host_Driver/wlan.c **** 	// 4) Security type - not encrypted
1156:../libraries/CC3000_Host_Driver/wlan.c **** 	// 5) KEY - encrypted together with true key length as the first byte in KEY
1157:../libraries/CC3000_Host_Driver/wlan.c **** 	//	 to elaborate, there are two corner cases:
1158:../libraries/CC3000_Host_Driver/wlan.c **** 	//		1) the KEY is 32 bytes long. In this case, the first byte does not represent KEY length
1159:../libraries/CC3000_Host_Driver/wlan.c **** 	//		2) the KEY is 31 bytes long. In this case, the first byte represent KEY length and equals 31
1160:../libraries/CC3000_Host_Driver/wlan.c **** 	returnValue = nvmem_read(NVMEM_SHARED_MEM_FILEID, SMART_CONFIG_PROFILE_SIZE, 0, profileArray);
 1988              		.loc 1 1160 0
 1989 001e 4FF00D00 		mov	r0, #13
 1990 0022 4FF04301 		mov	r1, #67
 1991 0026 4FF00002 		mov	r2, #0
 1992 002a 40F20003 		movw	r3, #:lower16:profileArray
 1993 002e C0F20003 		movt	r3, #:upper16:profileArray
 1994 0032 FFF7FEFF 		bl	nvmem_read
 1995 0036 7861     		str	r0, [r7, #20]
1161:../libraries/CC3000_Host_Driver/wlan.c **** 	
1162:../libraries/CC3000_Host_Driver/wlan.c **** 	if (returnValue != 0)
 1996              		.loc 1 1162 0
 1997 0038 7B69     		ldr	r3, [r7, #20]
 1998 003a 002B     		cmp	r3, #0
 1999 003c 01D0     		beq	.L97
1163:../libraries/CC3000_Host_Driver/wlan.c **** 		return returnValue;
 2000              		.loc 1 1163 0
 2001 003e 7B69     		ldr	r3, [r7, #20]
 2002 0040 D1E0     		b	.L96
 2003              	.L97:
1164:../libraries/CC3000_Host_Driver/wlan.c **** 	
1165:../libraries/CC3000_Host_Driver/wlan.c **** 	ssidPtr = &profileArray[1];
 2004              		.loc 1 1165 0
 2005 0042 6B4B     		ldr	r3, .L107
 2006 0044 BB60     		str	r3, [r7, #8]
1166:../libraries/CC3000_Host_Driver/wlan.c **** 	
1167:../libraries/CC3000_Host_Driver/wlan.c **** 	ssidLen = profileArray[0];
 2007              		.loc 1 1167 0
 2008 0046 40F20003 		movw	r3, #:lower16:profileArray
 2009 004a C0F20003 		movt	r3, #:upper16:profileArray
 2010 004e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2011 0050 7B60     		str	r3, [r7, #4]
1168:../libraries/CC3000_Host_Driver/wlan.c **** 	
1169:../libraries/CC3000_Host_Driver/wlan.c **** 	decKeyPtr = &profileArray[profileArray[0] + 3];
 2012              		.loc 1 1169 0
 2013 0052 40F20003 		movw	r3, #:lower16:profileArray
 2014 0056 C0F20003 		movt	r3, #:upper16:profileArray
 2015 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2016 005c 03F10302 		add	r2, r3, #3
 2017 0060 40F20003 		movw	r3, #:lower16:profileArray
 2018 0064 C0F20003 		movt	r3, #:upper16:profileArray
 2019 0068 D318     		adds	r3, r2, r3
 2020 006a FB60     		str	r3, [r7, #12]
1170:../libraries/CC3000_Host_Driver/wlan.c **** 	
1171:../libraries/CC3000_Host_Driver/wlan.c **** 	aes_decrypt(decKeyPtr, key);
 2021              		.loc 1 1171 0
 2022 006c F868     		ldr	r0, [r7, #12]
 2023 006e 40F20001 		movw	r1, #:lower16:key
 2024 0072 C0F20001 		movt	r1, #:upper16:key
 2025 0076 FFF7FEFF 		bl	aes_decrypt
1172:../libraries/CC3000_Host_Driver/wlan.c **** 	if (profileArray[profileArray[0] + 1] > 16)
 2026              		.loc 1 1172 0
 2027 007a 40F20003 		movw	r3, #:lower16:profileArray
 2028 007e C0F20003 		movt	r3, #:upper16:profileArray
 2029 0082 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2030 0084 03F10102 		add	r2, r3, #1
 2031 0088 40F20003 		movw	r3, #:lower16:profileArray
 2032 008c C0F20003 		movt	r3, #:upper16:profileArray
 2033 0090 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2034 0092 102B     		cmp	r3, #16
 2035 0094 09D9     		bls	.L98
1173:../libraries/CC3000_Host_Driver/wlan.c **** 		aes_decrypt((unsigned char *)(decKeyPtr + 16), key);
 2036              		.loc 1 1173 0
 2037 0096 FB68     		ldr	r3, [r7, #12]
 2038 0098 03F11003 		add	r3, r3, #16
 2039 009c 1846     		mov	r0, r3
 2040 009e 40F20001 		movw	r1, #:lower16:key
 2041 00a2 C0F20001 		movt	r1, #:upper16:key
 2042 00a6 FFF7FEFF 		bl	aes_decrypt
 2043              	.L98:
1174:../libraries/CC3000_Host_Driver/wlan.c **** 	
1175:../libraries/CC3000_Host_Driver/wlan.c **** 	if (*(unsigned char *)(decKeyPtr +31) != 0)
 2044              		.loc 1 1175 0
 2045 00aa FB68     		ldr	r3, [r7, #12]
 2046 00ac 03F11F03 		add	r3, r3, #31
 2047 00b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2048 00b2 002B     		cmp	r3, #0
 2049 00b4 0FD0     		beq	.L99
1176:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1177:../libraries/CC3000_Host_Driver/wlan.c **** 		if (*decKeyPtr == 31)
 2050              		.loc 1 1177 0
 2051 00b6 FB68     		ldr	r3, [r7, #12]
 2052 00b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2053 00ba 1F2B     		cmp	r3, #31
 2054 00bc 07D1     		bne	.L100
1178:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1179:../libraries/CC3000_Host_Driver/wlan.c **** 			keyLen = 31;
 2055              		.loc 1 1179 0
 2056 00be 4FF01F03 		mov	r3, #31
 2057 00c2 3B61     		str	r3, [r7, #16]
1180:../libraries/CC3000_Host_Driver/wlan.c **** 			decKeyPtr++;
 2058              		.loc 1 1180 0
 2059 00c4 FB68     		ldr	r3, [r7, #12]
 2060 00c6 03F10103 		add	r3, r3, #1
 2061 00ca FB60     		str	r3, [r7, #12]
 2062 00cc 0AE0     		b	.L101
 2063              	.L100:
1181:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1182:../libraries/CC3000_Host_Driver/wlan.c **** 		else
1183:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1184:../libraries/CC3000_Host_Driver/wlan.c **** 			keyLen = 32;
 2064              		.loc 1 1184 0
 2065 00ce 4FF02003 		mov	r3, #32
 2066 00d2 3B61     		str	r3, [r7, #16]
 2067 00d4 06E0     		b	.L101
 2068              	.L99:
1185:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1186:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1187:../libraries/CC3000_Host_Driver/wlan.c **** 	else
1188:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1189:../libraries/CC3000_Host_Driver/wlan.c **** 		keyLen = *decKeyPtr;
 2069              		.loc 1 1189 0
 2070 00d6 FB68     		ldr	r3, [r7, #12]
 2071 00d8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2072 00da 3B61     		str	r3, [r7, #16]
1190:../libraries/CC3000_Host_Driver/wlan.c **** 		decKeyPtr++;
 2073              		.loc 1 1190 0
 2074 00dc FB68     		ldr	r3, [r7, #12]
 2075 00de 03F10103 		add	r3, r3, #1
 2076 00e2 FB60     		str	r3, [r7, #12]
 2077              	.L101:
1191:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1192:../libraries/CC3000_Host_Driver/wlan.c **** 	
1193:../libraries/CC3000_Host_Driver/wlan.c **** 	// add a profile
1194:../libraries/CC3000_Host_Driver/wlan.c **** 	switch (profileArray[profileArray[0] + 2])
 2078              		.loc 1 1194 0
 2079 00e4 40F20003 		movw	r3, #:lower16:profileArray
 2080 00e8 C0F20003 		movt	r3, #:upper16:profileArray
 2081 00ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2082 00ee 03F10202 		add	r2, r3, #2
 2083 00f2 40F20003 		movw	r3, #:lower16:profileArray
 2084 00f6 C0F20003 		movt	r3, #:upper16:profileArray
 2085 00fa 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2086 00fc 032B     		cmp	r3, #3
 2087 00fe 71D8     		bhi	.L102
 2088 0100 01A2     		adr	r2, .L106
 2089 0102 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2090 0106 00BF     		.align	2
 2091              	.L106:
 2092 0108 19010000 		.word	.L103+1
 2093 010c 67010000 		.word	.L104+1
 2094 0110 B1010000 		.word	.L105+1
 2095 0114 B1010000 		.word	.L105+1
 2096              	.L103:
1195:../libraries/CC3000_Host_Driver/wlan.c **** 	{
1196:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_UNSEC://None
1197:../libraries/CC3000_Host_Driver/wlan.c **** 	 	{
1198:../libraries/CC3000_Host_Driver/wlan.c **** 			returnValue = wlan_add_profile(profileArray[profileArray[0] + 2], 	// security type
 2097              		.loc 1 1198 0
 2098 0118 40F20003 		movw	r3, #:lower16:profileArray
 2099 011c C0F20003 		movt	r3, #:upper16:profileArray
 2100 0120 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2101 0122 03F10202 		add	r2, r3, #2
 2102 0126 40F20003 		movw	r3, #:lower16:profileArray
 2103 012a C0F20003 		movt	r3, #:upper16:profileArray
 2104 012e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2105 0130 4FF00102 		mov	r2, #1
 2106 0134 0092     		str	r2, [sp, #0]
 2107 0136 4FF00002 		mov	r2, #0
 2108 013a 0192     		str	r2, [sp, #4]
 2109 013c 4FF00002 		mov	r2, #0
 2110 0140 0292     		str	r2, [sp, #8]
 2111 0142 4FF00002 		mov	r2, #0
 2112 0146 0392     		str	r2, [sp, #12]
 2113 0148 4FF00002 		mov	r2, #0
 2114 014c 0492     		str	r2, [sp, #16]
 2115 014e 4FF00002 		mov	r2, #0
 2116 0152 0592     		str	r2, [sp, #20]
 2117 0154 1846     		mov	r0, r3
 2118 0156 B968     		ldr	r1, [r7, #8]
 2119 0158 7A68     		ldr	r2, [r7, #4]
 2120 015a 4FF00003 		mov	r3, #0
 2121 015e FFF7FEFF 		bl	wlan_add_profile
 2122 0162 7861     		str	r0, [r7, #20]
1199:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidPtr,		 					// SSID
1200:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidLen, 							// SSID length
1201:../libraries/CC3000_Host_Driver/wlan.c **** 																		 NULL, 							// BSSID
1202:../libraries/CC3000_Host_Driver/wlan.c **** 																		 1,								// Priority
1203:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0, 0, 0, 0, 0);
1204:../libraries/CC3000_Host_Driver/wlan.c **** 			
1205:../libraries/CC3000_Host_Driver/wlan.c **** 			break;
 2123              		.loc 1 1205 0
 2124 0164 3EE0     		b	.L102
 2125              	.L104:
1206:../libraries/CC3000_Host_Driver/wlan.c **** 	 	}
1207:../libraries/CC3000_Host_Driver/wlan.c **** 		
1208:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WEP://WEP
1209:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1210:../libraries/CC3000_Host_Driver/wlan.c **** 			returnValue = wlan_add_profile(profileArray[profileArray[0] + 2], 	// security type
 2126              		.loc 1 1210 0
 2127 0166 40F20003 		movw	r3, #:lower16:profileArray
 2128 016a C0F20003 		movt	r3, #:upper16:profileArray
 2129 016e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2130 0170 03F10202 		add	r2, r3, #2
 2131 0174 40F20003 		movw	r3, #:lower16:profileArray
 2132 0178 C0F20003 		movt	r3, #:upper16:profileArray
 2133 017c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2134 017e 4FF00102 		mov	r2, #1
 2135 0182 0092     		str	r2, [sp, #0]
 2136 0184 3A69     		ldr	r2, [r7, #16]
 2137 0186 0192     		str	r2, [sp, #4]
 2138 0188 4FF00002 		mov	r2, #0
 2139 018c 0292     		str	r2, [sp, #8]
 2140 018e 4FF00002 		mov	r2, #0
 2141 0192 0392     		str	r2, [sp, #12]
 2142 0194 FA68     		ldr	r2, [r7, #12]
 2143 0196 0492     		str	r2, [sp, #16]
 2144 0198 4FF00002 		mov	r2, #0
 2145 019c 0592     		str	r2, [sp, #20]
 2146 019e 1846     		mov	r0, r3
 2147 01a0 B968     		ldr	r1, [r7, #8]
 2148 01a2 7A68     		ldr	r2, [r7, #4]
 2149 01a4 4FF00003 		mov	r3, #0
 2150 01a8 FFF7FEFF 		bl	wlan_add_profile
 2151 01ac 7861     		str	r0, [r7, #20]
1211:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidPtr, 							// SSID
1212:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidLen, 							// SSID length
1213:../libraries/CC3000_Host_Driver/wlan.c **** 																		 NULL, 							// BSSID
1214:../libraries/CC3000_Host_Driver/wlan.c **** 																		 1,								// Priority
1215:../libraries/CC3000_Host_Driver/wlan.c **** 																		 keyLen,							// KEY length
1216:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0, 								// KEY index
1217:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0,
1218:../libraries/CC3000_Host_Driver/wlan.c **** 																		 decKeyPtr,						// KEY
1219:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0);
1220:../libraries/CC3000_Host_Driver/wlan.c **** 			
1221:../libraries/CC3000_Host_Driver/wlan.c **** 			break;
 2152              		.loc 1 1221 0
 2153 01ae 19E0     		b	.L102
 2154              	.L105:
1222:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1223:../libraries/CC3000_Host_Driver/wlan.c **** 		
1224:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA://WPA
1225:../libraries/CC3000_Host_Driver/wlan.c **** 	case WLAN_SEC_WPA2://WPA2
1226:../libraries/CC3000_Host_Driver/wlan.c **** 		{
1227:../libraries/CC3000_Host_Driver/wlan.c **** 			returnValue = wlan_add_profile(WLAN_SEC_WPA2, 	// security type
 2155              		.loc 1 1227 0
 2156 01b0 4FF00103 		mov	r3, #1
 2157 01b4 0093     		str	r3, [sp, #0]
 2158 01b6 4FF01803 		mov	r3, #24
 2159 01ba 0193     		str	r3, [sp, #4]
 2160 01bc 4FF01E03 		mov	r3, #30
 2161 01c0 0293     		str	r3, [sp, #8]
 2162 01c2 4FF00203 		mov	r3, #2
 2163 01c6 0393     		str	r3, [sp, #12]
 2164 01c8 FB68     		ldr	r3, [r7, #12]
 2165 01ca 0493     		str	r3, [sp, #16]
 2166 01cc 3B69     		ldr	r3, [r7, #16]
 2167 01ce 0593     		str	r3, [sp, #20]
 2168 01d0 4FF00300 		mov	r0, #3
 2169 01d4 B968     		ldr	r1, [r7, #8]
 2170 01d6 7A68     		ldr	r2, [r7, #4]
 2171 01d8 4FF00003 		mov	r3, #0
 2172 01dc FFF7FEFF 		bl	wlan_add_profile
 2173 01e0 7861     		str	r0, [r7, #20]
1228:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidPtr,
1229:../libraries/CC3000_Host_Driver/wlan.c **** 																		 ssidLen,
1230:../libraries/CC3000_Host_Driver/wlan.c **** 																		 NULL, 							// BSSID
1231:../libraries/CC3000_Host_Driver/wlan.c **** 																		 1,								// Priority
1232:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0x18,							// PairwiseCipher
1233:../libraries/CC3000_Host_Driver/wlan.c **** 																		 0x1e, 							// GroupCipher
1234:../libraries/CC3000_Host_Driver/wlan.c **** 																		 2,								// KEY management
1235:../libraries/CC3000_Host_Driver/wlan.c **** 																		 decKeyPtr,						// KEY
1236:../libraries/CC3000_Host_Driver/wlan.c **** 																		 keyLen);							// KEY length
1237:../libraries/CC3000_Host_Driver/wlan.c **** 			
1238:../libraries/CC3000_Host_Driver/wlan.c **** 			break;
 2174              		.loc 1 1238 0
 2175 01e2 00BF     		nop
 2176              	.L102:
1239:../libraries/CC3000_Host_Driver/wlan.c **** 		}
1240:../libraries/CC3000_Host_Driver/wlan.c **** 	}
1241:../libraries/CC3000_Host_Driver/wlan.c **** 	
1242:../libraries/CC3000_Host_Driver/wlan.c **** 	return returnValue;
 2177              		.loc 1 1242 0
 2178 01e4 7B69     		ldr	r3, [r7, #20]
 2179              	.L96:
1243:../libraries/CC3000_Host_Driver/wlan.c **** }
 2180              		.loc 1 1243 0
 2181 01e6 1846     		mov	r0, r3
 2182 01e8 07F11807 		add	r7, r7, #24
 2183 01ec BD46     		mov	sp, r7
 2184 01ee 80BD     		pop	{r7, pc}
 2185              	.L108:
 2186              		.align	2
 2187              	.L107:
 2188 01f0 01000000 		.word	profileArray+1
 2189              		.cfi_endproc
 2190              	.LFE73:
 2192              		.text
 2193              	.Letext0:
 2194              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 2195              		.file 3 "../libraries/CC3000_Host_Driver/cc3000_common.h"
 2196              		.file 4 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
 2197              		.file 5 "/Users/zac/code/spark/marvin/inc/cc3000_spi.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 wlan.c
                            *COM*:0000000000000044 tSLInformation
                            *COM*:0000000000000010 key
                            *COM*:0000000000000043 profileArray
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:22     .text.SimpleLink_Init_Start:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:26     .text.SimpleLink_Init_Start:0000000000000000 SimpleLink_Init_Start
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:85     .text.wlan_init:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:90     .text.wlan_init:0000000000000000 wlan_init
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:165    .text.SpiReceiveHandler:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:170    .text.SpiReceiveHandler:0000000000000000 SpiReceiveHandler
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:208    .text.wlan_start:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:213    .text.wlan_start:0000000000000000 wlan_start
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:370    .text.wlan_stop:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:375    .text.wlan_stop:0000000000000000 wlan_stop
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:426    .text.wlan_connect:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:431    .text.wlan_connect:0000000000000000 wlan_connect
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:661    .text.wlan_disconnect:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:666    .text.wlan_disconnect:0000000000000000 wlan_disconnect
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:717    .text.wlan_ioctl_set_connection_policy:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:722    .text.wlan_ioctl_set_connection_policy:0000000000000000 wlan_ioctl_set_connection_policy
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:790    .text.wlan_add_profile:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:795    .text.wlan_add_profile:0000000000000000 wlan_add_profile
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:855    .text.wlan_add_profile:0000000000000064 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:861    .text.wlan_add_profile:0000000000000074 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1337   .text.wlan_ioctl_del_profile:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1342   .text.wlan_ioctl_del_profile:0000000000000000 wlan_ioctl_del_profile
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1398   .text.wlan_ioctl_get_scan_results:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1403   .text.wlan_ioctl_get_scan_results:0000000000000000 wlan_ioctl_get_scan_results
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1456   .text.wlan_ioctl_set_scan_params:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1461   .text.wlan_ioctl_set_scan_params:0000000000000000 wlan_ioctl_set_scan_params
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1583   .text.wlan_set_event_mask:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1588   .text.wlan_set_event_mask:0000000000000000 wlan_set_event_mask
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1683   .text.wlan_ioctl_statusget:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1688   .text.wlan_ioctl_statusget:0000000000000000 wlan_ioctl_statusget
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1734   .text.wlan_smart_config_start:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1739   .text.wlan_smart_config_start:0000000000000000 wlan_smart_config_start
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1798   .text.wlan_smart_config_stop:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1803   .text.wlan_smart_config_stop:0000000000000000 wlan_smart_config_stop
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1849   .text.wlan_smart_config_set_prefix:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1854   .text.wlan_smart_config_set_prefix:0000000000000000 wlan_smart_config_set_prefix
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1953   .text.wlan_smart_config_process:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:1958   .text.wlan_smart_config_process:0000000000000000 wlan_smart_config_process
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:2092   .text.wlan_smart_config_process:0000000000000108 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:2098   .text.wlan_smart_config_process:0000000000000118 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccc9en7Q.s:2188   .text.wlan_smart_config_process:00000000000001f0 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:0000000000000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:0000000000000000 wm4.stddef.h.187.9e651b6b8b16e149c1353259404973ea
                           .group:0000000000000000 wm4.string.h.17.f8d12df81104836a3f2a5d589ae830d8
                           .group:0000000000000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:0000000000000000 wm4.stddef.h.235.fb53403984550eba259277227435d55a
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:0000000000000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:0000000000000000 wm4.errno.h.9.65044c2b5d8494e43f5986ab0a1d770f
                           .group:0000000000000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:0000000000000000 wm4.cc3000_common.h.58.2af7f8f8921b8cb4b89883c25878e207
                           .group:0000000000000000 wm4.wlan.h.50.c5375bd1ff0b62d103425d9a2fb7a26e
                           .group:0000000000000000 wm4.hci.h.36.c53403a55b478473c6d08326a2c2336c
                           .group:0000000000000000 wm4.platform_config.h.13.40eb885bb536156af5c03b48263b5da1
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.31.74a586c036c8ee5d9205c6728cc8d6ab
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.platform_config.h.55.c9956ee2c5ec010802c11a3a06087af4
                           .group:0000000000000000 wm4.usb_conf.h.13.ae0ffce2e8d0e4c6b2724f8ae0ada8cf
                           .group:0000000000000000 wm4.hw_config.h.61.9aaf7ecb821816183829c116d76d82b5
                           .group:0000000000000000 wm4.cc3000_spi.h.23.1c29ffde27bc0db6b69332f529b4950f
                           .group:0000000000000000 wm4.socket.h.36.a8c628533ac074dc9bf38f87e586f707
                           .group:0000000000000000 wm4.nvmem.h.36.ee544af6426a64366cdb46d882de9ae2
                           .group:0000000000000000 wm4.security.h.36.98bbd60412404fdd1becbd443773c316
                           .group:0000000000000000 wm4.evnt_handler.h.36.be99e6836a9f57d146a5dafeb0edb1e6

UNDEFINED SYMBOLS
hci_command_send
SimpleLinkWaitEvent
hci_unsolicited_event_handler
wlan_tx_buffer
SpiOpen
SpiClose
UINT32_TO_STREAM_f
UINT16_TO_STREAM_f
__errno
aes_read_key
nvmem_read
aes_decrypt
