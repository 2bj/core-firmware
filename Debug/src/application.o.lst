   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"application.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.setup,"ax",%progbits
  19              		.align	2
  20              		.global	setup
  21              		.thumb
  22              		.thumb_func
  24              	setup:
  25              	.LFB56:
  26              		.file 1 "../src/application.c"
   1:../src/application.c **** #include "application.h"
   2:../src/application.c **** #include <stdlib.h>
   3:../src/application.c **** #include <string.h>
   4:../src/application.c **** 
   5:../src/application.c **** // see http://www.dfrobot.com/wiki/index.php?title=Arduino_Motor_Shield_(L298N)_(SKU:DRI0009)
   6:../src/application.c **** 
   7:../src/application.c **** #define LEFT_PWM   A7 // Motor Shield E1, Arduino D6
   8:../src/application.c **** #define RIGHT_PWM  D1 // Motor Shield E2, Arduino D5
   9:../src/application.c **** 
  10:../src/application.c **** #define LEFT_BACK  D4 // Motor Shield M1, Arduino D7
  11:../src/application.c **** #define RIGHT_BACK D3 // Motor Shield M2, Arduino D4
  12:../src/application.c **** 
  13:../src/application.c **** #define FORWARD_BACK_MULTIPLIER  (1.5)
  14:../src/application.c **** #define TURNING_MULTIPLIER       (1.5)
  15:../src/application.c **** 
  16:../src/application.c **** void setup()
  17:../src/application.c **** {
  27              		.loc 1 17 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  18:../src/application.c **** 	pinMode(LEFT_PWM, OUTPUT);
  39              		.loc 1 18 0
  40 0004 4FF01100 		mov	r0, #17
  41 0008 4FF00001 		mov	r1, #0
  42 000c FFF7FEFF 		bl	pinMode
  19:../src/application.c **** 	pinMode(RIGHT_PWM, OUTPUT);
  43              		.loc 1 19 0
  44 0010 4FF00100 		mov	r0, #1
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	pinMode
  20:../src/application.c **** 	pinMode(LEFT_BACK, OUTPUT);
  47              		.loc 1 20 0
  48 001c 4FF00400 		mov	r0, #4
  49 0020 4FF00001 		mov	r1, #0
  50 0024 FFF7FEFF 		bl	pinMode
  21:../src/application.c **** 	pinMode(RIGHT_BACK, OUTPUT);
  51              		.loc 1 21 0
  52 0028 4FF00300 		mov	r0, #3
  53 002c 4FF00001 		mov	r1, #0
  54 0030 FFF7FEFF 		bl	pinMode
  22:../src/application.c **** }
  55              		.loc 1 22 0
  56 0034 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE56:
  60 0036 00BF     		.section	.text.loop,"ax",%progbits
  61              		.align	2
  62              		.global	loop
  63              		.thumb
  64              		.thumb_func
  66              	loop:
  67              	.LFB57:
  23:../src/application.c **** 
  24:../src/application.c **** void loop()
  25:../src/application.c **** {
  68              		.loc 1 25 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 00AF     		add	r7, sp, #0
  78              	.LCFI3:
  79              		.cfi_def_cfa_register 7
  26:../src/application.c **** }
  80              		.loc 1 26 0
  81 0004 BD46     		mov	sp, r7
  82 0006 80BC     		pop	{r7}
  83 0008 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE57:
  87 000a 00BF     		.section	.rodata
  88              		.align	2
  89              	.LC0:
  90 0000 666400   		.ascii	"fd\000"
  91              		.global	__aeabi_i2d
  92              		.global	__aeabi_dmul
  93              		.global	__aeabi_d2uiz
  94 0003 00       		.align	2
  95              	.LC1:
  96 0004 626B00   		.ascii	"bk\000"
  97 0007 00       		.align	2
  98              	.LC2:
  99 0008 727400   		.ascii	"rt\000"
 100 000b 00       		.align	2
 101              	.LC3:
 102 000c 6C7400   		.ascii	"lt\000"
 103              		.section	.text.drive,"ax",%progbits
 104              		.align	2
 105              		.global	drive
 106              		.thumb
 107              		.thumb_func
 109              	drive:
 110              	.LFB58:
  27:../src/application.c **** 
  28:../src/application.c **** void drive(const char *command)
  29:../src/application.c **** {
 111              		.loc 1 29 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 16
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 84B0     		sub	sp, sp, #16
 121              	.LCFI5:
 122              		.cfi_def_cfa_offset 24
 123 0004 00AF     		add	r7, sp, #0
 124              	.LCFI6:
 125              		.cfi_def_cfa_register 7
 126 0006 7860     		str	r0, [r7, #4]
  30:../src/application.c **** 	long val = strtol(command + 3, NULL, 10);
 127              		.loc 1 30 0
 128 0008 7B68     		ldr	r3, [r7, #4]
 129 000a 03F10303 		add	r3, r3, #3
 130 000e 1846     		mov	r0, r3
 131 0010 4FF00001 		mov	r1, #0
 132 0014 4FF00A02 		mov	r2, #10
 133 0018 FFF7FEFF 		bl	strtol
 134 001c F860     		str	r0, [r7, #12]
  31:../src/application.c **** 	if (0 == strncmp(command, "fd", 2))
 135              		.loc 1 31 0
 136 001e 7868     		ldr	r0, [r7, #4]
 137 0020 40F20001 		movw	r1, #:lower16:.LC0
 138 0024 C0F20001 		movt	r1, #:upper16:.LC0
 139 0028 4FF00202 		mov	r2, #2
 140 002c FFF7FEFF 		bl	strncmp
 141 0030 0346     		mov	r3, r0
 142 0032 002B     		cmp	r3, #0
 143 0034 31D1     		bne	.L4
  32:../src/application.c **** 	{
  33:../src/application.c **** 		digitalWrite(LEFT_PWM, HIGH);
 144              		.loc 1 33 0
 145 0036 4FF01100 		mov	r0, #17
 146 003a 4FF00101 		mov	r1, #1
 147 003e FFF7FEFF 		bl	digitalWrite
  34:../src/application.c **** 		digitalWrite(RIGHT_PWM, HIGH);
 148              		.loc 1 34 0
 149 0042 4FF00100 		mov	r0, #1
 150 0046 4FF00101 		mov	r1, #1
 151 004a FFF7FEFF 		bl	digitalWrite
  35:../src/application.c **** 		digitalWrite(LEFT_BACK, LOW);
 152              		.loc 1 35 0
 153 004e 4FF00400 		mov	r0, #4
 154 0052 4FF00001 		mov	r1, #0
 155 0056 FFF7FEFF 		bl	digitalWrite
  36:../src/application.c **** 		digitalWrite(RIGHT_BACK, LOW);
 156              		.loc 1 36 0
 157 005a 4FF00300 		mov	r0, #3
 158 005e 4FF00001 		mov	r1, #0
 159 0062 FFF7FEFF 		bl	digitalWrite
  37:../src/application.c **** 		delay(val * FORWARD_BACK_MULTIPLIER);
 160              		.loc 1 37 0
 161 0066 F868     		ldr	r0, [r7, #12]
 162 0068 FFF7FEFF 		bl	__aeabi_i2d
 163 006c 0246     		mov	r2, r0
 164 006e 0B46     		mov	r3, r1
 165 0070 1046     		mov	r0, r2
 166 0072 1946     		mov	r1, r3
 167 0074 4FF00002 		mov	r2, #0
 168 0078 4FF00003 		mov	r3, #0
 169 007c C3F6F873 		movt	r3, 16376
 170 0080 FFF7FEFF 		bl	__aeabi_dmul
 171 0084 0246     		mov	r2, r0
 172 0086 0B46     		mov	r3, r1
 173 0088 1046     		mov	r0, r2
 174 008a 1946     		mov	r1, r3
 175 008c FFF7FEFF 		bl	__aeabi_d2uiz
 176 0090 0346     		mov	r3, r0
 177 0092 1846     		mov	r0, r3
 178 0094 FFF7FEFF 		bl	delay
 179 0098 B8E0     		b	.L5
 180              	.L4:
  38:../src/application.c **** 	}
  39:../src/application.c **** 	else if (0 == strncmp(command, "bk", 2))
 181              		.loc 1 39 0
 182 009a 7868     		ldr	r0, [r7, #4]
 183 009c 40F20001 		movw	r1, #:lower16:.LC1
 184 00a0 C0F20001 		movt	r1, #:upper16:.LC1
 185 00a4 4FF00202 		mov	r2, #2
 186 00a8 FFF7FEFF 		bl	strncmp
 187 00ac 0346     		mov	r3, r0
 188 00ae 002B     		cmp	r3, #0
 189 00b0 31D1     		bne	.L6
  40:../src/application.c **** 	{
  41:../src/application.c **** 		digitalWrite(LEFT_PWM, HIGH);
 190              		.loc 1 41 0
 191 00b2 4FF01100 		mov	r0, #17
 192 00b6 4FF00101 		mov	r1, #1
 193 00ba FFF7FEFF 		bl	digitalWrite
  42:../src/application.c **** 		digitalWrite(RIGHT_PWM, HIGH);
 194              		.loc 1 42 0
 195 00be 4FF00100 		mov	r0, #1
 196 00c2 4FF00101 		mov	r1, #1
 197 00c6 FFF7FEFF 		bl	digitalWrite
  43:../src/application.c **** 		digitalWrite(LEFT_BACK, HIGH);
 198              		.loc 1 43 0
 199 00ca 4FF00400 		mov	r0, #4
 200 00ce 4FF00101 		mov	r1, #1
 201 00d2 FFF7FEFF 		bl	digitalWrite
  44:../src/application.c **** 		digitalWrite(RIGHT_BACK, HIGH);
 202              		.loc 1 44 0
 203 00d6 4FF00300 		mov	r0, #3
 204 00da 4FF00101 		mov	r1, #1
 205 00de FFF7FEFF 		bl	digitalWrite
  45:../src/application.c **** 		delay(val * FORWARD_BACK_MULTIPLIER);
 206              		.loc 1 45 0
 207 00e2 F868     		ldr	r0, [r7, #12]
 208 00e4 FFF7FEFF 		bl	__aeabi_i2d
 209 00e8 0246     		mov	r2, r0
 210 00ea 0B46     		mov	r3, r1
 211 00ec 1046     		mov	r0, r2
 212 00ee 1946     		mov	r1, r3
 213 00f0 4FF00002 		mov	r2, #0
 214 00f4 4FF00003 		mov	r3, #0
 215 00f8 C3F6F873 		movt	r3, 16376
 216 00fc FFF7FEFF 		bl	__aeabi_dmul
 217 0100 0246     		mov	r2, r0
 218 0102 0B46     		mov	r3, r1
 219 0104 1046     		mov	r0, r2
 220 0106 1946     		mov	r1, r3
 221 0108 FFF7FEFF 		bl	__aeabi_d2uiz
 222 010c 0346     		mov	r3, r0
 223 010e 1846     		mov	r0, r3
 224 0110 FFF7FEFF 		bl	delay
 225 0114 7AE0     		b	.L5
 226              	.L6:
  46:../src/application.c **** 	}
  47:../src/application.c **** 	else if (0 == strncmp(command, "rt", 2))
 227              		.loc 1 47 0
 228 0116 7868     		ldr	r0, [r7, #4]
 229 0118 40F20001 		movw	r1, #:lower16:.LC2
 230 011c C0F20001 		movt	r1, #:upper16:.LC2
 231 0120 4FF00202 		mov	r2, #2
 232 0124 FFF7FEFF 		bl	strncmp
 233 0128 0346     		mov	r3, r0
 234 012a 002B     		cmp	r3, #0
 235 012c 31D1     		bne	.L7
  48:../src/application.c **** 	{
  49:../src/application.c **** 		digitalWrite(LEFT_PWM, HIGH);
 236              		.loc 1 49 0
 237 012e 4FF01100 		mov	r0, #17
 238 0132 4FF00101 		mov	r1, #1
 239 0136 FFF7FEFF 		bl	digitalWrite
  50:../src/application.c **** 		digitalWrite(RIGHT_PWM, LOW);
 240              		.loc 1 50 0
 241 013a 4FF00100 		mov	r0, #1
 242 013e 4FF00001 		mov	r1, #0
 243 0142 FFF7FEFF 		bl	digitalWrite
  51:../src/application.c **** 		digitalWrite(LEFT_BACK, LOW);
 244              		.loc 1 51 0
 245 0146 4FF00400 		mov	r0, #4
 246 014a 4FF00001 		mov	r1, #0
 247 014e FFF7FEFF 		bl	digitalWrite
  52:../src/application.c **** 		digitalWrite(RIGHT_BACK, LOW);
 248              		.loc 1 52 0
 249 0152 4FF00300 		mov	r0, #3
 250 0156 4FF00001 		mov	r1, #0
 251 015a FFF7FEFF 		bl	digitalWrite
  53:../src/application.c **** 		delay(val * TURNING_MULTIPLIER);
 252              		.loc 1 53 0
 253 015e F868     		ldr	r0, [r7, #12]
 254 0160 FFF7FEFF 		bl	__aeabi_i2d
 255 0164 0246     		mov	r2, r0
 256 0166 0B46     		mov	r3, r1
 257 0168 1046     		mov	r0, r2
 258 016a 1946     		mov	r1, r3
 259 016c 4FF00002 		mov	r2, #0
 260 0170 4FF00003 		mov	r3, #0
 261 0174 C3F6F873 		movt	r3, 16376
 262 0178 FFF7FEFF 		bl	__aeabi_dmul
 263 017c 0246     		mov	r2, r0
 264 017e 0B46     		mov	r3, r1
 265 0180 1046     		mov	r0, r2
 266 0182 1946     		mov	r1, r3
 267 0184 FFF7FEFF 		bl	__aeabi_d2uiz
 268 0188 0346     		mov	r3, r0
 269 018a 1846     		mov	r0, r3
 270 018c FFF7FEFF 		bl	delay
 271 0190 3CE0     		b	.L5
 272              	.L7:
  54:../src/application.c **** 	}
  55:../src/application.c **** 	else if (0 == strncmp(command, "lt", 2))
 273              		.loc 1 55 0
 274 0192 7868     		ldr	r0, [r7, #4]
 275 0194 40F20001 		movw	r1, #:lower16:.LC3
 276 0198 C0F20001 		movt	r1, #:upper16:.LC3
 277 019c 4FF00202 		mov	r2, #2
 278 01a0 FFF7FEFF 		bl	strncmp
 279 01a4 0346     		mov	r3, r0
 280 01a6 002B     		cmp	r3, #0
 281 01a8 30D1     		bne	.L5
  56:../src/application.c **** 	{
  57:../src/application.c **** 		digitalWrite(LEFT_PWM, LOW);
 282              		.loc 1 57 0
 283 01aa 4FF01100 		mov	r0, #17
 284 01ae 4FF00001 		mov	r1, #0
 285 01b2 FFF7FEFF 		bl	digitalWrite
  58:../src/application.c **** 		digitalWrite(RIGHT_PWM, HIGH);
 286              		.loc 1 58 0
 287 01b6 4FF00100 		mov	r0, #1
 288 01ba 4FF00101 		mov	r1, #1
 289 01be FFF7FEFF 		bl	digitalWrite
  59:../src/application.c **** 		digitalWrite(LEFT_BACK, LOW);
 290              		.loc 1 59 0
 291 01c2 4FF00400 		mov	r0, #4
 292 01c6 4FF00001 		mov	r1, #0
 293 01ca FFF7FEFF 		bl	digitalWrite
  60:../src/application.c **** 		digitalWrite(RIGHT_BACK, LOW);
 294              		.loc 1 60 0
 295 01ce 4FF00300 		mov	r0, #3
 296 01d2 4FF00001 		mov	r1, #0
 297 01d6 FFF7FEFF 		bl	digitalWrite
  61:../src/application.c **** 		delay(val * TURNING_MULTIPLIER);
 298              		.loc 1 61 0
 299 01da F868     		ldr	r0, [r7, #12]
 300 01dc FFF7FEFF 		bl	__aeabi_i2d
 301 01e0 0246     		mov	r2, r0
 302 01e2 0B46     		mov	r3, r1
 303 01e4 1046     		mov	r0, r2
 304 01e6 1946     		mov	r1, r3
 305 01e8 4FF00002 		mov	r2, #0
 306 01ec 4FF00003 		mov	r3, #0
 307 01f0 C3F6F873 		movt	r3, 16376
 308 01f4 FFF7FEFF 		bl	__aeabi_dmul
 309 01f8 0246     		mov	r2, r0
 310 01fa 0B46     		mov	r3, r1
 311 01fc 1046     		mov	r0, r2
 312 01fe 1946     		mov	r1, r3
 313 0200 FFF7FEFF 		bl	__aeabi_d2uiz
 314 0204 0346     		mov	r3, r0
 315 0206 1846     		mov	r0, r3
 316 0208 FFF7FEFF 		bl	delay
 317              	.L5:
  62:../src/application.c **** 	}
  63:../src/application.c **** 	digitalWrite(LEFT_PWM, LOW);
 318              		.loc 1 63 0
 319 020c 4FF01100 		mov	r0, #17
 320 0210 4FF00001 		mov	r1, #0
 321 0214 FFF7FEFF 		bl	digitalWrite
  64:../src/application.c **** 	digitalWrite(RIGHT_PWM, LOW);
 322              		.loc 1 64 0
 323 0218 4FF00100 		mov	r0, #1
 324 021c 4FF00001 		mov	r1, #0
 325 0220 FFF7FEFF 		bl	digitalWrite
  65:../src/application.c **** 	digitalWrite(LEFT_BACK, LOW);
 326              		.loc 1 65 0
 327 0224 4FF00400 		mov	r0, #4
 328 0228 4FF00001 		mov	r1, #0
 329 022c FFF7FEFF 		bl	digitalWrite
  66:../src/application.c **** 	digitalWrite(RIGHT_BACK, LOW);
 330              		.loc 1 66 0
 331 0230 4FF00300 		mov	r0, #3
 332 0234 4FF00001 		mov	r1, #0
 333 0238 FFF7FEFF 		bl	digitalWrite
  67:../src/application.c **** }
 334              		.loc 1 67 0
 335 023c 07F11007 		add	r7, r7, #16
 336 0240 BD46     		mov	sp, r7
 337 0242 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE58:
 341              		.section	.rodata
 342 000f 00       		.align	2
 343              	.LC4:
 344 0010 00000000 		.ascii	"\000\000\000\000\000\000\000"
 344      000000
 345 0017 00       		.section	.text.userFunction,"ax",%progbits
 346              		.align	2
 347              		.global	userFunction
 348              		.thumb
 349              		.thumb_func
 351              	userFunction:
 352              	.LFB59:
  68:../src/application.c **** 
  69:../src/application.c **** char userFunction(char *message)
  70:../src/application.c **** {
 353              		.loc 1 70 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 24
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 80B5     		push	{r7, lr}
 358              	.LCFI7:
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 86B0     		sub	sp, sp, #24
 363              	.LCFI8:
 364              		.cfi_def_cfa_offset 32
 365 0004 00AF     		add	r7, sp, #0
 366              	.LCFI9:
 367              		.cfi_def_cfa_register 7
 368 0006 7860     		str	r0, [r7, #4]
  71:../src/application.c **** 	char command[7] = "\0\0\0\0\0\0";
 369              		.loc 1 71 0
 370 0008 40F20002 		movw	r2, #:lower16:.LC4
 371 000c C0F20002 		movt	r2, #:upper16:.LC4
 372 0010 07F10803 		add	r3, r7, #8
 373 0014 92E80300 		ldmia	r2, {r0, r1}
 374 0018 1860     		str	r0, [r3, #0]
 375 001a 03F10403 		add	r3, r3, #4
 376 001e 1980     		strh	r1, [r3, #0]	@ movhi
 377 0020 03F10203 		add	r3, r3, #2
 378 0024 4FEA1142 		lsr	r2, r1, #16
 379 0028 1A70     		strb	r2, [r3, #0]
  72:../src/application.c **** 	size_t length;
  73:../src/application.c **** 	char *comma = strchr(message, ',');
 380              		.loc 1 73 0
 381 002a 7868     		ldr	r0, [r7, #4]
 382 002c 4FF02C01 		mov	r1, #44
 383 0030 FFF7FEFF 		bl	strchr
 384 0034 7861     		str	r0, [r7, #20]
  74:../src/application.c **** 	while (NULL != comma)
 385              		.loc 1 74 0
 386 0036 20E0     		b	.L9
 387              	.L10:
  75:../src/application.c **** 	{
  76:../src/application.c **** 		length = comma - message;
 388              		.loc 1 76 0
 389 0038 7A69     		ldr	r2, [r7, #20]
 390 003a 7B68     		ldr	r3, [r7, #4]
 391 003c D31A     		subs	r3, r2, r3
 392 003e 3B61     		str	r3, [r7, #16]
  77:../src/application.c **** 		strncpy(command, message, length);
 393              		.loc 1 77 0
 394 0040 07F10803 		add	r3, r7, #8
 395 0044 1846     		mov	r0, r3
 396 0046 7968     		ldr	r1, [r7, #4]
 397 0048 3A69     		ldr	r2, [r7, #16]
 398 004a FFF7FEFF 		bl	strncpy
  78:../src/application.c **** 		command[length] = '\0';
 399              		.loc 1 78 0
 400 004e 07F10802 		add	r2, r7, #8
 401 0052 3B69     		ldr	r3, [r7, #16]
 402 0054 D318     		adds	r3, r2, r3
 403 0056 4FF00002 		mov	r2, #0
 404 005a 1A70     		strb	r2, [r3, #0]
  79:../src/application.c **** 		drive(command);
 405              		.loc 1 79 0
 406 005c 07F10803 		add	r3, r7, #8
 407 0060 1846     		mov	r0, r3
 408 0062 FFF7FEFF 		bl	drive
  80:../src/application.c **** 		message = comma + 1;
 409              		.loc 1 80 0
 410 0066 7B69     		ldr	r3, [r7, #20]
 411 0068 03F10103 		add	r3, r3, #1
 412 006c 7B60     		str	r3, [r7, #4]
  81:../src/application.c **** 		comma = strchr(message, ',');
 413              		.loc 1 81 0
 414 006e 7868     		ldr	r0, [r7, #4]
 415 0070 4FF02C01 		mov	r1, #44
 416 0074 FFF7FEFF 		bl	strchr
 417 0078 7861     		str	r0, [r7, #20]
 418              	.L9:
  74:../src/application.c **** 	while (NULL != comma)
 419              		.loc 1 74 0 discriminator 1
 420 007a 7B69     		ldr	r3, [r7, #20]
 421 007c 002B     		cmp	r3, #0
 422 007e DBD1     		bne	.L10
  82:../src/application.c **** 	}
  83:../src/application.c **** 	strncpy(command, message, 6);
 423              		.loc 1 83 0
 424 0080 07F10803 		add	r3, r7, #8
 425 0084 1846     		mov	r0, r3
 426 0086 7968     		ldr	r1, [r7, #4]
 427 0088 4FF00602 		mov	r2, #6
 428 008c FFF7FEFF 		bl	strncpy
  84:../src/application.c **** 	drive(command);
 429              		.loc 1 84 0
 430 0090 07F10803 		add	r3, r7, #8
 431 0094 1846     		mov	r0, r3
 432 0096 FFF7FEFF 		bl	drive
  85:../src/application.c **** 	return 0;
 433              		.loc 1 85 0
 434 009a 4FF00003 		mov	r3, #0
  86:../src/application.c **** }
 435              		.loc 1 86 0
 436 009e 1846     		mov	r0, r3
 437 00a0 07F11807 		add	r7, r7, #24
 438 00a4 BD46     		mov	sp, r7
 439 00a6 80BD     		pop	{r7, pc}
 440              		.cfi_endproc
 441              	.LFE59:
 443              		.text
 444              	.Letext0:
 445              		.file 2 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 446              		.file 3 "/usr/local/gcc-arm-none-eabi-4_7-2013q1/bin/../lib/gcc/arm-none-eabi/4.7.3/include/stddef
 447              		.file 4 "/Users/zac/code/spark/marvin/inc/spark_wiring.h"
 448              		.file 5 "/Users/zac/code/spark/marvin/libraries/CMSIS/Include/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 application.c
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:19     .text.setup:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:24     .text.setup:0000000000000000 setup
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:61     .text.loop:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:66     .text.loop:0000000000000000 loop
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:88     .rodata:0000000000000000 $d
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:89     .rodata:0000000000000000 .LC0
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:95     .rodata:0000000000000004 .LC1
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:98     .rodata:0000000000000008 .LC2
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:101    .rodata:000000000000000c .LC3
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:104    .text.drive:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:109    .text.drive:0000000000000000 drive
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:343    .rodata:0000000000000010 .LC4
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:346    .text.userFunction:0000000000000000 $t
/var/folders/d1/846xqcps64v4wybnmd7kk8540000gn/T//ccyd1bxc.s:351    .text.userFunction:0000000000000000 userFunction
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.8991b0b359e9e91a82acb66692cb6642
                           .group:0000000000000000 wm4.stm32f10x.h.57.69ab29c83f735418a543aa508b559235
                           .group:0000000000000000 wm4.core_cm3.h.32.8e21fbd14bb96c2b40e026c4d2c8fe1f
                           .group:0000000000000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:0000000000000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:0000000000000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:0000000000000000 wm4._ansi.h.23.b5bb84d7ba97d82b5b1dc1826a7ae811
                           .group:0000000000000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:0000000000000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:0000000000000000 wm4.core_cm3.h.129.e08b7204181ea22e6a9fa84cb9ad0924
                           .group:0000000000000000 wm4.stm32f10x.h.532.91bd57525f6c583f00129a351847d405
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.31.74a586c036c8ee5d9205c6728cc8d6ab
                           .group:0000000000000000 wm4.stm32f10x_dma.h.31.ef16218235edc52b414c0353f44b4bf0
                           .group:0000000000000000 wm4.stm32f10x_exti.h.31.b25bcb4f1a2daad39d2d7dfa4e901646
                           .group:0000000000000000 wm4.stm32f10x_flash.h.31.0203bc95b65c5396b67991e07a675efb
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.31.0a32659dbac1fc1055c7cbdc248963be
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.31.93d7dc2d477856f119d957730d4c6f1c
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.31.9168b6921e0cf03b467c7ed90861c701
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.31.2ee3219a25ef4ced658f2fe9d8cd94aa
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.31.00ba78fc0dbb06b6e6783a1e7fccf5a0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.31.d2f6e4626887cabe8c98f3a185590a36
                           .group:0000000000000000 wm4.stm32f10x_tim.h.31.6c06f7f26e0864f9cd59597f46ca2c7c
                           .group:0000000000000000 wm4.stm32f10x_usart.h.31.28d75d6af05cefbbfa00cf30a7c8a335
                           .group:0000000000000000 wm4.misc.h.31.a89fba2040036f6f8c835a78a213e0cd
                           .group:0000000000000000 wm4.stm32f10x.h.8356.9fd2fa84655112ac7dfc5c88beeb383d
                           .group:0000000000000000 wm4.spark_wiring.h.17.0130f458304c74456341a971e255779e
                           .group:0000000000000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:0000000000000000 wm4.stddef.h.187.40b3a084f9bc2c020a9e00b9eabe9c14
                           .group:0000000000000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:0000000000000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:0000000000000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:0000000000000000 wm4.stddef.h.235.d9f4f80b8c4429535175712282cda6a6
                           .group:0000000000000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
pinMode
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
strtol
strncmp
digitalWrite
delay
strchr
strncpy
